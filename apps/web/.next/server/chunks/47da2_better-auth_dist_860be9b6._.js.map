{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.CW6D9eSx.mjs"],"sourcesContent":["const getDate = (span, unit = \"ms\") => {\n  return new Date(Date.now() + (unit === \"sec\" ? span * 1e3 : span));\n};\n\nexport { getDate as g };\n"],"names":[],"mappings":";;;AAAA,MAAM,UAAU,CAAC,MAAM,OAAO,IAAI;IAChC,OAAO,IAAI,KAAK,KAAK,GAAG,KAAK,CAAC,SAAS,QAAQ,OAAO,MAAM,IAAI;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.BKEtEpt0.mjs"],"sourcesContent":["import { logger } from '@better-auth/core/env';\n\nfunction safeJSONParse(data) {\n  function reviver(_, value) {\n    if (typeof value === \"string\") {\n      const iso8601Regex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?Z$/;\n      if (iso8601Regex.test(value)) {\n        const date = new Date(value);\n        if (!isNaN(date.getTime())) {\n          return date;\n        }\n      }\n    }\n    return value;\n  }\n  try {\n    if (typeof data !== \"string\") {\n      return data;\n    }\n    return JSON.parse(data, reviver);\n  } catch (e) {\n    logger.error(\"Error parsing JSON\", { error: e });\n    return null;\n  }\n}\n\nexport { safeJSONParse as s };\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,cAAc,IAAI;IACzB,SAAS,QAAQ,CAAC,EAAE,KAAK;QACvB,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,eAAe;YACrB,IAAI,aAAa,IAAI,CAAC,QAAQ;gBAC5B,MAAM,OAAO,IAAI,KAAK;gBACtB,IAAI,CAAC,MAAM,KAAK,OAAO,KAAK;oBAC1B,OAAO;gBACT;YACF;QACF;QACA,OAAO;IACT;IACA,IAAI;QACF,IAAI,OAAO,SAAS,UAAU;YAC5B,OAAO;QACT;QACA,OAAO,KAAK,KAAK,CAAC,MAAM;IAC1B,EAAE,OAAO,GAAG;QACV,uXAAA,CAAA,SAAM,CAAC,KAAK,CAAC,sBAAsB;YAAE,OAAO;QAAE;QAC9C,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.DR3R5wdU.mjs"],"sourcesContent":["import { env } from '@better-auth/core/env';\nimport { BetterAuthError } from '@better-auth/core/error';\n\nfunction checkHasPath(url) {\n  try {\n    const parsedUrl = new URL(url);\n    const pathname = parsedUrl.pathname.replace(/\\/+$/, \"\") || \"/\";\n    return pathname !== \"/\";\n  } catch (error) {\n    throw new BetterAuthError(\n      `Invalid base URL: ${url}. Please provide a valid base URL.`\n    );\n  }\n}\nfunction withPath(url, path = \"/api/auth\") {\n  const hasPath = checkHasPath(url);\n  if (hasPath) {\n    return url;\n  }\n  const trimmedUrl = url.replace(/\\/+$/, \"\");\n  if (!path || path === \"/\") {\n    return trimmedUrl;\n  }\n  path = path.startsWith(\"/\") ? path : `/${path}`;\n  return `${trimmedUrl}${path}`;\n}\nfunction getBaseURL(url, path, request, loadEnv) {\n  if (url) {\n    return withPath(url, path);\n  }\n  if (loadEnv !== false) {\n    const fromEnv = env.BETTER_AUTH_URL || env.NEXT_PUBLIC_BETTER_AUTH_URL || env.PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_BETTER_AUTH_URL || env.NUXT_PUBLIC_AUTH_URL || (env.BASE_URL !== \"/\" ? env.BASE_URL : void 0);\n    if (fromEnv) {\n      return withPath(fromEnv, path);\n    }\n  }\n  const fromRequest = request?.headers.get(\"x-forwarded-host\");\n  const fromRequestProto = request?.headers.get(\"x-forwarded-proto\");\n  if (fromRequest && fromRequestProto) {\n    return withPath(`${fromRequestProto}://${fromRequest}`, path);\n  }\n  if (request) {\n    const url2 = getOrigin(request.url);\n    if (!url2) {\n      throw new BetterAuthError(\n        \"Could not get origin from request. Please provide a valid base URL.\"\n      );\n    }\n    return withPath(url2, path);\n  }\n  if (typeof window !== \"undefined\" && window.location) {\n    return withPath(window.location.origin, path);\n  }\n  return void 0;\n}\nfunction getOrigin(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.origin;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getProtocol(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.protocol;\n  } catch (error) {\n    return null;\n  }\n}\nfunction getHost(url) {\n  try {\n    const parsedUrl = new URL(url);\n    return parsedUrl.host;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport { getBaseURL as a, getHost as b, getProtocol as c, getOrigin as g };\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,SAAS,aAAa,GAAG;IACvB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,MAAM,WAAW,UAAU,QAAQ,CAAC,OAAO,CAAC,QAAQ,OAAO;QAC3D,OAAO,aAAa;IACtB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,yXAAA,CAAA,kBAAe,CACvB,CAAC,kBAAkB,EAAE,IAAI,kCAAkC,CAAC;IAEhE;AACF;AACA,SAAS,SAAS,GAAG,EAAE,OAAO,WAAW;IACvC,MAAM,UAAU,aAAa;IAC7B,IAAI,SAAS;QACX,OAAO;IACT;IACA,MAAM,aAAa,IAAI,OAAO,CAAC,QAAQ;IACvC,IAAI,CAAC,QAAQ,SAAS,KAAK;QACzB,OAAO;IACT;IACA,OAAO,KAAK,UAAU,CAAC,OAAO,OAAO,CAAC,CAAC,EAAE,MAAM;IAC/C,OAAO,GAAG,aAAa,MAAM;AAC/B;AACA,SAAS,WAAW,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IAC7C,IAAI,KAAK;QACP,OAAO,SAAS,KAAK;IACvB;IACA,IAAI,YAAY,OAAO;QACrB,MAAM,UAAU,uXAAA,CAAA,MAAG,CAAC,eAAe,IAAI,uXAAA,CAAA,MAAG,CAAC,2BAA2B,IAAI,uXAAA,CAAA,MAAG,CAAC,sBAAsB,IAAI,uXAAA,CAAA,MAAG,CAAC,2BAA2B,IAAI,uXAAA,CAAA,MAAG,CAAC,oBAAoB,IAAI,CAAC,uXAAA,CAAA,MAAG,CAAC,QAAQ,KAAK,MAAM,uXAAA,CAAA,MAAG,CAAC,QAAQ,GAAG,KAAK,CAAC;QACpN,IAAI,SAAS;YACX,OAAO,SAAS,SAAS;QAC3B;IACF;IACA,MAAM,cAAc,SAAS,QAAQ,IAAI;IACzC,MAAM,mBAAmB,SAAS,QAAQ,IAAI;IAC9C,IAAI,eAAe,kBAAkB;QACnC,OAAO,SAAS,GAAG,iBAAiB,GAAG,EAAE,aAAa,EAAE;IAC1D;IACA,IAAI,SAAS;QACX,MAAM,OAAO,UAAU,QAAQ,GAAG;QAClC,IAAI,CAAC,MAAM;YACT,MAAM,IAAI,yXAAA,CAAA,kBAAe,CACvB;QAEJ;QACA,OAAO,SAAS,MAAM;IACxB;IACA,uCAAsD;;IAEtD;IACA,OAAO,KAAK;AACd;AACA,SAAS,UAAU,GAAG;IACpB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,MAAM;IACzB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,YAAY,GAAG;IACtB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,QAAQ;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AACA,SAAS,QAAQ,GAAG;IAClB,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,OAAO,UAAU,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.Ih8C76Vo.mjs"],"sourcesContent":["function parseSetCookieHeader(setCookie) {\n  const cookies = /* @__PURE__ */ new Map();\n  const cookieArray = setCookie.split(\", \");\n  cookieArray.forEach((cookieString) => {\n    const parts = cookieString.split(\";\").map((part) => part.trim());\n    const [nameValue, ...attributes] = parts;\n    const [name, ...valueParts] = (nameValue || \"\").split(\"=\");\n    const value = valueParts.join(\"=\");\n    if (!name || value === void 0) {\n      return;\n    }\n    const attrObj = { value };\n    attributes.forEach((attribute) => {\n      const [attrName, ...attrValueParts] = attribute.split(\"=\");\n      const attrValue = attrValueParts.join(\"=\");\n      const normalizedAttrName = attrName.trim().toLowerCase();\n      switch (normalizedAttrName) {\n        case \"max-age\":\n          attrObj[\"max-age\"] = attrValue ? parseInt(attrValue.trim(), 10) : void 0;\n          break;\n        case \"expires\":\n          attrObj.expires = attrValue ? new Date(attrValue.trim()) : void 0;\n          break;\n        case \"domain\":\n          attrObj.domain = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"path\":\n          attrObj.path = attrValue ? attrValue.trim() : void 0;\n          break;\n        case \"secure\":\n          attrObj.secure = true;\n          break;\n        case \"httponly\":\n          attrObj.httponly = true;\n          break;\n        case \"samesite\":\n          attrObj.samesite = attrValue ? attrValue.trim().toLowerCase() : void 0;\n          break;\n        default:\n          attrObj[normalizedAttrName] = attrValue ? attrValue.trim() : true;\n          break;\n      }\n    });\n    cookies.set(name, attrObj);\n  });\n  return cookies;\n}\nfunction setCookieToHeader(headers) {\n  return (context) => {\n    const setCookieHeader = context.response.headers.get(\"set-cookie\");\n    if (!setCookieHeader) {\n      return;\n    }\n    const cookieMap = /* @__PURE__ */ new Map();\n    const existingCookiesHeader = headers.get(\"cookie\") || \"\";\n    existingCookiesHeader.split(\";\").forEach((cookie) => {\n      const [name, ...rest] = cookie.trim().split(\"=\");\n      if (name && rest.length > 0) {\n        cookieMap.set(name, rest.join(\"=\"));\n      }\n    });\n    const setCookieHeaders = setCookieHeader.split(\",\");\n    setCookieHeaders.forEach((header) => {\n      const cookies = parseSetCookieHeader(header);\n      cookies.forEach((value, name) => {\n        cookieMap.set(name, value.value);\n      });\n    });\n    const updatedCookies = Array.from(cookieMap.entries()).map(([name, value]) => `${name}=${value}`).join(\"; \");\n    headers.set(\"cookie\", updatedCookies);\n  };\n}\n\nexport { parseSetCookieHeader as p, setCookieToHeader as s };\n"],"names":[],"mappings":";;;;AAAA,SAAS,qBAAqB,SAAS;IACrC,MAAM,UAAU,aAAa,GAAG,IAAI;IACpC,MAAM,cAAc,UAAU,KAAK,CAAC;IACpC,YAAY,OAAO,CAAC,CAAC;QACnB,MAAM,QAAQ,aAAa,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,OAAS,KAAK,IAAI;QAC7D,MAAM,CAAC,WAAW,GAAG,WAAW,GAAG;QACnC,MAAM,CAAC,MAAM,GAAG,WAAW,GAAG,CAAC,aAAa,EAAE,EAAE,KAAK,CAAC;QACtD,MAAM,QAAQ,WAAW,IAAI,CAAC;QAC9B,IAAI,CAAC,QAAQ,UAAU,KAAK,GAAG;YAC7B;QACF;QACA,MAAM,UAAU;YAAE;QAAM;QACxB,WAAW,OAAO,CAAC,CAAC;YAClB,MAAM,CAAC,UAAU,GAAG,eAAe,GAAG,UAAU,KAAK,CAAC;YACtD,MAAM,YAAY,eAAe,IAAI,CAAC;YACtC,MAAM,qBAAqB,SAAS,IAAI,GAAG,WAAW;YACtD,OAAQ;gBACN,KAAK;oBACH,OAAO,CAAC,UAAU,GAAG,YAAY,SAAS,UAAU,IAAI,IAAI,MAAM,KAAK;oBACvE;gBACF,KAAK;oBACH,QAAQ,OAAO,GAAG,YAAY,IAAI,KAAK,UAAU,IAAI,MAAM,KAAK;oBAChE;gBACF,KAAK;oBACH,QAAQ,MAAM,GAAG,YAAY,UAAU,IAAI,KAAK,KAAK;oBACrD;gBACF,KAAK;oBACH,QAAQ,IAAI,GAAG,YAAY,UAAU,IAAI,KAAK,KAAK;oBACnD;gBACF,KAAK;oBACH,QAAQ,MAAM,GAAG;oBACjB;gBACF,KAAK;oBACH,QAAQ,QAAQ,GAAG;oBACnB;gBACF,KAAK;oBACH,QAAQ,QAAQ,GAAG,YAAY,UAAU,IAAI,GAAG,WAAW,KAAK,KAAK;oBACrE;gBACF;oBACE,OAAO,CAAC,mBAAmB,GAAG,YAAY,UAAU,IAAI,KAAK;oBAC7D;YACJ;QACF;QACA,QAAQ,GAAG,CAAC,MAAM;IACpB;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO;IAChC,OAAO,CAAC;QACN,MAAM,kBAAkB,QAAQ,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;QACrD,IAAI,CAAC,iBAAiB;YACpB;QACF;QACA,MAAM,YAAY,aAAa,GAAG,IAAI;QACtC,MAAM,wBAAwB,QAAQ,GAAG,CAAC,aAAa;QACvD,sBAAsB,KAAK,CAAC,KAAK,OAAO,CAAC,CAAC;YACxC,MAAM,CAAC,MAAM,GAAG,KAAK,GAAG,OAAO,IAAI,GAAG,KAAK,CAAC;YAC5C,IAAI,QAAQ,KAAK,MAAM,GAAG,GAAG;gBAC3B,UAAU,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC;YAChC;QACF;QACA,MAAM,mBAAmB,gBAAgB,KAAK,CAAC;QAC/C,iBAAiB,OAAO,CAAC,CAAC;YACxB,MAAM,UAAU,qBAAqB;YACrC,QAAQ,OAAO,CAAC,CAAC,OAAO;gBACtB,UAAU,GAAG,CAAC,MAAM,MAAM,KAAK;YACjC;QACF;QACA,MAAM,iBAAiB,MAAM,IAAI,CAAC,UAAU,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,MAAM,GAAK,GAAG,KAAK,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC;QACvG,QAAQ,GAAG,CAAC,UAAU;IACxB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.D9_vQR83.mjs"],"sourcesContent":["import { BetterAuthError } from '@better-auth/core/error';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { isProduction, env } from '@better-auth/core/env';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport { s as safeJSONParse } from './better-auth.BKEtEpt0.mjs';\nimport { a as getBaseURL } from './better-auth.DR3R5wdU.mjs';\nimport { binary } from '@better-auth/utils/binary';\nimport './better-auth.Ih8C76Vo.mjs';\n\n//#region src/index.ts\nconst s = 1e3;\nconst m = s * 60;\nconst h = m * 60;\nconst d = h * 24;\nconst w = d * 7;\nconst y = d * 365.25;\nconst mo = y / 12;\nfunction ms(value, options) {\n\tif (typeof value === \"string\") return parse(value);\n\telse if (typeof value === \"number\") return format(value);\n\tthrow new Error(`Value provided to ms() must be a string or number. value=${JSON.stringify(value)}`);\n}\n/**\n* Parse the given string and return milliseconds.\n*\n* @param str - A string to parse to milliseconds\n* @returns The parsed value in milliseconds, or `NaN` if the string can't be\n* parsed\n*/\nfunction parse(str) {\n\tif (typeof str !== \"string\" || str.length === 0 || str.length > 100) throw new Error(`Value provided to ms.parse() must be a string with length between 1 and 99. value=${JSON.stringify(str)}`);\n\tconst match = /^(?<value>-?\\d*\\.?\\d+) *(?<unit>milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|months?|mo|years?|yrs?|y)?$/i.exec(str);\n\tif (!match?.groups) return NaN;\n\tconst { value, unit = \"ms\" } = match.groups;\n\tconst n = parseFloat(value);\n\tconst matchUnit = unit.toLowerCase();\n\t/* istanbul ignore next - istanbul doesn't understand, but thankfully the TypeScript the exhaustiveness check in the default case keeps us type safe here */\n\tswitch (matchUnit) {\n\t\tcase \"years\":\n\t\tcase \"year\":\n\t\tcase \"yrs\":\n\t\tcase \"yr\":\n\t\tcase \"y\": return n * y;\n\t\tcase \"months\":\n\t\tcase \"month\":\n\t\tcase \"mo\": return n * mo;\n\t\tcase \"weeks\":\n\t\tcase \"week\":\n\t\tcase \"w\": return n * w;\n\t\tcase \"days\":\n\t\tcase \"day\":\n\t\tcase \"d\": return n * d;\n\t\tcase \"hours\":\n\t\tcase \"hour\":\n\t\tcase \"hrs\":\n\t\tcase \"hr\":\n\t\tcase \"h\": return n * h;\n\t\tcase \"minutes\":\n\t\tcase \"minute\":\n\t\tcase \"mins\":\n\t\tcase \"min\":\n\t\tcase \"m\": return n * m;\n\t\tcase \"seconds\":\n\t\tcase \"second\":\n\t\tcase \"secs\":\n\t\tcase \"sec\":\n\t\tcase \"s\": return n * s;\n\t\tcase \"milliseconds\":\n\t\tcase \"millisecond\":\n\t\tcase \"msecs\":\n\t\tcase \"msec\":\n\t\tcase \"ms\": return n;\n\t\tdefault: throw new Error(`Unknown unit \"${matchUnit}\" provided to ms.parse(). value=${JSON.stringify(str)}`);\n\t}\n}\n/**\n* Short format for `ms`.\n*/\nfunction fmtShort(ms$1) {\n\tconst msAbs = Math.abs(ms$1);\n\tif (msAbs >= y) return `${Math.round(ms$1 / y)}y`;\n\tif (msAbs >= mo) return `${Math.round(ms$1 / mo)}mo`;\n\tif (msAbs >= w) return `${Math.round(ms$1 / w)}w`;\n\tif (msAbs >= d) return `${Math.round(ms$1 / d)}d`;\n\tif (msAbs >= h) return `${Math.round(ms$1 / h)}h`;\n\tif (msAbs >= m) return `${Math.round(ms$1 / m)}m`;\n\tif (msAbs >= s) return `${Math.round(ms$1 / s)}s`;\n\treturn `${ms$1}ms`;\n}\n/**\n* Format the given integer as a string.\n*\n* @param ms - milliseconds\n* @param options - Options for the conversion\n* @returns The formatted string\n*/\nfunction format(ms$1, options) {\n\tif (typeof ms$1 !== \"number\" || !Number.isFinite(ms$1)) throw new Error(\"Value provided to ms.format() must be of type number.\");\n\treturn fmtShort(ms$1);\n}\n\nfunction createCookieGetter(options) {\n  const secure = options.advanced?.useSecureCookies !== void 0 ? options.advanced?.useSecureCookies : options.baseURL !== void 0 ? options.baseURL.startsWith(\"https://\") ? true : false : isProduction;\n  const secureCookiePrefix = secure ? \"__Secure-\" : \"\";\n  const crossSubdomainEnabled = !!options.advanced?.crossSubDomainCookies?.enabled;\n  const domain = crossSubdomainEnabled ? options.advanced?.crossSubDomainCookies?.domain || (options.baseURL ? new URL(options.baseURL).hostname : void 0) : void 0;\n  if (crossSubdomainEnabled && !domain) {\n    throw new BetterAuthError(\n      \"baseURL is required when crossSubdomainCookies are enabled\"\n    );\n  }\n  function createCookie(cookieName, overrideAttributes = {}) {\n    const prefix = options.advanced?.cookiePrefix || \"better-auth\";\n    const name = options.advanced?.cookies?.[cookieName]?.name || `${prefix}.${cookieName}`;\n    const attributes = options.advanced?.cookies?.[cookieName]?.attributes;\n    return {\n      name: `${secureCookiePrefix}${name}`,\n      attributes: {\n        secure: !!secureCookiePrefix,\n        sameSite: \"lax\",\n        path: \"/\",\n        httpOnly: true,\n        ...crossSubdomainEnabled ? { domain } : {},\n        ...options.advanced?.defaultCookieAttributes,\n        ...overrideAttributes,\n        ...attributes\n      }\n    };\n  }\n  return createCookie;\n}\nfunction getCookies(options) {\n  const createCookie = createCookieGetter(options);\n  const sessionMaxAge = options.session?.expiresIn || ms(\"7d\") / 1e3;\n  const sessionToken = createCookie(\"session_token\", {\n    maxAge: sessionMaxAge\n  });\n  const sessionData = createCookie(\"session_data\", {\n    maxAge: options.session?.cookieCache?.maxAge || 60 * 5\n  });\n  const dontRememberToken = createCookie(\"dont_remember\");\n  return {\n    sessionToken: {\n      name: sessionToken.name,\n      options: sessionToken.attributes\n    },\n    /**\n     * This cookie is used to store the session data in the cookie\n     * This is useful for when you want to cache the session in the cookie\n     */\n    sessionData: {\n      name: sessionData.name,\n      options: sessionData.attributes\n    },\n    dontRememberToken: {\n      name: dontRememberToken.name,\n      options: dontRememberToken.attributes\n    }\n  };\n}\nasync function setCookieCache(ctx, session, dontRememberMe) {\n  const shouldStoreSessionDataInCookie = ctx.context.options.session?.cookieCache?.enabled;\n  if (shouldStoreSessionDataInCookie) {\n    const filteredSession = Object.entries(session.session).reduce(\n      (acc, [key, value]) => {\n        const fieldConfig = ctx.context.options.session?.additionalFields?.[key];\n        if (!fieldConfig || fieldConfig.returned !== false) {\n          acc[key] = value;\n        }\n        return acc;\n      },\n      {}\n    );\n    const sessionData = { session: filteredSession, user: session.user };\n    const options = {\n      ...ctx.context.authCookies.sessionData.options,\n      maxAge: dontRememberMe ? void 0 : ctx.context.authCookies.sessionData.options.maxAge\n    };\n    const expiresAtDate = getDate(options.maxAge || 60, \"sec\").getTime();\n    const data = base64Url.encode(\n      JSON.stringify({\n        session: sessionData,\n        expiresAt: expiresAtDate,\n        signature: await createHMAC(\"SHA-256\", \"base64urlnopad\").sign(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionData,\n            expiresAt: expiresAtDate\n          })\n        )\n      }),\n      {\n        padding: false\n      }\n    );\n    if (data.length > 4093) {\n      ctx.context?.logger?.error(\n        `Session data exceeds cookie size limit (${data.length} bytes > 4093 bytes). Consider reducing session data size or disabling cookie cache. Session will not be cached in cookie.`\n      );\n      return;\n    }\n    ctx.setCookie(ctx.context.authCookies.sessionData.name, data, options);\n  }\n}\nasync function setSessionCookie(ctx, session, dontRememberMe, overrides) {\n  const dontRememberMeCookie = await ctx.getSignedCookie(\n    ctx.context.authCookies.dontRememberToken.name,\n    ctx.context.secret\n  );\n  dontRememberMe = dontRememberMe !== void 0 ? dontRememberMe : !!dontRememberMeCookie;\n  const options = ctx.context.authCookies.sessionToken.options;\n  const maxAge = dontRememberMe ? void 0 : ctx.context.sessionConfig.expiresIn;\n  await ctx.setSignedCookie(\n    ctx.context.authCookies.sessionToken.name,\n    session.session.token,\n    ctx.context.secret,\n    {\n      ...options,\n      maxAge,\n      ...overrides\n    }\n  );\n  if (dontRememberMe) {\n    await ctx.setSignedCookie(\n      ctx.context.authCookies.dontRememberToken.name,\n      \"true\",\n      ctx.context.secret,\n      ctx.context.authCookies.dontRememberToken.options\n    );\n  }\n  await setCookieCache(ctx, session, dontRememberMe);\n  ctx.context.setNewSession(session);\n  if (ctx.context.options.secondaryStorage) {\n    await ctx.context.secondaryStorage?.set(\n      session.session.token,\n      JSON.stringify({\n        user: session.user,\n        session: session.session\n      }),\n      Math.floor(\n        (new Date(session.session.expiresAt).getTime() - Date.now()) / 1e3\n      )\n    );\n  }\n}\nfunction deleteSessionCookie(ctx, skipDontRememberMe) {\n  ctx.setCookie(ctx.context.authCookies.sessionToken.name, \"\", {\n    ...ctx.context.authCookies.sessionToken.options,\n    maxAge: 0\n  });\n  ctx.setCookie(ctx.context.authCookies.sessionData.name, \"\", {\n    ...ctx.context.authCookies.sessionData.options,\n    maxAge: 0\n  });\n  if (!skipDontRememberMe) {\n    ctx.setCookie(ctx.context.authCookies.dontRememberToken.name, \"\", {\n      ...ctx.context.authCookies.dontRememberToken.options,\n      maxAge: 0\n    });\n  }\n}\nfunction parseCookies(cookieHeader) {\n  const cookies = cookieHeader.split(\"; \");\n  const cookieMap = /* @__PURE__ */ new Map();\n  cookies.forEach((cookie) => {\n    const [name, value] = cookie.split(\"=\");\n    cookieMap.set(name, value);\n  });\n  return cookieMap;\n}\nconst getSessionCookie = (request, config) => {\n  if (config?.cookiePrefix) {\n    if (config.cookieName) {\n      config.cookiePrefix = `${config.cookiePrefix}-`;\n    } else {\n      config.cookiePrefix = `${config.cookiePrefix}.`;\n    }\n  }\n  const headers = \"headers\" in request ? request.headers : request;\n  const req = request instanceof Request ? request : void 0;\n  getBaseURL(req?.url, config?.path, req);\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_token\", cookiePrefix = \"better-auth.\" } = config || {};\n  const name = `${cookiePrefix}${cookieName}`;\n  const secureCookieName = `__Secure-${name}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionToken = parsedCookie.get(name) || parsedCookie.get(secureCookieName);\n  if (sessionToken) {\n    return sessionToken;\n  }\n  return null;\n};\nconst getCookieCache = async (request, config) => {\n  const headers = request instanceof Headers ? request : request.headers;\n  const cookies = headers.get(\"cookie\");\n  if (!cookies) {\n    return null;\n  }\n  const { cookieName = \"session_data\", cookiePrefix = \"better-auth\" } = config || {};\n  const name = config?.isSecure !== void 0 ? config.isSecure ? `__Secure-${cookiePrefix}.${cookieName}` : `${cookiePrefix}.${cookieName}` : isProduction ? `__Secure-${cookiePrefix}.${cookieName}` : `${cookiePrefix}.${cookieName}`;\n  const parsedCookie = parseCookies(cookies);\n  const sessionData = parsedCookie.get(name);\n  if (sessionData) {\n    const sessionDataPayload = safeJSONParse(binary.decode(base64Url.decode(sessionData)));\n    if (!sessionDataPayload) {\n      return null;\n    }\n    const secret = config?.secret || env.BETTER_AUTH_SECRET;\n    if (!secret) {\n      throw new BetterAuthError(\n        \"getCookieCache requires a secret to be provided. Either pass it as an option or set the BETTER_AUTH_SECRET environment variable\"\n      );\n    }\n    const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n      secret,\n      JSON.stringify({\n        ...sessionDataPayload.session,\n        expiresAt: sessionDataPayload.expiresAt\n      }),\n      sessionDataPayload.signature\n    );\n    if (!isValid) {\n      return null;\n    }\n    return sessionDataPayload.session;\n  }\n  return null;\n};\n\nexport { setCookieCache as a, getSessionCookie as b, createCookieGetter as c, deleteSessionCookie as d, getCookieCache as e, getCookies as g, ms as m, parseCookies as p, setSessionCookie as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.DEBtROF9.mjs"],"sourcesContent":["import { APIError } from 'better-call';\nimport { createAuthMiddleware, createAuthEndpoint } from '@better-auth/core/middleware';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { d as deleteSessionCookie, s as setSessionCookie, a as setCookieCache } from './better-auth.D9_vQR83.mjs';\nimport * as z from 'zod';\nimport { s as safeJSONParse } from './better-auth.BKEtEpt0.mjs';\nimport { BASE_ERROR_CODES } from '@better-auth/core/error';\nimport { createHMAC } from '@better-auth/utils/hmac';\nimport { base64Url } from '@better-auth/utils/base64';\nimport { binary } from '@better-auth/utils/binary';\n\nconst getSessionQuerySchema = z.optional(\n  z.object({\n    /**\n     * If cookie cache is enabled, it will disable the cache\n     * and fetch the session from the database\n     */\n    disableCookieCache: z.coerce.boolean().meta({\n      description: \"Disable cookie cache and fetch session from database\"\n    }).optional(),\n    disableRefresh: z.coerce.boolean().meta({\n      description: \"Disable session refresh. Useful for checking session status, without updating the session\"\n    }).optional()\n  })\n);\nconst getSession = () => createAuthEndpoint(\n  \"/get-session\",\n  {\n    method: \"GET\",\n    query: getSessionQuerySchema,\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Get the current session\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    session: {\n                      $ref: \"#/components/schemas/Session\"\n                    },\n                    user: {\n                      $ref: \"#/components/schemas/User\"\n                    }\n                  },\n                  required: [\"session\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessionCookieToken = await ctx.getSignedCookie(\n        ctx.context.authCookies.sessionToken.name,\n        ctx.context.secret\n      );\n      if (!sessionCookieToken) {\n        return null;\n      }\n      const sessionDataCookie = ctx.getCookie(\n        ctx.context.authCookies.sessionData.name\n      );\n      const sessionDataPayload = sessionDataCookie ? safeJSONParse(binary.decode(base64Url.decode(sessionDataCookie))) : null;\n      if (sessionDataPayload) {\n        const isValid = await createHMAC(\"SHA-256\", \"base64urlnopad\").verify(\n          ctx.context.secret,\n          JSON.stringify({\n            ...sessionDataPayload.session,\n            expiresAt: sessionDataPayload.expiresAt\n          }),\n          sessionDataPayload.signature\n        );\n        if (!isValid) {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n          return ctx.json(null);\n        }\n      }\n      const dontRememberMe = await ctx.getSignedCookie(\n        ctx.context.authCookies.dontRememberToken.name,\n        ctx.context.secret\n      );\n      if (sessionDataPayload?.session && ctx.context.options.session?.cookieCache?.enabled && !ctx.query?.disableCookieCache) {\n        const session2 = sessionDataPayload.session;\n        const hasExpired = sessionDataPayload.expiresAt < Date.now() || session2.session.expiresAt < /* @__PURE__ */ new Date();\n        if (!hasExpired) {\n          ctx.context.session = session2;\n          return ctx.json(\n            session2\n          );\n        } else {\n          const dataCookie = ctx.context.authCookies.sessionData.name;\n          ctx.setCookie(dataCookie, \"\", {\n            maxAge: 0\n          });\n        }\n      }\n      const session = await ctx.context.internalAdapter.findSession(sessionCookieToken);\n      ctx.context.session = session;\n      if (!session || session.session.expiresAt < /* @__PURE__ */ new Date()) {\n        deleteSessionCookie(ctx);\n        if (session) {\n          await ctx.context.internalAdapter.deleteSession(\n            session.session.token\n          );\n        }\n        return ctx.json(null);\n      }\n      if (dontRememberMe || ctx.query?.disableRefresh) {\n        return ctx.json(\n          session\n        );\n      }\n      const expiresIn = ctx.context.sessionConfig.expiresIn;\n      const updateAge = ctx.context.sessionConfig.updateAge;\n      const sessionIsDueToBeUpdatedDate = session.session.expiresAt.valueOf() - expiresIn * 1e3 + updateAge * 1e3;\n      const shouldBeUpdated = sessionIsDueToBeUpdatedDate <= Date.now();\n      if (shouldBeUpdated && (!ctx.query?.disableRefresh || !ctx.context.options.session?.disableSessionRefresh)) {\n        const updatedSession = await ctx.context.internalAdapter.updateSession(\n          session.session.token,\n          {\n            expiresAt: getDate(ctx.context.sessionConfig.expiresIn, \"sec\"),\n            updatedAt: /* @__PURE__ */ new Date()\n          }\n        );\n        if (!updatedSession) {\n          deleteSessionCookie(ctx);\n          return ctx.json(null, { status: 401 });\n        }\n        const maxAge = (updatedSession.expiresAt.valueOf() - Date.now()) / 1e3;\n        await setSessionCookie(\n          ctx,\n          {\n            session: updatedSession,\n            user: session.user\n          },\n          false,\n          {\n            maxAge\n          }\n        );\n        return ctx.json({\n          session: updatedSession,\n          user: session.user\n        });\n      }\n      await setCookieCache(ctx, session, !!dontRememberMe);\n      return ctx.json(\n        session\n      );\n    } catch (error) {\n      ctx.context.logger.error(\"INTERNAL_SERVER_ERROR\", error);\n      throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n  }\n);\nconst getSessionFromCtx = async (ctx, config) => {\n  if (ctx.context.session) {\n    return ctx.context.session;\n  }\n  const session = await getSession()({\n    ...ctx,\n    asResponse: false,\n    headers: ctx.headers,\n    returnHeaders: false,\n    query: {\n      ...config,\n      ...ctx.query\n    }\n  }).catch((e) => {\n    return null;\n  });\n  ctx.context.session = session;\n  return session;\n};\nconst sessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  return {\n    session\n  };\n});\nconst sensitiveSessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx, { disableCookieCache: true });\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  return {\n    session\n  };\n});\nconst requestOnlySessionMiddleware = createAuthMiddleware(\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session?.session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    return { session };\n  }\n);\nconst freshSessionMiddleware = createAuthMiddleware(async (ctx) => {\n  const session = await getSessionFromCtx(ctx);\n  if (!session?.session) {\n    throw new APIError(\"UNAUTHORIZED\");\n  }\n  if (ctx.context.sessionConfig.freshAge === 0) {\n    return {\n      session\n    };\n  }\n  const freshAge = ctx.context.sessionConfig.freshAge;\n  const lastUpdated = session.session.updatedAt?.valueOf() || session.session.createdAt.valueOf();\n  const now = Date.now();\n  const isFresh = now - lastUpdated < freshAge * 1e3;\n  if (!isFresh) {\n    throw new APIError(\"FORBIDDEN\", {\n      message: \"Session is not fresh\"\n    });\n  }\n  return {\n    session\n  };\n});\nconst listSessions = () => createAuthEndpoint(\n  \"/list-sessions\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"List all active sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    $ref: \"#/components/schemas/Session\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      const sessions = await ctx.context.internalAdapter.listSessions(\n        ctx.context.session.user.id\n      );\n      const activeSessions = sessions.filter((session) => {\n        return session.expiresAt > /* @__PURE__ */ new Date();\n      });\n      return ctx.json(\n        activeSessions\n      );\n    } catch (e) {\n      ctx.context.logger.error(e);\n      throw ctx.error(\"INTERNAL_SERVER_ERROR\");\n    }\n  }\n);\nconst revokeSession = createAuthEndpoint(\n  \"/revoke-session\",\n  {\n    method: \"POST\",\n    body: z.object({\n      token: z.string().meta({\n        description: \"The token to revoke\"\n      })\n    }),\n    use: [sensitiveSessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke a single session\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  token: {\n                    type: \"string\",\n                    description: \"The token to revoke\"\n                  }\n                },\n                required: [\"token\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the session was revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token;\n    const findSession = await ctx.context.internalAdapter.findSession(token);\n    if (!findSession) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Session not found\"\n      });\n    }\n    if (findSession.session.userId !== ctx.context.session.user.id) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    try {\n      await ctx.context.internalAdapter.deleteSession(token);\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeSessions = createAuthEndpoint(\n  \"/revoke-sessions\",\n  {\n    method: \"POST\",\n    use: [sensitiveSessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Revoke all sessions for the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    try {\n      await ctx.context.internalAdapter.deleteSessions(\n        ctx.context.session.user.id\n      );\n    } catch (error) {\n      ctx.context.logger.error(\n        error && typeof error === \"object\" && \"name\" in error ? error.name : \"\",\n        error\n      );\n      throw new APIError(\"INTERNAL_SERVER_ERROR\");\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst revokeOtherSessions = createAuthEndpoint(\n  \"/revoke-other-sessions\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    use: [sensitiveSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Revoke all other sessions for the user except the current one\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if all other sessions were revoked successfully\"\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    if (!session.user) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    const sessions = await ctx.context.internalAdapter.listSessions(\n      session.user.id\n    );\n    const activeSessions = sessions.filter((session2) => {\n      return session2.expiresAt > /* @__PURE__ */ new Date();\n    });\n    const otherSessions = activeSessions.filter(\n      (session2) => session2.token !== ctx.context.session.session.token\n    );\n    await Promise.all(\n      otherSessions.map(\n        (session2) => ctx.context.internalAdapter.deleteSession(session2.token)\n      )\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nexport { getSession as a, revokeSessions as b, revokeSession as c, getSessionQuerySchema as d, sensitiveSessionMiddleware as e, freshSessionMiddleware as f, getSessionFromCtx as g, requestOnlySessionMiddleware as h, listSessions as l, revokeOtherSessions as r, sessionMiddleware as s };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 988, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.BUPPRXfK.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateId = (size) => {\n  return createRandomStringGenerator(\"a-z\", \"A-Z\", \"0-9\")(size || 32);\n};\n\nexport { generateId as g };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,CAAC;IAClB,OAAO,CAAA,GAAA,kOAAA,CAAA,8BAA2B,AAAD,EAAE,OAAO,OAAO,OAAO,QAAQ;AAClE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.B4Qoxdgc.mjs"],"sourcesContent":["import { createRandomStringGenerator } from '@better-auth/utils/random';\n\nconst generateRandomString = createRandomStringGenerator(\n  \"a-z\",\n  \"0-9\",\n  \"A-Z\",\n  \"-_\"\n);\n\nexport { generateRandomString as g };\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,uBAAuB,CAAA,GAAA,kOAAA,CAAA,8BAA2B,AAAD,EACrD,OACA,OACA,OACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1012, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.Cwj9dt6i.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nconst cache = /* @__PURE__ */ new WeakMap();\nfunction parseOutputData(data, schema) {\n  const fields = schema.fields;\n  const parsedData = {};\n  for (const key in data) {\n    const field = fields[key];\n    if (!field) {\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (field.returned === false) {\n      continue;\n    }\n    parsedData[key] = data[key];\n  }\n  return parsedData;\n}\nfunction getAllFields(options, table) {\n  if (!cache.has(options)) {\n    cache.set(options, /* @__PURE__ */ new Map());\n  }\n  const tableCache = cache.get(options);\n  if (tableCache.has(table)) {\n    return tableCache.get(table);\n  }\n  let schema = {\n    ...table === \"user\" ? options.user?.additionalFields : {},\n    ...table === \"session\" ? options.session?.additionalFields : {}\n  };\n  for (const plugin of options.plugins || []) {\n    if (plugin.schema && plugin.schema[table]) {\n      schema = {\n        ...schema,\n        ...plugin.schema[table].fields\n      };\n    }\n  }\n  cache.get(options).set(table, schema);\n  return schema;\n}\nfunction parseUserOutput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseOutputData(user, { fields: schema });\n}\nfunction parseAccountOutput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseOutputData(account, { fields: schema });\n}\nfunction parseSessionOutput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseOutputData(session, { fields: schema });\n}\nfunction parseInputData(data, schema) {\n  const action = schema.action || \"create\";\n  const fields = schema.fields;\n  const parsedData = Object.assign(\n    /* @__PURE__ */ Object.create(null),\n    null\n  );\n  for (const key in fields) {\n    if (key in data) {\n      if (fields[key].input === false) {\n        if (fields[key].defaultValue !== void 0) {\n          if (action !== \"update\") {\n            parsedData[key] = fields[key].defaultValue;\n            continue;\n          }\n        }\n        if (data[key]) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: `${key} is not allowed to be set`\n          });\n        }\n        continue;\n      }\n      if (fields[key].validator?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].validator.input.parse(data[key]);\n        continue;\n      }\n      if (fields[key].transform?.input && data[key] !== void 0) {\n        parsedData[key] = fields[key].transform?.input(data[key]);\n        continue;\n      }\n      parsedData[key] = data[key];\n      continue;\n    }\n    if (fields[key].defaultValue !== void 0 && action === \"create\") {\n      parsedData[key] = fields[key].defaultValue;\n      continue;\n    }\n    if (fields[key].required && action === \"create\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `${key} is required`\n      });\n    }\n  }\n  return parsedData;\n}\nfunction parseUserInput(options, user = {}, action) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user, { fields: schema, action });\n}\nfunction parseAdditionalUserInput(options, user) {\n  const schema = getAllFields(options, \"user\");\n  return parseInputData(user || {}, { fields: schema });\n}\nfunction parseAccountInput(options, account) {\n  const schema = getAllFields(options, \"account\");\n  return parseInputData(account, { fields: schema });\n}\nfunction parseSessionInput(options, session) {\n  const schema = getAllFields(options, \"session\");\n  return parseInputData(session, { fields: schema });\n}\nfunction mergeSchema(schema, newSchema) {\n  if (!newSchema) {\n    return schema;\n  }\n  for (const table in newSchema) {\n    const newModelName = newSchema[table]?.modelName;\n    if (newModelName) {\n      schema[table].modelName = newModelName;\n    }\n    for (const field in schema[table].fields) {\n      const newField = newSchema[table]?.fields?.[field];\n      if (!newField) {\n        continue;\n      }\n      schema[table].fields[field].fieldName = newField;\n    }\n  }\n  return schema;\n}\n\nexport { parseAccountOutput as a, parseSessionOutput as b, parseInputData as c, parseUserInput as d, parseAdditionalUserInput as e, parseAccountInput as f, parseSessionInput as g, mergeSchema as m, parseUserOutput as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1175, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/crypto/index.mjs"],"sourcesContent":["import { createHash } from '@better-auth/utils/hash';\nimport { xchacha20poly1305 } from '@noble/ciphers/chacha.js';\nimport { utf8ToBytes, managedNonce, bytesToHex, hexToBytes as hexToBytes$1 } from '@noble/ciphers/utils.js';\nimport { base64 } from '@better-auth/utils/base64';\nimport { SignJWT } from 'jose';\nimport { scryptAsync } from '@noble/hashes/scrypt.js';\nimport { hex } from '@better-auth/utils/hex';\nimport { hexToBytes } from '@noble/hashes/utils.js';\nimport { BetterAuthError } from '@better-auth/core/error';\nexport { g as generateRandomString } from '../shared/better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/utils/random';\n\nasync function signJWT(payload, secret, expiresIn = 3600) {\n  const jwt = await new SignJWT(payload).setProtectedHeader({ alg: \"HS256\" }).setIssuedAt().setExpirationTime(Math.floor(Date.now() / 1e3) + expiresIn).sign(new TextEncoder().encode(secret));\n  return jwt;\n}\n\nfunction constantTimeEqual(a, b) {\n  const aBuffer = new Uint8Array(a);\n  const bBuffer = new Uint8Array(b);\n  let c = aBuffer.length ^ bBuffer.length;\n  const length = Math.max(aBuffer.length, bBuffer.length);\n  for (let i = 0; i < length; i++) {\n    c |= (i < aBuffer.length ? aBuffer[i] : 0) ^ (i < bBuffer.length ? bBuffer[i] : 0);\n  }\n  return c === 0;\n}\n\nasync function hashToBase64(data) {\n  const buffer = await createHash(\"SHA-256\").digest(data);\n  return base64.encode(buffer);\n}\nasync function compareHash(data, hash) {\n  const buffer = await createHash(\"SHA-256\").digest(\n    typeof data === \"string\" ? new TextEncoder().encode(data) : data\n  );\n  const hashBuffer = base64.decode(hash);\n  return constantTimeEqual(buffer, hashBuffer);\n}\n\nconst config = {\n  N: 16384,\n  r: 16,\n  p: 1,\n  dkLen: 64\n};\nasync function generateKey(password, salt) {\n  return await scryptAsync(password.normalize(\"NFKC\"), salt, {\n    N: config.N,\n    p: config.p,\n    r: config.r,\n    dkLen: config.dkLen,\n    maxmem: 128 * config.N * config.r * 2\n  });\n}\nconst hashPassword = async (password) => {\n  const salt = hex.encode(crypto.getRandomValues(new Uint8Array(16)));\n  const key = await generateKey(password, salt);\n  return `${salt}:${hex.encode(key)}`;\n};\nconst verifyPassword = async ({\n  hash,\n  password\n}) => {\n  const [salt, key] = hash.split(\":\");\n  if (!salt || !key) {\n    throw new BetterAuthError(\"Invalid password hash\");\n  }\n  const targetKey = await generateKey(password, salt);\n  return constantTimeEqual(targetKey, hexToBytes(key));\n};\n\nconst symmetricEncrypt = async ({\n  key,\n  data\n}) => {\n  const keyAsBytes = await createHash(\"SHA-256\").digest(key);\n  const dataAsBytes = utf8ToBytes(data);\n  const chacha = managedNonce(xchacha20poly1305)(new Uint8Array(keyAsBytes));\n  return bytesToHex(chacha.encrypt(dataAsBytes));\n};\nconst symmetricDecrypt = async ({\n  key,\n  data\n}) => {\n  const keyAsBytes = await createHash(\"SHA-256\").digest(key);\n  const dataAsBytes = hexToBytes$1(data);\n  const chacha = managedNonce(xchacha20poly1305)(new Uint8Array(keyAsBytes));\n  return new TextDecoder().decode(chacha.decrypt(dataAsBytes));\n};\n\nexport { compareHash, constantTimeEqual, hashPassword, hashToBase64, signJWT, symmetricDecrypt, symmetricEncrypt, verifyPassword };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1289, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.zbFvKBO6.mjs"],"sourcesContent":["import * as z from 'zod';\nimport { s as setSessionCookie, d as deleteSessionCookie } from './better-auth.D9_vQR83.mjs';\nimport { APIError, toResponse } from 'better-call';\nimport { createAuthMiddleware, createAuthEndpoint } from '@better-auth/core/middleware';\nimport '@better-auth/utils/random';\nimport { BASE_ERROR_CODES } from '@better-auth/core/error';\nimport { SocialProviderListEnum } from '@better-auth/core/social-providers';\nimport { s as safeJSONParse } from './better-auth.BKEtEpt0.mjs';\nimport { g as getSessionFromCtx, e as sensitiveSessionMiddleware, s as sessionMiddleware, f as freshSessionMiddleware } from './better-auth.DEBtROF9.mjs';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport { jwtVerify } from 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport { g as generateRandomString } from './better-auth.B4Qoxdgc.mjs';\nimport { d as parseUserInput } from './better-auth.Cwj9dt6i.mjs';\nimport { logger, isDevelopment, shouldPublishLog } from '@better-auth/core/env';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport '@better-auth/core/db';\nimport 'kysely';\nimport { createDefu } from 'defu';\nimport { signJWT, symmetricEncrypt, symmetricDecrypt } from '../crypto/index.mjs';\nimport { g as getOrigin, b as getHost, c as getProtocol } from './better-auth.DR3R5wdU.mjs';\nimport { JWTExpired } from 'jose/errors';\n\nfunction escapeRegExpChar(char) {\n  if (char === \"-\" || char === \"^\" || char === \"$\" || char === \"+\" || char === \".\" || char === \"(\" || char === \")\" || char === \"|\" || char === \"[\" || char === \"]\" || char === \"{\" || char === \"}\" || char === \"*\" || char === \"?\" || char === \"\\\\\") {\n    return `\\\\${char}`;\n  } else {\n    return char;\n  }\n}\nfunction escapeRegExpString(str) {\n  let result = \"\";\n  for (let i = 0; i < str.length; i++) {\n    result += escapeRegExpChar(str[i]);\n  }\n  return result;\n}\nfunction transform(pattern, separator = true) {\n  if (Array.isArray(pattern)) {\n    let regExpPatterns = pattern.map((p) => `^${transform(p, separator)}$`);\n    return `(?:${regExpPatterns.join(\"|\")})`;\n  }\n  let separatorSplitter = \"\";\n  let separatorMatcher = \"\";\n  let wildcard = \".\";\n  if (separator === true) {\n    separatorSplitter = \"/\";\n    separatorMatcher = \"[/\\\\\\\\]\";\n    wildcard = \"[^/\\\\\\\\]\";\n  } else if (separator) {\n    separatorSplitter = separator;\n    separatorMatcher = escapeRegExpString(separatorSplitter);\n    if (separatorMatcher.length > 1) {\n      separatorMatcher = `(?:${separatorMatcher})`;\n      wildcard = `((?!${separatorMatcher}).)`;\n    } else {\n      wildcard = `[^${separatorMatcher}]`;\n    }\n  }\n  let requiredSeparator = separator ? `${separatorMatcher}+?` : \"\";\n  let optionalSeparator = separator ? `${separatorMatcher}*?` : \"\";\n  let segments = separator ? pattern.split(separatorSplitter) : [pattern];\n  let result = \"\";\n  for (let s = 0; s < segments.length; s++) {\n    let segment = segments[s];\n    let nextSegment = segments[s + 1];\n    let currentSeparator = \"\";\n    if (!segment && s > 0) {\n      continue;\n    }\n    if (separator) {\n      if (s === segments.length - 1) {\n        currentSeparator = optionalSeparator;\n      } else if (nextSegment !== \"**\") {\n        currentSeparator = requiredSeparator;\n      } else {\n        currentSeparator = \"\";\n      }\n    }\n    if (separator && segment === \"**\") {\n      if (currentSeparator) {\n        result += s === 0 ? \"\" : currentSeparator;\n        result += `(?:${wildcard}*?${currentSeparator})*?`;\n      }\n      continue;\n    }\n    for (let c = 0; c < segment.length; c++) {\n      let char = segment[c];\n      if (char === \"\\\\\") {\n        if (c < segment.length - 1) {\n          result += escapeRegExpChar(segment[c + 1]);\n          c++;\n        }\n      } else if (char === \"?\") {\n        result += wildcard;\n      } else if (char === \"*\") {\n        result += `${wildcard}*?`;\n      } else {\n        result += escapeRegExpChar(char);\n      }\n    }\n    result += currentSeparator;\n  }\n  return result;\n}\nfunction isMatch(regexp, sample) {\n  if (typeof sample !== \"string\") {\n    throw new TypeError(`Sample must be a string, but ${typeof sample} given`);\n  }\n  return regexp.test(sample);\n}\nfunction wildcardMatch(pattern, options) {\n  if (typeof pattern !== \"string\" && !Array.isArray(pattern)) {\n    throw new TypeError(\n      `The first argument must be a single pattern string or an array of patterns, but ${typeof pattern} given`\n    );\n  }\n  if (typeof options === \"string\" || typeof options === \"boolean\") {\n    options = { separator: options };\n  }\n  if (arguments.length === 2 && !(typeof options === \"undefined\" || typeof options === \"object\" && options !== null && !Array.isArray(options))) {\n    throw new TypeError(\n      `The second argument must be an options object or a string/boolean separator, but ${typeof options} given`\n    );\n  }\n  options = options || {};\n  if (options.separator === \"\\\\\") {\n    throw new Error(\n      \"\\\\ is not a valid separator because it is used for escaping. Try setting the separator to `true` instead\"\n    );\n  }\n  let regexpPattern = transform(pattern, options.separator);\n  let regexp = new RegExp(`^${regexpPattern}$`, options.flags);\n  let fn = isMatch.bind(null, regexp);\n  fn.options = options;\n  fn.pattern = pattern;\n  fn.regexp = regexp;\n  return fn;\n}\n\nconst originCheckMiddleware = createAuthMiddleware(async (ctx) => {\n  if (ctx.request?.method !== \"POST\" || !ctx.request) {\n    return;\n  }\n  const headers = ctx.request?.headers;\n  const request = ctx.request;\n  const { body, query, context } = ctx;\n  if (isSimpleRequest(headers) && !ctx.context.skipCSRFCheck) {\n    throw new APIError(\"FORBIDDEN\", { message: \"Invalid request\" });\n  }\n  const originHeader = headers?.get(\"origin\") || headers?.get(\"referer\") || \"\";\n  const callbackURL = body?.callbackURL || query?.callbackURL;\n  const redirectURL = body?.redirectTo;\n  const errorCallbackURL = body?.errorCallbackURL;\n  const newUserCallbackURL = body?.newUserCallbackURL;\n  const trustedOrigins = Array.isArray(context.options.trustedOrigins) ? context.trustedOrigins : [\n    ...context.trustedOrigins,\n    ...await context.options.trustedOrigins?.(request) || []\n  ];\n  const useCookies = headers?.has(\"cookie\");\n  const matchesPattern = (url, pattern) => {\n    if (url.startsWith(\"/\")) {\n      return false;\n    }\n    if (pattern.includes(\"*\")) {\n      if (pattern.includes(\"://\")) {\n        return wildcardMatch(pattern)(getOrigin(url) || url);\n      }\n      const host = getHost(url);\n      if (!host) {\n        return false;\n      }\n      return wildcardMatch(pattern)(host);\n    }\n    const protocol = getProtocol(url);\n    return protocol === \"http:\" || protocol === \"https:\" || !protocol ? pattern === getOrigin(url) : url.startsWith(pattern);\n  };\n  const validateURL = (url, label) => {\n    if (!url) {\n      return;\n    }\n    const isTrustedOrigin = trustedOrigins.some(\n      (origin) => matchesPattern(url, origin) || url?.startsWith(\"/\") && label !== \"origin\" && /^\\/(?!\\/|\\\\|%2f|%5c)[\\w\\-.\\+/@]*(?:\\?[\\w\\-.\\+/=&%@]*)?$/.test(url)\n    );\n    if (!isTrustedOrigin) {\n      ctx.context.logger.error(`Invalid ${label}: ${url}`);\n      ctx.context.logger.info(\n        `If it's a valid URL, please add ${url} to trustedOrigins in your auth config\n`,\n        `Current list of trustedOrigins: ${trustedOrigins}`\n      );\n      throw new APIError(\"FORBIDDEN\", { message: `Invalid ${label}` });\n    }\n  };\n  if (useCookies && !ctx.context.skipCSRFCheck && !ctx.context.skipOriginCheck) {\n    if (!originHeader || originHeader === \"null\") {\n      throw new APIError(\"FORBIDDEN\", { message: \"Missing or null Origin\" });\n    }\n    validateURL(originHeader, \"origin\");\n  }\n  callbackURL && validateURL(callbackURL, \"callbackURL\");\n  redirectURL && validateURL(redirectURL, \"redirectURL\");\n  errorCallbackURL && validateURL(errorCallbackURL, \"errorCallbackURL\");\n  newUserCallbackURL && validateURL(newUserCallbackURL, \"newUserCallbackURL\");\n});\nconst originCheck = (getValue) => createAuthMiddleware(async (ctx) => {\n  if (!ctx.request) {\n    return;\n  }\n  const { context } = ctx;\n  const callbackURL = getValue(ctx);\n  const trustedOrigins = Array.isArray(\n    context.options.trustedOrigins\n  ) ? context.trustedOrigins : [\n    ...context.trustedOrigins,\n    ...await context.options.trustedOrigins?.(ctx.request) || []\n  ];\n  const matchesPattern = (url, pattern) => {\n    if (url.startsWith(\"/\")) {\n      return false;\n    }\n    if (pattern.includes(\"*\")) {\n      if (pattern.includes(\"://\")) {\n        return wildcardMatch(pattern)(getOrigin(url) || url);\n      }\n      const host = getHost(url);\n      if (!host) {\n        return false;\n      }\n      return wildcardMatch(pattern)(host);\n    }\n    const protocol = getProtocol(url);\n    return protocol === \"http:\" || protocol === \"https:\" || !protocol ? pattern === getOrigin(url) : url.startsWith(pattern);\n  };\n  const validateURL = (url, label) => {\n    if (!url) {\n      return;\n    }\n    const isTrustedOrigin = trustedOrigins.some(\n      (origin) => matchesPattern(url, origin) || url?.startsWith(\"/\") && label !== \"origin\" && /^\\/(?!\\/|\\\\|%2f|%5c)[\\w\\-.\\+/@]*(?:\\?[\\w\\-.\\+/=&%@]*)?$/.test(\n        url\n      )\n    );\n    if (!isTrustedOrigin) {\n      ctx.context.logger.error(`Invalid ${label}: ${url}`);\n      ctx.context.logger.info(\n        `If it's a valid URL, please add ${url} to trustedOrigins in your auth config\n`,\n        `Current list of trustedOrigins: ${trustedOrigins}`\n      );\n      throw new APIError(\"FORBIDDEN\", { message: `Invalid ${label}` });\n    }\n  };\n  const callbacks = Array.isArray(callbackURL) ? callbackURL : [callbackURL];\n  for (const url of callbacks) {\n    validateURL(url, \"callbackURL\");\n  }\n});\nfunction isSimpleRequest(headers) {\n  const SIMPLE_HEADERS = [\n    \"accept\",\n    \"accept-language\",\n    \"content-language\",\n    \"content-type\"\n  ];\n  const SIMPLE_CONTENT_TYPES = [\n    \"application/x-www-form-urlencoded\",\n    \"multipart/form-data\",\n    \"text/plain\"\n  ];\n  for (const [key, value] of headers.entries()) {\n    if (!SIMPLE_HEADERS.includes(key.toLowerCase())) {\n      return false;\n    }\n    if (key.toLowerCase() === \"content-type\" && !SIMPLE_CONTENT_TYPES.includes(\n      value?.split(\";\")[0]?.trim()?.toLowerCase() || \"\"\n    )) {\n      return false;\n    }\n  }\n  return true;\n}\n\nasync function createEmailVerificationToken(secret, email, updateTo, expiresIn = 3600) {\n  const token = await signJWT(\n    {\n      email: email.toLowerCase(),\n      updateTo\n    },\n    secret,\n    expiresIn\n  );\n  return token;\n}\nasync function sendVerificationEmailFn(ctx, user) {\n  if (!ctx.context.options.emailVerification?.sendVerificationEmail) {\n    ctx.context.logger.error(\"Verification email isn't enabled.\");\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Verification email isn't enabled\"\n    });\n  }\n  const token = await createEmailVerificationToken(\n    ctx.context.secret,\n    user.email,\n    void 0,\n    ctx.context.options.emailVerification?.expiresIn\n  );\n  const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n  await ctx.context.options.emailVerification.sendVerificationEmail(\n    {\n      user,\n      url,\n      token\n    },\n    ctx.request\n  );\n}\nconst sendVerificationEmail = createAuthEndpoint(\n  \"/send-verification-email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      email: z.email().meta({\n        description: \"The email to send the verification email to\"\n      }),\n      callbackURL: z.string().meta({\n        description: \"The URL to use for email verification callback\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Send a verification email to the user\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  email: {\n                    type: \"string\",\n                    description: \"The email to send the verification email to\",\n                    example: \"user@example.com\"\n                  },\n                  callbackURL: {\n                    type: \"string\",\n                    description: \"The URL to use for email verification callback\",\n                    example: \"https://example.com/callback\",\n                    nullable: true\n                  }\n                },\n                required: [\"email\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the email was sent successfully\",\n                      example: true\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            description: \"Bad Request\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    message: {\n                      type: \"string\",\n                      description: \"Error message\",\n                      example: \"Verification email isn't enabled\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailVerification?.sendVerificationEmail) {\n      ctx.context.logger.error(\"Verification email isn't enabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Verification email isn't enabled\"\n      });\n    }\n    const { email } = ctx.body;\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      const user = await ctx.context.internalAdapter.findUserByEmail(email);\n      if (!user) {\n        return ctx.json({\n          status: true\n        });\n      }\n      await sendVerificationEmailFn(ctx, user.user);\n      return ctx.json({\n        status: true\n      });\n    }\n    if (session?.user.emailVerified) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"You can only send a verification email to an unverified email\"\n      });\n    }\n    if (session?.user.email !== email) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"You can only send a verification email to your own email\"\n      });\n    }\n    await sendVerificationEmailFn(ctx, session.user);\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst verifyEmail = createAuthEndpoint(\n  \"/verify-email\",\n  {\n    method: \"GET\",\n    query: z.object({\n      token: z.string().meta({\n        description: \"The token to verify the email\"\n      }),\n      callbackURL: z.string().meta({\n        description: \"The URL to redirect to after email verification\"\n      }).optional()\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Verify the email of the user\",\n        parameters: [\n          {\n            name: \"token\",\n            in: \"query\",\n            description: \"The token to verify the email\",\n            required: true,\n            schema: {\n              type: \"string\"\n            }\n          },\n          {\n            name: \"callbackURL\",\n            in: \"query\",\n            description: \"The URL to redirect to after email verification\",\n            required: false,\n            schema: {\n              type: \"string\"\n            }\n          }\n        ],\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"User ID\"\n                        },\n                        email: {\n                          type: \"string\",\n                          description: \"User email\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"User name\"\n                        },\n                        image: {\n                          type: \"string\",\n                          description: \"User image URL\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Indicates if the user email is verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          description: \"User creation date\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          description: \"User update date\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"image\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    },\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the email was verified successfully\"\n                    }\n                  },\n                  required: [\"user\", \"status\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    function redirectOnError(error) {\n      if (ctx.query.callbackURL) {\n        if (ctx.query.callbackURL.includes(\"?\")) {\n          throw ctx.redirect(`${ctx.query.callbackURL}&error=${error}`);\n        }\n        throw ctx.redirect(`${ctx.query.callbackURL}?error=${error}`);\n      }\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: error\n      });\n    }\n    const { token } = ctx.query;\n    let jwt;\n    try {\n      jwt = await jwtVerify(\n        token,\n        new TextEncoder().encode(ctx.context.secret),\n        {\n          algorithms: [\"HS256\"]\n        }\n      );\n    } catch (e) {\n      if (e instanceof JWTExpired) {\n        return redirectOnError(\"token_expired\");\n      }\n      return redirectOnError(\"invalid_token\");\n    }\n    const schema = z.object({\n      email: z.string().email(),\n      updateTo: z.string().optional()\n    });\n    const parsed = schema.parse(jwt.payload);\n    const user = await ctx.context.internalAdapter.findUserByEmail(\n      parsed.email\n    );\n    if (!user) {\n      return redirectOnError(\"user_not_found\");\n    }\n    if (parsed.updateTo) {\n      const session = await getSessionFromCtx(ctx);\n      if (!session) {\n        if (ctx.query.callbackURL) {\n          throw ctx.redirect(`${ctx.query.callbackURL}?error=unauthorized`);\n        }\n        return redirectOnError(\"unauthorized\");\n      }\n      if (session.user.email !== parsed.email) {\n        if (ctx.query.callbackURL) {\n          throw ctx.redirect(`${ctx.query.callbackURL}?error=unauthorized`);\n        }\n        return redirectOnError(\"unauthorized\");\n      }\n      const updatedUser2 = await ctx.context.internalAdapter.updateUserByEmail(\n        parsed.email,\n        {\n          email: parsed.updateTo,\n          emailVerified: false\n        },\n        ctx\n      );\n      const newToken = await createEmailVerificationToken(\n        ctx.context.secret,\n        parsed.updateTo\n      );\n      await ctx.context.options.emailVerification?.sendVerificationEmail?.(\n        {\n          user: updatedUser2,\n          url: `${ctx.context.baseURL}/verify-email?token=${newToken}&callbackURL=${ctx.query.callbackURL || \"/\"}`,\n          token: newToken\n        },\n        ctx.request\n      );\n      await setSessionCookie(ctx, {\n        session: session.session,\n        user: {\n          ...session.user,\n          email: parsed.updateTo,\n          emailVerified: false\n        }\n      });\n      if (ctx.query.callbackURL) {\n        throw ctx.redirect(ctx.query.callbackURL);\n      }\n      return ctx.json({\n        status: true,\n        user: {\n          id: updatedUser2.id,\n          email: updatedUser2.email,\n          name: updatedUser2.name,\n          image: updatedUser2.image,\n          emailVerified: updatedUser2.emailVerified,\n          createdAt: updatedUser2.createdAt,\n          updatedAt: updatedUser2.updatedAt\n        }\n      });\n    }\n    if (ctx.context.options.emailVerification?.onEmailVerification) {\n      await ctx.context.options.emailVerification.onEmailVerification(\n        user.user,\n        ctx.request\n      );\n    }\n    const updatedUser = await ctx.context.internalAdapter.updateUserByEmail(\n      parsed.email,\n      {\n        emailVerified: true\n      },\n      ctx\n    );\n    if (ctx.context.options.emailVerification?.afterEmailVerification) {\n      await ctx.context.options.emailVerification.afterEmailVerification(\n        updatedUser,\n        ctx.request\n      );\n    }\n    if (ctx.context.options.emailVerification?.autoSignInAfterVerification) {\n      const currentSession = await getSessionFromCtx(ctx);\n      if (!currentSession || currentSession.user.email !== parsed.email) {\n        const session = await ctx.context.internalAdapter.createSession(\n          user.user.id,\n          ctx\n        );\n        if (!session) {\n          throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n            message: \"Failed to create session\"\n          });\n        }\n        await setSessionCookie(ctx, {\n          session,\n          user: {\n            ...user.user,\n            emailVerified: true\n          }\n        });\n      } else {\n        await setSessionCookie(ctx, {\n          session: currentSession.session,\n          user: {\n            ...currentSession.user,\n            emailVerified: true\n          }\n        });\n      }\n    }\n    if (ctx.query.callbackURL) {\n      throw ctx.redirect(ctx.query.callbackURL);\n    }\n    return ctx.json({\n      status: true,\n      user: null\n    });\n  }\n);\n\nconst HIDE_METADATA = {\n  isAction: false\n};\n\nasync function generateState(c, link) {\n  const callbackURL = c.body?.callbackURL || c.context.options.baseURL;\n  if (!callbackURL) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"callbackURL is required\"\n    });\n  }\n  const codeVerifier = generateRandomString(128);\n  const state = generateRandomString(32);\n  const stateCookie = c.context.createAuthCookie(\"state\", {\n    maxAge: 5 * 60 * 1e3\n    // 5 minutes\n  });\n  await c.setSignedCookie(\n    stateCookie.name,\n    state,\n    c.context.secret,\n    stateCookie.attributes\n  );\n  const data = JSON.stringify({\n    callbackURL,\n    codeVerifier,\n    errorURL: c.body?.errorCallbackURL,\n    newUserURL: c.body?.newUserCallbackURL,\n    link,\n    /**\n     * This is the actual expiry time of the state\n     */\n    expiresAt: Date.now() + 10 * 60 * 1e3,\n    requestSignUp: c.body?.requestSignUp\n  });\n  const expiresAt = /* @__PURE__ */ new Date();\n  expiresAt.setMinutes(expiresAt.getMinutes() + 10);\n  const verification = await c.context.internalAdapter.createVerificationValue(\n    {\n      value: data,\n      identifier: state,\n      expiresAt\n    },\n    c\n  );\n  if (!verification) {\n    c.context.logger.error(\n      \"Unable to create verification. Make sure the database adapter is properly working and there is a verification table in the database\"\n    );\n    throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n      message: \"Unable to create verification\"\n    });\n  }\n  return {\n    state: verification.identifier,\n    codeVerifier\n  };\n}\nasync function parseState(c) {\n  const state = c.query.state || c.body.state;\n  const data = await c.context.internalAdapter.findVerificationValue(state);\n  if (!data) {\n    c.context.logger.error(\"State Mismatch. Verification not found\", {\n      state\n    });\n    const errorURL = c.context.options.onAPIError?.errorURL || `${c.context.baseURL}/error`;\n    throw c.redirect(`${errorURL}?error=please_restart_the_process`);\n  }\n  const parsedData = z.object({\n    callbackURL: z.string(),\n    codeVerifier: z.string(),\n    errorURL: z.string().optional(),\n    newUserURL: z.string().optional(),\n    expiresAt: z.number(),\n    link: z.object({\n      email: z.string(),\n      userId: z.coerce.string()\n    }).optional(),\n    requestSignUp: z.boolean().optional()\n  }).parse(JSON.parse(data.value));\n  if (!parsedData.errorURL) {\n    parsedData.errorURL = `${c.context.baseURL}/error`;\n  }\n  const stateCookie = c.context.createAuthCookie(\"state\");\n  const stateCookieValue = await c.getSignedCookie(\n    stateCookie.name,\n    c.context.secret\n  );\n  const skipStateCookieCheck = c.context.oauthConfig?.skipStateCookieCheck;\n  if (!skipStateCookieCheck && (!stateCookieValue || stateCookieValue !== state)) {\n    const errorURL = c.context.options.onAPIError?.errorURL || `${c.context.baseURL}/error`;\n    throw c.redirect(`${errorURL}?error=state_mismatch`);\n  }\n  c.setCookie(stateCookie.name, \"\", {\n    maxAge: 0\n  });\n  if (parsedData.expiresAt < Date.now()) {\n    await c.context.internalAdapter.deleteVerificationValue(data.id);\n    const errorURL = c.context.options.onAPIError?.errorURL || `${c.context.baseURL}/error`;\n    throw c.redirect(`${errorURL}?error=please_restart_the_process`);\n  }\n  await c.context.internalAdapter.deleteVerificationValue(data.id);\n  return parsedData;\n}\n\nfunction decryptOAuthToken(token, ctx) {\n  if (!token) return token;\n  if (ctx.options.account?.encryptOAuthTokens) {\n    return symmetricDecrypt({\n      key: ctx.secret,\n      data: token\n    });\n  }\n  return token;\n}\nfunction setTokenUtil(token, ctx) {\n  if (ctx.options.account?.encryptOAuthTokens && token) {\n    return symmetricEncrypt({\n      key: ctx.secret,\n      data: token\n    });\n  }\n  return token;\n}\n\nasync function handleOAuthUserInfo(c, {\n  userInfo,\n  account,\n  callbackURL,\n  disableSignUp,\n  overrideUserInfo\n}) {\n  const dbUser = await c.context.internalAdapter.findOAuthUser(\n    userInfo.email.toLowerCase(),\n    account.accountId,\n    account.providerId\n  ).catch((e) => {\n    logger.error(\n      \"Better auth was unable to query your database.\\nError: \",\n      e\n    );\n    const errorURL = c.context.options.onAPIError?.errorURL || `${c.context.baseURL}/error`;\n    throw c.redirect(`${errorURL}?error=internal_server_error`);\n  });\n  let user = dbUser?.user;\n  let isRegister = !user;\n  if (dbUser) {\n    const hasBeenLinked = dbUser.accounts.find(\n      (a) => a.providerId === account.providerId && a.accountId === account.accountId\n    );\n    if (!hasBeenLinked) {\n      const trustedProviders = c.context.options.account?.accountLinking?.trustedProviders;\n      const isTrustedProvider = trustedProviders?.includes(\n        account.providerId\n      );\n      if (!isTrustedProvider && !userInfo.emailVerified || c.context.options.account?.accountLinking?.enabled === false) {\n        if (isDevelopment()) {\n          logger.warn(\n            `User already exist but account isn't linked to ${account.providerId}. To read more about how account linking works in Better Auth see https://www.better-auth.com/docs/concepts/users-accounts#account-linking.`\n          );\n        }\n        return {\n          error: \"account not linked\",\n          data: null\n        };\n      }\n      try {\n        await c.context.internalAdapter.linkAccount(\n          {\n            providerId: account.providerId,\n            accountId: userInfo.id.toString(),\n            userId: dbUser.user.id,\n            accessToken: await setTokenUtil(account.accessToken, c.context),\n            refreshToken: await setTokenUtil(account.refreshToken, c.context),\n            idToken: account.idToken,\n            accessTokenExpiresAt: account.accessTokenExpiresAt,\n            refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n            scope: account.scope\n          },\n          c\n        );\n      } catch (e) {\n        logger.error(\"Unable to link account\", e);\n        return {\n          error: \"unable to link account\",\n          data: null\n        };\n      }\n      if (userInfo.emailVerified && !dbUser.user.emailVerified && userInfo.email.toLowerCase() === dbUser.user.email) {\n        await c.context.internalAdapter.updateUser(dbUser.user.id, {\n          emailVerified: true\n        });\n      }\n    } else {\n      if (c.context.options.account?.updateAccountOnSignIn !== false) {\n        const updateData = Object.fromEntries(\n          Object.entries({\n            idToken: account.idToken,\n            accessToken: await setTokenUtil(account.accessToken, c.context),\n            refreshToken: await setTokenUtil(account.refreshToken, c.context),\n            accessTokenExpiresAt: account.accessTokenExpiresAt,\n            refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n            scope: account.scope\n          }).filter(([_, value]) => value !== void 0)\n        );\n        if (Object.keys(updateData).length > 0) {\n          await c.context.internalAdapter.updateAccount(\n            hasBeenLinked.id,\n            updateData,\n            c\n          );\n        }\n      }\n      if (userInfo.emailVerified && !dbUser.user.emailVerified && userInfo.email.toLowerCase() === dbUser.user.email) {\n        await c.context.internalAdapter.updateUser(dbUser.user.id, {\n          emailVerified: true\n        });\n      }\n    }\n    if (overrideUserInfo) {\n      const { id: _, ...restUserInfo } = userInfo;\n      await c.context.internalAdapter.updateUser(dbUser.user.id, {\n        ...restUserInfo,\n        email: userInfo.email.toLowerCase(),\n        emailVerified: userInfo.email.toLowerCase() === dbUser.user.email ? dbUser.user.emailVerified || userInfo.emailVerified : userInfo.emailVerified\n      });\n    }\n  } else {\n    if (disableSignUp) {\n      return {\n        error: \"signup disabled\",\n        data: null,\n        isRegister: false\n      };\n    }\n    try {\n      const { id: _, ...restUserInfo } = userInfo;\n      user = await c.context.internalAdapter.createOAuthUser(\n        {\n          ...restUserInfo,\n          email: userInfo.email.toLowerCase()\n        },\n        {\n          accessToken: await setTokenUtil(account.accessToken, c.context),\n          refreshToken: await setTokenUtil(account.refreshToken, c.context),\n          idToken: account.idToken,\n          accessTokenExpiresAt: account.accessTokenExpiresAt,\n          refreshTokenExpiresAt: account.refreshTokenExpiresAt,\n          scope: account.scope,\n          providerId: account.providerId,\n          accountId: userInfo.id.toString()\n        },\n        c\n      ).then((res) => res?.user);\n      if (!userInfo.emailVerified && user && c.context.options.emailVerification?.sendOnSignUp) {\n        const token = await createEmailVerificationToken(\n          c.context.secret,\n          user.email,\n          void 0,\n          c.context.options.emailVerification?.expiresIn\n        );\n        const url = `${c.context.baseURL}/verify-email?token=${token}&callbackURL=${callbackURL}`;\n        await c.context.options.emailVerification?.sendVerificationEmail?.(\n          {\n            user,\n            url,\n            token\n          },\n          c.request\n        );\n      }\n    } catch (e) {\n      logger.error(e);\n      if (e instanceof APIError) {\n        return {\n          error: e.message,\n          data: null,\n          isRegister: false\n        };\n      }\n      return {\n        error: \"unable to create user\",\n        data: null,\n        isRegister: false\n      };\n    }\n  }\n  if (!user) {\n    return {\n      error: \"unable to create user\",\n      data: null,\n      isRegister: false\n    };\n  }\n  const session = await c.context.internalAdapter.createSession(user.id, c);\n  if (!session) {\n    return {\n      error: \"unable to create session\",\n      data: null,\n      isRegister: false\n    };\n  }\n  return {\n    data: {\n      session,\n      user\n    },\n    error: null,\n    isRegister\n  };\n}\n\nconst signInSocial = createAuthEndpoint(\n  \"/sign-in/social\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * Callback URL to redirect to after the user\n       * has signed in.\n       */\n      callbackURL: z.string().meta({\n        description: \"Callback URL to redirect to after the user has signed in\"\n      }).optional(),\n      /**\n       * callback url to redirect if the user is newly registered.\n       *\n       * useful if you have different routes for existing users and new users\n       */\n      newUserCallbackURL: z.string().optional(),\n      /**\n       * Callback url to redirect to if an error happens\n       *\n       * If it's initiated from the client sdk this defaults to\n       * the current url.\n       */\n      errorCallbackURL: z.string().meta({\n        description: \"Callback URL to redirect to if an error happens\"\n      }).optional(),\n      /**\n       * OAuth2 provider to use`\n       */\n      provider: SocialProviderListEnum,\n      /**\n       * Disable automatic redirection to the provider\n       *\n       * This is useful if you want to handle the redirection\n       * yourself like in a popup or a different tab.\n       */\n      disableRedirect: z.boolean().meta({\n        description: \"Disable automatic redirection to the provider. Useful for handling the redirection yourself\"\n      }).optional(),\n      /**\n       * ID token from the provider\n       *\n       * This is used to sign in the user\n       * if the user is already signed in with the\n       * provider in the frontend.\n       *\n       * Only applicable if the provider supports\n       * it. Currently only `apple` and `google` is\n       * supported out of the box.\n       */\n      idToken: z.optional(\n        z.object({\n          /**\n           * ID token from the provider\n           */\n          token: z.string().meta({\n            description: \"ID token from the provider\"\n          }),\n          /**\n           * The nonce used to generate the token\n           */\n          nonce: z.string().meta({\n            description: \"Nonce used to generate the token\"\n          }).optional(),\n          /**\n           * Access token from the provider\n           */\n          accessToken: z.string().meta({\n            description: \"Access token from the provider\"\n          }).optional(),\n          /**\n           * Refresh token from the provider\n           */\n          refreshToken: z.string().meta({\n            description: \"Refresh token from the provider\"\n          }).optional(),\n          /**\n           * Expiry date of the token\n           */\n          expiresAt: z.number().meta({\n            description: \"Expiry date of the token\"\n          }).optional()\n        })\n      ),\n      scopes: z.array(z.string()).meta({\n        description: \"Array of scopes to request from the provider. This will override the default scopes passed.\"\n      }).optional(),\n      /**\n       * Explicitly request sign-up\n       *\n       * Should be used to allow sign up when\n       * disableImplicitSignUp for this provider is\n       * true\n       */\n      requestSignUp: z.boolean().meta({\n        description: \"Explicitly request sign-up. Useful when disableImplicitSignUp is true for this provider\"\n      }).optional(),\n      /**\n       * The login hint to use for the authorization code request\n       */\n      loginHint: z.string().meta({\n        description: \"The login hint to use for the authorization code request\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Sign in with a social provider\",\n        operationId: \"socialSignIn\",\n        responses: {\n          \"200\": {\n            description: \"Success - Returns either session details or redirect URL\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  // todo: we need support for multiple schema\n                  type: \"object\",\n                  description: \"Session response when idToken is provided\",\n                  properties: {\n                    redirect: {\n                      type: \"boolean\",\n                      enum: [false]\n                    },\n                    token: {\n                      type: \"string\",\n                      description: \"Session token\",\n                      url: {\n                        type: \"null\",\n                        nullable: true\n                      },\n                      user: {\n                        type: \"object\",\n                        properties: {\n                          id: { type: \"string\" },\n                          email: { type: \"string\" },\n                          name: {\n                            type: \"string\",\n                            nullable: true\n                          },\n                          image: {\n                            type: \"string\",\n                            nullable: true\n                          },\n                          emailVerified: {\n                            type: \"boolean\"\n                          },\n                          createdAt: {\n                            type: \"string\",\n                            format: \"date-time\"\n                          },\n                          updatedAt: {\n                            type: \"string\",\n                            format: \"date-time\"\n                          }\n                        },\n                        required: [\n                          \"id\",\n                          \"email\",\n                          \"emailVerified\",\n                          \"createdAt\",\n                          \"updatedAt\"\n                        ]\n                      }\n                    }\n                  },\n                  required: [\"redirect\", \"token\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.body.provider\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Provider not found. Make sure to add the provider in your auth config\",\n        {\n          provider: c.body.provider\n        }\n      );\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.PROVIDER_NOT_FOUND\n      });\n    }\n    if (c.body.idToken) {\n      if (!provider.verifyIdToken) {\n        c.context.logger.error(\n          \"Provider does not support id token verification\",\n          {\n            provider: c.body.provider\n          }\n        );\n        throw new APIError(\"NOT_FOUND\", {\n          message: BASE_ERROR_CODES.ID_TOKEN_NOT_SUPPORTED\n        });\n      }\n      const { token, nonce } = c.body.idToken;\n      const valid = await provider.verifyIdToken(token, nonce);\n      if (!valid) {\n        c.context.logger.error(\"Invalid id token\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.INVALID_TOKEN\n        });\n      }\n      const userInfo = await provider.getUserInfo({\n        idToken: token,\n        accessToken: c.body.idToken.accessToken,\n        refreshToken: c.body.idToken.refreshToken\n      });\n      if (!userInfo || !userInfo?.user) {\n        c.context.logger.error(\"Failed to get user info\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.FAILED_TO_GET_USER_INFO\n        });\n      }\n      if (!userInfo.user.email) {\n        c.context.logger.error(\"User email not found\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.USER_EMAIL_NOT_FOUND\n        });\n      }\n      const data = await handleOAuthUserInfo(c, {\n        userInfo: {\n          ...userInfo.user,\n          email: userInfo.user.email,\n          id: String(userInfo.user.id),\n          name: userInfo.user.name || \"\",\n          image: userInfo.user.image,\n          emailVerified: userInfo.user.emailVerified || false\n        },\n        account: {\n          providerId: provider.id,\n          accountId: String(userInfo.user.id),\n          accessToken: c.body.idToken.accessToken\n        },\n        callbackURL: c.body.callbackURL,\n        disableSignUp: provider.disableImplicitSignUp && !c.body.requestSignUp || provider.disableSignUp\n      });\n      if (data.error) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: data.error\n        });\n      }\n      await setSessionCookie(c, data.data);\n      return c.json({\n        redirect: false,\n        token: data.data.session.token,\n        url: void 0,\n        user: {\n          id: data.data.user.id,\n          email: data.data.user.email,\n          name: data.data.user.name,\n          image: data.data.user.image,\n          emailVerified: data.data.user.emailVerified,\n          createdAt: data.data.user.createdAt,\n          updatedAt: data.data.user.updatedAt\n        }\n      });\n    }\n    const { codeVerifier, state } = await generateState(c);\n    const url = await provider.createAuthorizationURL({\n      state,\n      codeVerifier,\n      redirectURI: `${c.context.baseURL}/callback/${provider.id}`,\n      scopes: c.body.scopes,\n      loginHint: c.body.loginHint\n    });\n    return c.json({\n      url: url.toString(),\n      redirect: !c.body.disableRedirect\n    });\n  }\n);\nconst signInEmail = createAuthEndpoint(\n  \"/sign-in/email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * Email of the user\n       */\n      email: z.string().meta({\n        description: \"Email of the user\"\n      }),\n      /**\n       * Password of the user\n       */\n      password: z.string().meta({\n        description: \"Password of the user\"\n      }),\n      /**\n       * Callback URL to use as a redirect for email\n       * verification and for possible redirects\n       */\n      callbackURL: z.string().meta({\n        description: \"Callback URL to use as a redirect for email verification\"\n      }).optional(),\n      /**\n       * If this is false, the session will not be remembered\n       * @default true\n       */\n      rememberMe: z.boolean().meta({\n        description: \"If this is false, the session will not be remembered. Default is `true`.\"\n      }).default(true).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Sign in with email and password\",\n        responses: {\n          \"200\": {\n            description: \"Success - Returns either session details or redirect URL\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  // todo: we need support for multiple schema\n                  type: \"object\",\n                  description: \"Session response when idToken is provided\",\n                  properties: {\n                    redirect: {\n                      type: \"boolean\",\n                      enum: [false]\n                    },\n                    token: {\n                      type: \"string\",\n                      description: \"Session token\"\n                    },\n                    url: {\n                      type: \"null\",\n                      nullable: true\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: { type: \"string\" },\n                        email: { type: \"string\" },\n                        name: {\n                          type: \"string\",\n                          nullable: true\n                        },\n                        image: {\n                          type: \"string\",\n                          nullable: true\n                        },\n                        emailVerified: {\n                          type: \"boolean\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"redirect\", \"token\", \"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options?.emailAndPassword?.enabled) {\n      ctx.context.logger.error(\n        \"Email and password is not enabled. Make sure to enable it in the options on you `auth.ts` file. Check `https://better-auth.com/docs/authentication/email-password` for more!\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email and password is not enabled\"\n      });\n    }\n    const { email, password } = ctx.body;\n    const isValidEmail = z.string().email().safeParse(email);\n    if (!isValidEmail.success) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL\n      });\n    }\n    const user = await ctx.context.internalAdapter.findUserByEmail(email, {\n      includeAccounts: true\n    });\n    if (!user) {\n      await ctx.context.password.hash(password);\n      ctx.context.logger.error(\"User not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const credentialAccount = user.accounts.find(\n      (a) => a.providerId === \"credential\"\n    );\n    if (!credentialAccount) {\n      ctx.context.logger.error(\"Credential account not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const currentPassword = credentialAccount?.password;\n    if (!currentPassword) {\n      ctx.context.logger.error(\"Password not found\", { email });\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    const validPassword = await ctx.context.password.verify({\n      hash: currentPassword,\n      password\n    });\n    if (!validPassword) {\n      ctx.context.logger.error(\"Invalid password\");\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL_OR_PASSWORD\n      });\n    }\n    if (ctx.context.options?.emailAndPassword?.requireEmailVerification && !user.user.emailVerified) {\n      if (!ctx.context.options?.emailVerification?.sendVerificationEmail) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: BASE_ERROR_CODES.EMAIL_NOT_VERIFIED\n        });\n      }\n      if (ctx.context.options?.emailVerification?.sendOnSignIn) {\n        const token = await createEmailVerificationToken(\n          ctx.context.secret,\n          user.user.email,\n          void 0,\n          ctx.context.options.emailVerification?.expiresIn\n        );\n        const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n        await ctx.context.options.emailVerification.sendVerificationEmail(\n          {\n            user: user.user,\n            url,\n            token\n          },\n          ctx.request\n        );\n      }\n      throw new APIError(\"FORBIDDEN\", {\n        message: BASE_ERROR_CODES.EMAIL_NOT_VERIFIED\n      });\n    }\n    const session = await ctx.context.internalAdapter.createSession(\n      user.user.id,\n      ctx,\n      ctx.body.rememberMe === false\n    );\n    if (!session) {\n      ctx.context.logger.error(\"Failed to create session\");\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_SESSION\n      });\n    }\n    await setSessionCookie(\n      ctx,\n      {\n        session,\n        user: user.user\n      },\n      ctx.body.rememberMe === false\n    );\n    return ctx.json({\n      redirect: !!ctx.body.callbackURL,\n      token: session.token,\n      url: ctx.body.callbackURL,\n      user: {\n        id: user.user.id,\n        email: user.user.email,\n        name: user.user.name,\n        image: user.user.image,\n        emailVerified: user.user.emailVerified,\n        createdAt: user.user.createdAt,\n        updatedAt: user.user.updatedAt\n      }\n    });\n  }\n);\n\nconst schema = z.object({\n  code: z.string().optional(),\n  error: z.string().optional(),\n  device_id: z.string().optional(),\n  error_description: z.string().optional(),\n  state: z.string().optional(),\n  user: z.string().optional()\n});\nconst callbackOAuth = createAuthEndpoint(\n  \"/callback/:id\",\n  {\n    method: [\"GET\", \"POST\"],\n    body: schema.optional(),\n    query: schema.optional(),\n    metadata: HIDE_METADATA\n  },\n  async (c) => {\n    let queryOrBody;\n    const defaultErrorURL = c.context.options.onAPIError?.errorURL || `${c.context.baseURL}/error`;\n    try {\n      if (c.method === \"GET\") {\n        queryOrBody = schema.parse(c.query);\n      } else if (c.method === \"POST\") {\n        queryOrBody = schema.parse(c.body);\n      } else {\n        throw new Error(\"Unsupported method\");\n      }\n    } catch (e) {\n      c.context.logger.error(\"INVALID_CALLBACK_REQUEST\", e);\n      throw c.redirect(`${defaultErrorURL}?error=invalid_callback_request`);\n    }\n    const { code, error, state, error_description, device_id } = queryOrBody;\n    if (!state) {\n      c.context.logger.error(\"State not found\", error);\n      const sep = defaultErrorURL.includes(\"?\") ? \"&\" : \"?\";\n      const url = `${defaultErrorURL}${sep}state=state_not_found`;\n      throw c.redirect(url);\n    }\n    const {\n      codeVerifier,\n      callbackURL,\n      link,\n      errorURL,\n      newUserURL,\n      requestSignUp\n    } = await parseState(c);\n    function redirectOnError(error2, description) {\n      const baseURL = errorURL ?? defaultErrorURL;\n      const params = new URLSearchParams({ error: error2 });\n      if (description) params.set(\"error_description\", description);\n      const sep = baseURL.includes(\"?\") ? \"&\" : \"?\";\n      const url = `${baseURL}${sep}${params.toString()}`;\n      throw c.redirect(url);\n    }\n    if (error) {\n      redirectOnError(error, error_description);\n    }\n    if (!code) {\n      c.context.logger.error(\"Code not found\");\n      throw redirectOnError(\"no_code\");\n    }\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.params.id\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Oauth provider with id\",\n        c.params.id,\n        \"not found\"\n      );\n      throw redirectOnError(\"oauth_provider_not_found\");\n    }\n    let tokens;\n    try {\n      tokens = await provider.validateAuthorizationCode({\n        code,\n        codeVerifier,\n        deviceId: device_id,\n        redirectURI: `${c.context.baseURL}/callback/${provider.id}`\n      });\n    } catch (e) {\n      c.context.logger.error(\"\", e);\n      throw redirectOnError(\"invalid_code\");\n    }\n    const userInfo = await provider.getUserInfo({\n      ...tokens,\n      user: c.body?.user ? safeJSONParse(c.body.user) : void 0\n    }).then((res) => res?.user);\n    if (!userInfo) {\n      c.context.logger.error(\"Unable to get user info\");\n      return redirectOnError(\"unable_to_get_user_info\");\n    }\n    if (!callbackURL) {\n      c.context.logger.error(\"No callback URL found\");\n      throw redirectOnError(\"no_callback_url\");\n    }\n    if (link) {\n      const trustedProviders = c.context.options.account?.accountLinking?.trustedProviders;\n      const isTrustedProvider = trustedProviders?.includes(\n        provider.id\n      );\n      if (!isTrustedProvider && !userInfo.emailVerified || c.context.options.account?.accountLinking?.enabled === false) {\n        c.context.logger.error(\"Unable to link account - untrusted provider\");\n        return redirectOnError(\"unable_to_link_account\");\n      }\n      if (userInfo.email !== link.email && c.context.options.account?.accountLinking?.allowDifferentEmails !== true) {\n        return redirectOnError(\"email_doesn't_match\");\n      }\n      const existingAccount = await c.context.internalAdapter.findAccount(\n        String(userInfo.id)\n      );\n      if (existingAccount) {\n        if (existingAccount.userId.toString() !== link.userId.toString()) {\n          return redirectOnError(\"account_already_linked_to_different_user\");\n        }\n        const updateData = Object.fromEntries(\n          Object.entries({\n            accessToken: await setTokenUtil(tokens.accessToken, c.context),\n            refreshToken: await setTokenUtil(tokens.refreshToken, c.context),\n            idToken: tokens.idToken,\n            accessTokenExpiresAt: tokens.accessTokenExpiresAt,\n            refreshTokenExpiresAt: tokens.refreshTokenExpiresAt,\n            scope: tokens.scopes?.join(\",\")\n          }).filter(([_, value]) => value !== void 0)\n        );\n        await c.context.internalAdapter.updateAccount(\n          existingAccount.id,\n          updateData\n        );\n      } else {\n        const newAccount = await c.context.internalAdapter.createAccount(\n          {\n            userId: link.userId,\n            providerId: provider.id,\n            accountId: String(userInfo.id),\n            ...tokens,\n            accessToken: await setTokenUtil(tokens.accessToken, c.context),\n            refreshToken: await setTokenUtil(tokens.refreshToken, c.context),\n            scope: tokens.scopes?.join(\",\")\n          },\n          c\n        );\n        if (!newAccount) {\n          return redirectOnError(\"unable_to_link_account\");\n        }\n      }\n      let toRedirectTo2;\n      try {\n        const url = callbackURL;\n        toRedirectTo2 = url.toString();\n      } catch {\n        toRedirectTo2 = callbackURL;\n      }\n      throw c.redirect(toRedirectTo2);\n    }\n    if (!userInfo.email) {\n      c.context.logger.error(\n        \"Provider did not return email. This could be due to misconfiguration in the provider settings.\"\n      );\n      return redirectOnError(\"email_not_found\");\n    }\n    const result = await handleOAuthUserInfo(c, {\n      userInfo: {\n        ...userInfo,\n        id: String(userInfo.id),\n        email: userInfo.email,\n        name: userInfo.name || userInfo.email\n      },\n      account: {\n        providerId: provider.id,\n        accountId: String(userInfo.id),\n        ...tokens,\n        scope: tokens.scopes?.join(\",\")\n      },\n      callbackURL,\n      disableSignUp: provider.disableImplicitSignUp && !requestSignUp || provider.options?.disableSignUp,\n      overrideUserInfo: provider.options?.overrideUserInfoOnSignIn\n    });\n    if (result.error) {\n      c.context.logger.error(result.error.split(\" \").join(\"_\"));\n      return redirectOnError(result.error.split(\" \").join(\"_\"));\n    }\n    const { session, user } = result.data;\n    await setSessionCookie(c, {\n      session,\n      user\n    });\n    let toRedirectTo;\n    try {\n      const url = result.isRegister ? newUserURL || callbackURL : callbackURL;\n      toRedirectTo = url.toString();\n    } catch {\n      toRedirectTo = result.isRegister ? newUserURL || callbackURL : callbackURL;\n    }\n    throw c.redirect(toRedirectTo);\n  }\n);\n\nconst signOut = createAuthEndpoint(\n  \"/sign-out\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Sign out the current user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    success: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const sessionCookieToken = await ctx.getSignedCookie(\n      ctx.context.authCookies.sessionToken.name,\n      ctx.context.secret\n    );\n    if (!sessionCookieToken) {\n      deleteSessionCookie(ctx);\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n      });\n    }\n    await ctx.context.internalAdapter.deleteSession(sessionCookieToken);\n    deleteSessionCookie(ctx);\n    return ctx.json({\n      success: true\n    });\n  }\n);\n\nfunction redirectError(ctx, callbackURL, query) {\n  const url = callbackURL ? new URL(callbackURL, ctx.baseURL) : new URL(`${ctx.baseURL}/error`);\n  if (query)\n    Object.entries(query).forEach(([k, v]) => url.searchParams.set(k, v));\n  return url.href;\n}\nfunction redirectCallback(ctx, callbackURL, query) {\n  const url = new URL(callbackURL, ctx.baseURL);\n  if (query)\n    Object.entries(query).forEach(([k, v]) => url.searchParams.set(k, v));\n  return url.href;\n}\nconst requestPasswordReset = createAuthEndpoint(\n  \"/request-password-reset\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The email address of the user to send a password reset email to.\n       */\n      email: z.email().meta({\n        description: \"The email address of the user to send a password reset email to\"\n      }),\n      /**\n       * The URL to redirect the user to reset their password.\n       * If the token isn't valid or expired, it'll be redirected with a query parameter `?\n       * error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?\n       * token=VALID_TOKEN\n       */\n      redirectTo: z.string().meta({\n        description: \"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Send a password reset email to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    },\n                    message: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.sendResetPassword) {\n      ctx.context.logger.error(\n        \"Reset password isn't enabled.Please pass an emailAndPassword.sendResetPassword function in your auth config!\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Reset password isn't enabled\"\n      });\n    }\n    const { email, redirectTo } = ctx.body;\n    const user = await ctx.context.internalAdapter.findUserByEmail(email, {\n      includeAccounts: true\n    });\n    if (!user) {\n      ctx.context.logger.error(\"Reset Password: User not found\", { email });\n      return ctx.json({\n        status: true,\n        message: \"If this email exists in our system, check your email for the reset link\"\n      });\n    }\n    const defaultExpiresIn = 60 * 60 * 1;\n    const expiresAt = getDate(\n      ctx.context.options.emailAndPassword.resetPasswordTokenExpiresIn || defaultExpiresIn,\n      \"sec\"\n    );\n    const verificationToken = generateId(24);\n    await ctx.context.internalAdapter.createVerificationValue(\n      {\n        value: user.user.id,\n        identifier: `reset-password:${verificationToken}`,\n        expiresAt\n      },\n      ctx\n    );\n    const callbackURL = redirectTo ? encodeURIComponent(redirectTo) : \"\";\n    const url = `${ctx.context.baseURL}/reset-password/${verificationToken}?callbackURL=${callbackURL}`;\n    await ctx.context.options.emailAndPassword.sendResetPassword(\n      {\n        user: user.user,\n        url,\n        token: verificationToken\n      },\n      ctx.request\n    );\n    return ctx.json({\n      status: true,\n      message: \"If this email exists in our system, check your email for the reset link\"\n    });\n  }\n);\nconst forgetPassword = createAuthEndpoint(\n  \"/forget-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The email address of the user to send a password reset email to.\n       */\n      email: z.string().email().meta({\n        description: \"The email address of the user to send a password reset email to\"\n      }),\n      /**\n       * The URL to redirect the user to reset their password.\n       * If the token isn't valid or expired, it'll be redirected with a query parameter `?\n       * error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?\n       * token=VALID_TOKEN\n       */\n      redirectTo: z.string().meta({\n        description: \"The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Send a password reset email to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    },\n                    message: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.sendResetPassword) {\n      ctx.context.logger.error(\n        \"Reset password isn't enabled.Please pass an emailAndPassword.sendResetPassword function in your auth config!\"\n      );\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Reset password isn't enabled\"\n      });\n    }\n    const { email, redirectTo } = ctx.body;\n    const user = await ctx.context.internalAdapter.findUserByEmail(email, {\n      includeAccounts: true\n    });\n    if (!user) {\n      ctx.context.logger.error(\"Reset Password: User not found\", { email });\n      return ctx.json({\n        status: true,\n        message: \"If this email exists in our system, check your email for the reset link\"\n      });\n    }\n    const defaultExpiresIn = 60 * 60 * 1;\n    const expiresAt = getDate(\n      ctx.context.options.emailAndPassword.resetPasswordTokenExpiresIn || defaultExpiresIn,\n      \"sec\"\n    );\n    const verificationToken = generateId(24);\n    await ctx.context.internalAdapter.createVerificationValue(\n      {\n        value: user.user.id,\n        identifier: `reset-password:${verificationToken}`,\n        expiresAt\n      },\n      ctx\n    );\n    const callbackURL = redirectTo ? encodeURIComponent(redirectTo) : \"\";\n    const url = `${ctx.context.baseURL}/reset-password/${verificationToken}?callbackURL=${callbackURL}`;\n    await ctx.context.options.emailAndPassword.sendResetPassword(\n      {\n        user: user.user,\n        url,\n        token: verificationToken\n      },\n      ctx.request\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst requestPasswordResetCallback = createAuthEndpoint(\n  \"/reset-password/:token\",\n  {\n    method: \"GET\",\n    query: z.object({\n      callbackURL: z.string().meta({\n        description: \"The URL to redirect the user to reset their password\"\n      })\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Redirects the user to the callback URL with the token\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { token } = ctx.params;\n    const { callbackURL } = ctx.query;\n    if (!token || !callbackURL) {\n      throw ctx.redirect(\n        redirectError(ctx.context, callbackURL, { error: \"INVALID_TOKEN\" })\n      );\n    }\n    const verification = await ctx.context.internalAdapter.findVerificationValue(\n      `reset-password:${token}`\n    );\n    if (!verification || verification.expiresAt < /* @__PURE__ */ new Date()) {\n      throw ctx.redirect(\n        redirectError(ctx.context, callbackURL, { error: \"INVALID_TOKEN\" })\n      );\n    }\n    throw ctx.redirect(redirectCallback(ctx.context, callbackURL, { token }));\n  }\n);\nconst forgetPasswordCallback = requestPasswordResetCallback;\nconst resetPassword = createAuthEndpoint(\n  \"/reset-password\",\n  {\n    method: \"POST\",\n    query: z.object({\n      token: z.string().optional()\n    }).optional(),\n    body: z.object({\n      newPassword: z.string().meta({\n        description: \"The new password to set\"\n      }),\n      token: z.string().meta({\n        description: \"The token to reset the password\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Reset the password for a user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const token = ctx.body.token || ctx.query?.token;\n    if (!token) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const { newPassword } = ctx.body;\n    const minLength = ctx.context.password?.config.minPasswordLength;\n    const maxLength = ctx.context.password?.config.maxPasswordLength;\n    if (newPassword.length < minLength) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    if (newPassword.length > maxLength) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const id = `reset-password:${token}`;\n    const verification = await ctx.context.internalAdapter.findVerificationValue(id);\n    if (!verification || verification.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const userId = verification.value;\n    const hashedPassword = await ctx.context.password.hash(newPassword);\n    const accounts = await ctx.context.internalAdapter.findAccounts(userId);\n    const account = accounts.find((ac) => ac.providerId === \"credential\");\n    if (!account) {\n      await ctx.context.internalAdapter.createAccount(\n        {\n          userId,\n          providerId: \"credential\",\n          password: hashedPassword,\n          accountId: userId\n        },\n        ctx\n      );\n    } else {\n      await ctx.context.internalAdapter.updatePassword(\n        userId,\n        hashedPassword,\n        ctx\n      );\n    }\n    await ctx.context.internalAdapter.deleteVerificationValue(verification.id);\n    if (ctx.context.options.emailAndPassword?.onPasswordReset) {\n      const user = await ctx.context.internalAdapter.findUserById(userId);\n      if (user) {\n        await ctx.context.options.emailAndPassword.onPasswordReset(\n          {\n            user\n          },\n          ctx.request\n        );\n      }\n    }\n    if (ctx.context.options.emailAndPassword?.revokeSessionsOnPasswordReset) {\n      await ctx.context.internalAdapter.deleteSessions(userId);\n    }\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nconst updateUser = () => createAuthEndpoint(\n  \"/update-user\",\n  {\n    method: \"POST\",\n    body: z.record(\n      z.string().meta({\n        description: \"Field name must be a string\"\n      }),\n      z.any()\n    ),\n    use: [sessionMiddleware],\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Update the current user\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  name: {\n                    type: \"string\",\n                    description: \"The name of the user\"\n                  },\n                  image: {\n                    type: \"string\",\n                    description: \"The image of the user\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the update was successful\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const body = ctx.body;\n    if (body.email) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.EMAIL_CAN_NOT_BE_UPDATED\n      });\n    }\n    const { name, image, ...rest } = body;\n    const session = ctx.context.session;\n    const additionalFields = parseUserInput(\n      ctx.context.options,\n      rest,\n      \"update\"\n    );\n    if (image === void 0 && name === void 0 && Object.keys(additionalFields).length === 0) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"No fields to update\"\n      });\n    }\n    const user = await ctx.context.internalAdapter.updateUser(\n      session.user.id,\n      {\n        name,\n        image,\n        ...additionalFields\n      },\n      ctx\n    );\n    await setSessionCookie(ctx, {\n      session: session.session,\n      user\n    });\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst changePassword = createAuthEndpoint(\n  \"/change-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The new password to set\n       */\n      newPassword: z.string().meta({\n        description: \"The new password to set\"\n      }),\n      /**\n       * The current password of the user\n       */\n      currentPassword: z.string().meta({\n        description: \"The current password is required\"\n      }),\n      /**\n       * revoke all sessions that are not the\n       * current one logged in by the user\n       */\n      revokeOtherSessions: z.boolean().meta({\n        description: \"Must be a boolean value\"\n      }).optional()\n    }),\n    use: [sensitiveSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Change the password of the user\",\n        responses: {\n          \"200\": {\n            description: \"Password successfully changed\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\",\n                      nullable: true,\n                      // Only present if revokeOtherSessions is true\n                      description: \"New session token if other sessions were revoked\"\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"The unique identifier of the user\"\n                        },\n                        email: {\n                          type: \"string\",\n                          format: \"email\",\n                          description: \"The email address of the user\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"The name of the user\"\n                        },\n                        image: {\n                          type: \"string\",\n                          format: \"uri\",\n                          nullable: true,\n                          description: \"The profile image URL of the user\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Whether the email has been verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was created\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was last updated\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"user\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { newPassword, currentPassword, revokeOtherSessions } = ctx.body;\n    const session = ctx.context.session;\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (newPassword.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (newPassword.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    const account = accounts.find(\n      (account2) => account2.providerId === \"credential\" && account2.password\n    );\n    if (!account || !account.password) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.CREDENTIAL_ACCOUNT_NOT_FOUND\n      });\n    }\n    const passwordHash = await ctx.context.password.hash(newPassword);\n    const verify = await ctx.context.password.verify({\n      hash: account.password,\n      password: currentPassword\n    });\n    if (!verify) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_PASSWORD\n      });\n    }\n    await ctx.context.internalAdapter.updateAccount(account.id, {\n      password: passwordHash\n    });\n    let token = null;\n    if (revokeOtherSessions) {\n      await ctx.context.internalAdapter.deleteSessions(session.user.id);\n      const newSession = await ctx.context.internalAdapter.createSession(\n        session.user.id,\n        ctx\n      );\n      if (!newSession) {\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: BASE_ERROR_CODES.FAILED_TO_GET_SESSION\n        });\n      }\n      await setSessionCookie(ctx, {\n        session: newSession,\n        user: session.user\n      });\n      token = newSession.token;\n    }\n    return ctx.json({\n      token,\n      user: {\n        id: session.user.id,\n        email: session.user.email,\n        name: session.user.name,\n        image: session.user.image,\n        emailVerified: session.user.emailVerified,\n        createdAt: session.user.createdAt,\n        updatedAt: session.user.updatedAt\n      }\n    });\n  }\n);\nconst setPassword = createAuthEndpoint(\n  \"/set-password\",\n  {\n    method: \"POST\",\n    body: z.object({\n      /**\n       * The new password to set\n       */\n      newPassword: z.string().meta({\n        description: \"The new password to set is required\"\n      })\n    }),\n    metadata: {\n      SERVER_ONLY: true\n    },\n    use: [sensitiveSessionMiddleware]\n  },\n  async (ctx) => {\n    const { newPassword } = ctx.body;\n    const session = ctx.context.session;\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (newPassword.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (newPassword.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    const account = accounts.find(\n      (account2) => account2.providerId === \"credential\" && account2.password\n    );\n    const passwordHash = await ctx.context.password.hash(newPassword);\n    if (!account) {\n      await ctx.context.internalAdapter.linkAccount(\n        {\n          userId: session.user.id,\n          providerId: \"credential\",\n          accountId: session.user.id,\n          password: passwordHash\n        },\n        ctx\n      );\n      return ctx.json({\n        status: true\n      });\n    }\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"user already has a password\"\n    });\n  }\n);\nconst deleteUser = createAuthEndpoint(\n  \"/delete-user\",\n  {\n    method: \"POST\",\n    use: [sensitiveSessionMiddleware],\n    body: z.object({\n      /**\n       * The callback URL to redirect to after the user is deleted\n       * this is only used on delete user callback\n       */\n      callbackURL: z.string().meta({\n        description: \"The callback URL to redirect to after the user is deleted\"\n      }).optional(),\n      /**\n       * The password of the user. If the password isn't provided, session freshness\n       * will be checked.\n       */\n      password: z.string().meta({\n        description: \"The password of the user is required to delete the user\"\n      }).optional(),\n      /**\n       * The token to delete the user. If the token is provided, the user will be deleted\n       */\n      token: z.string().meta({\n        description: \"The token to delete the user is required\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Delete the user\",\n        responses: {\n          \"200\": {\n            description: \"User deletion processed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    success: {\n                      type: \"boolean\",\n                      description: \"Indicates if the operation was successful\"\n                    },\n                    message: {\n                      type: \"string\",\n                      enum: [\"User deleted\", \"Verification email sent\"],\n                      description: \"Status message of the deletion process\"\n                    }\n                  },\n                  required: [\"success\", \"message\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.deleteUser?.enabled) {\n      ctx.context.logger.error(\n        \"Delete user is disabled. Enable it in the options\"\n      );\n      throw new APIError(\"NOT_FOUND\");\n    }\n    const session = ctx.context.session;\n    if (ctx.body.password) {\n      const accounts = await ctx.context.internalAdapter.findAccounts(\n        session.user.id\n      );\n      const account = accounts.find(\n        (account2) => account2.providerId === \"credential\" && account2.password\n      );\n      if (!account || !account.password) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.CREDENTIAL_ACCOUNT_NOT_FOUND\n        });\n      }\n      const verify = await ctx.context.password.verify({\n        hash: account.password,\n        password: ctx.body.password\n      });\n      if (!verify) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.INVALID_PASSWORD\n        });\n      }\n    }\n    if (ctx.body.token) {\n      await deleteUserCallback({\n        ...ctx,\n        query: {\n          token: ctx.body.token\n        }\n      });\n      return ctx.json({\n        success: true,\n        message: \"User deleted\"\n      });\n    }\n    if (ctx.context.options.user.deleteUser?.sendDeleteAccountVerification) {\n      const token = generateRandomString(32, \"0-9\", \"a-z\");\n      await ctx.context.internalAdapter.createVerificationValue(\n        {\n          value: session.user.id,\n          identifier: `delete-account-${token}`,\n          expiresAt: new Date(\n            Date.now() + (ctx.context.options.user.deleteUser?.deleteTokenExpiresIn || 60 * 60 * 24) * 1e3\n          )\n        },\n        ctx\n      );\n      const url = `${ctx.context.baseURL}/delete-user/callback?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n      await ctx.context.options.user.deleteUser.sendDeleteAccountVerification(\n        {\n          user: session.user,\n          url,\n          token\n        },\n        ctx.request\n      );\n      return ctx.json({\n        success: true,\n        message: \"Verification email sent\"\n      });\n    }\n    if (!ctx.body.password && ctx.context.sessionConfig.freshAge !== 0) {\n      const currentAge = new Date(session.session.createdAt).getTime();\n      const freshAge = ctx.context.sessionConfig.freshAge * 1e3;\n      const now = Date.now();\n      if (now - currentAge > freshAge * 1e3) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.SESSION_EXPIRED\n        });\n      }\n    }\n    const beforeDelete = ctx.context.options.user.deleteUser?.beforeDelete;\n    if (beforeDelete) {\n      await beforeDelete(session.user, ctx.request);\n    }\n    await ctx.context.internalAdapter.deleteUser(session.user.id);\n    await ctx.context.internalAdapter.deleteSessions(session.user.id);\n    await ctx.context.internalAdapter.deleteAccounts(session.user.id);\n    deleteSessionCookie(ctx);\n    const afterDelete = ctx.context.options.user.deleteUser?.afterDelete;\n    if (afterDelete) {\n      await afterDelete(session.user, ctx.request);\n    }\n    return ctx.json({\n      success: true,\n      message: \"User deleted\"\n    });\n  }\n);\nconst deleteUserCallback = createAuthEndpoint(\n  \"/delete-user/callback\",\n  {\n    method: \"GET\",\n    query: z.object({\n      token: z.string().meta({\n        description: \"The token to verify the deletion request\"\n      }),\n      callbackURL: z.string().meta({\n        description: \"The URL to redirect to after deletion\"\n      }).optional()\n    }),\n    use: [originCheck((ctx) => ctx.query.callbackURL)],\n    metadata: {\n      openapi: {\n        description: \"Callback to complete user deletion with verification token\",\n        responses: {\n          \"200\": {\n            description: \"User successfully deleted\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    success: {\n                      type: \"boolean\",\n                      description: \"Indicates if the deletion was successful\"\n                    },\n                    message: {\n                      type: \"string\",\n                      enum: [\"User deleted\"],\n                      description: \"Confirmation message\"\n                    }\n                  },\n                  required: [\"success\", \"message\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.deleteUser?.enabled) {\n      ctx.context.logger.error(\n        \"Delete user is disabled. Enable it in the options\"\n      );\n      throw new APIError(\"NOT_FOUND\");\n    }\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.FAILED_TO_GET_USER_INFO\n      });\n    }\n    const token = await ctx.context.internalAdapter.findVerificationValue(\n      `delete-account-${ctx.query.token}`\n    );\n    if (!token || token.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    if (token.value !== session.user.id) {\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.INVALID_TOKEN\n      });\n    }\n    const beforeDelete = ctx.context.options.user.deleteUser?.beforeDelete;\n    if (beforeDelete) {\n      await beforeDelete(session.user, ctx.request);\n    }\n    await ctx.context.internalAdapter.deleteUser(session.user.id);\n    await ctx.context.internalAdapter.deleteSessions(session.user.id);\n    await ctx.context.internalAdapter.deleteAccounts(session.user.id);\n    await ctx.context.internalAdapter.deleteVerificationValue(token.id);\n    deleteSessionCookie(ctx);\n    const afterDelete = ctx.context.options.user.deleteUser?.afterDelete;\n    if (afterDelete) {\n      await afterDelete(session.user, ctx.request);\n    }\n    if (ctx.query.callbackURL) {\n      throw ctx.redirect(ctx.query.callbackURL || \"/\");\n    }\n    return ctx.json({\n      success: true,\n      message: \"User deleted\"\n    });\n  }\n);\nconst changeEmail = createAuthEndpoint(\n  \"/change-email\",\n  {\n    method: \"POST\",\n    body: z.object({\n      newEmail: z.email().meta({\n        description: \"The new email address to set must be a valid email address\"\n      }),\n      callbackURL: z.string().meta({\n        description: \"The URL to redirect to after email verification\"\n      }).optional()\n    }),\n    use: [sensitiveSessionMiddleware],\n    metadata: {\n      openapi: {\n        responses: {\n          \"200\": {\n            description: \"Email change request processed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\",\n                      description: \"Indicates if the request was successful\"\n                    },\n                    message: {\n                      type: \"string\",\n                      enum: [\"Email updated\", \"Verification email sent\"],\n                      description: \"Status message of the email change process\",\n                      nullable: true\n                    }\n                  },\n                  required: [\"status\"]\n                }\n              }\n            }\n          },\n          \"422\": {\n            description: \"Unprocessable Entity. Email already exists\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    message: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.user?.changeEmail?.enabled) {\n      ctx.context.logger.error(\"Change email is disabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Change email is disabled\"\n      });\n    }\n    const newEmail = ctx.body.newEmail.toLowerCase();\n    if (newEmail === ctx.context.session.user.email) {\n      ctx.context.logger.error(\"Email is the same\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email is the same\"\n      });\n    }\n    const existingUser = await ctx.context.internalAdapter.findUserByEmail(newEmail);\n    if (existingUser) {\n      ctx.context.logger.error(\"Email already exists\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Couldn't update your email\"\n      });\n    }\n    if (ctx.context.session.user.emailVerified !== true) {\n      const existing = await ctx.context.internalAdapter.findUserByEmail(newEmail);\n      if (existing) {\n        throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n          message: BASE_ERROR_CODES.USER_ALREADY_EXISTS_USE_ANOTHER_EMAIL\n        });\n      }\n      await ctx.context.internalAdapter.updateUserByEmail(\n        ctx.context.session.user.email,\n        {\n          email: newEmail\n        },\n        ctx\n      );\n      await setSessionCookie(ctx, {\n        session: ctx.context.session.session,\n        user: {\n          ...ctx.context.session.user,\n          email: newEmail\n        }\n      });\n      if (ctx.context.options.emailVerification?.sendVerificationEmail) {\n        const token2 = await createEmailVerificationToken(\n          ctx.context.secret,\n          newEmail,\n          void 0,\n          ctx.context.options.emailVerification?.expiresIn\n        );\n        const url2 = `${ctx.context.baseURL}/verify-email?token=${token2}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n        await ctx.context.options.emailVerification.sendVerificationEmail(\n          {\n            user: {\n              ...ctx.context.session.user,\n              email: newEmail\n            },\n            url: url2,\n            token: token2\n          },\n          ctx.request\n        );\n      }\n      return ctx.json({\n        status: true\n      });\n    }\n    if (!ctx.context.options.user.changeEmail.sendChangeEmailVerification) {\n      ctx.context.logger.error(\"Verification email isn't enabled.\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Verification email isn't enabled\"\n      });\n    }\n    const token = await createEmailVerificationToken(\n      ctx.context.secret,\n      ctx.context.session.user.email,\n      newEmail,\n      ctx.context.options.emailVerification?.expiresIn\n    );\n    const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${ctx.body.callbackURL || \"/\"}`;\n    await ctx.context.options.user.changeEmail.sendChangeEmailVerification(\n      {\n        user: ctx.context.session.user,\n        newEmail,\n        url,\n        token\n      },\n      ctx.request\n    );\n    return ctx.json({\n      status: true\n    });\n  }\n);\n\nfunction sanitize(input) {\n  return input.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n}\nconst html = (errorCode = \"Unknown\") => `<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Authentication Error</title>\n    <style>\n        :root {\n            --bg-color: #f8f9fa;\n            --text-color: #212529;\n            --accent-color: #000000;\n            --error-color: #dc3545;\n            --border-color: #e9ecef;\n        }\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\n            background-color: var(--bg-color);\n            color: var(--text-color);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            line-height: 1.5;\n        }\n        .error-container {\n            background-color: #ffffff;\n            border-radius: 12px;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n            padding: 2.5rem;\n            text-align: center;\n            max-width: 90%;\n            width: 400px;\n        }\n        h1 {\n            color: var(--error-color);\n            font-size: 1.75rem;\n            margin-bottom: 1rem;\n            font-weight: 600;\n        }\n        p {\n            margin-bottom: 1.5rem;\n            color: #495057;\n        }\n        .btn {\n            background-color: var(--accent-color);\n            color: #ffffff;\n            text-decoration: none;\n            padding: 0.75rem 1.5rem;\n            border-radius: 6px;\n            transition: all 0.3s ease;\n            display: inline-block;\n            font-weight: 500;\n            border: 2px solid var(--accent-color);\n        }\n        .btn:hover {\n            background-color: #131721;\n        }\n        .error-code {\n            font-size: 0.875rem;\n            color: #6c757d;\n            margin-top: 1.5rem;\n            padding-top: 1.5rem;\n            border-top: 1px solid var(--border-color);\n        }\n        .icon {\n            font-size: 3rem;\n            margin-bottom: 1rem;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"error-container\">\n        <div class=\"icon\">\\u26A0\\uFE0F</div>\n        <h1>Better Auth Error</h1>\n        <p>We encountered an issue while processing your request. Please try again or contact the application owner if the problem persists.</p>\n        <a href=\"/\" id=\"returnLink\" class=\"btn\">Return to Application</a>\n        <div class=\"error-code\">Error Code: <span id=\"errorCode\">${sanitize(\n  errorCode\n)}</span></div>\n    </div>\n</body>\n</html>`;\nconst error = createAuthEndpoint(\n  \"/error\",\n  {\n    method: \"GET\",\n    metadata: {\n      ...HIDE_METADATA,\n      openapi: {\n        description: \"Displays an error page\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"text/html\": {\n                schema: {\n                  type: \"string\",\n                  description: \"The HTML content of the error page\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const query = new URL(c.request?.url || \"\").searchParams.get(\"error\") || \"Unknown\";\n    return new Response(html(query), {\n      headers: {\n        \"Content-Type\": \"text/html\"\n      }\n    });\n  }\n);\n\nconst ok = createAuthEndpoint(\n  \"/ok\",\n  {\n    method: \"GET\",\n    metadata: {\n      ...HIDE_METADATA,\n      openapi: {\n        description: \"Check if the API is working\",\n        responses: {\n          \"200\": {\n            description: \"API is working\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    ok: {\n                      type: \"boolean\",\n                      description: \"Indicates if the API is working\"\n                    }\n                  },\n                  required: [\"ok\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    return ctx.json({\n      ok: true\n    });\n  }\n);\n\nconst listUserAccounts = createAuthEndpoint(\n  \"/list-accounts\",\n  {\n    method: \"GET\",\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"List all accounts linked to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\"\n                      },\n                      providerId: {\n                        type: \"string\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\"\n                      },\n                      accountId: {\n                        type: \"string\"\n                      },\n                      scopes: {\n                        type: \"array\",\n                        items: {\n                          type: \"string\"\n                        }\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"providerId\",\n                      \"createdAt\",\n                      \"updatedAt\",\n                      \"accountId\",\n                      \"scopes\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const session = c.context.session;\n    const accounts = await c.context.internalAdapter.findAccounts(\n      session.user.id\n    );\n    return c.json(\n      accounts.map((a) => ({\n        id: a.id,\n        providerId: a.providerId,\n        createdAt: a.createdAt,\n        updatedAt: a.updatedAt,\n        accountId: a.accountId,\n        scopes: a.scope?.split(\",\") || []\n      }))\n    );\n  }\n);\nconst linkSocialAccount = createAuthEndpoint(\n  \"/link-social\",\n  {\n    method: \"POST\",\n    requireHeaders: true,\n    body: z.object({\n      /**\n       * Callback URL to redirect to after the user has signed in.\n       */\n      callbackURL: z.string().meta({\n        description: \"The URL to redirect to after the user has signed in\"\n      }).optional(),\n      /**\n       * OAuth2 provider to use\n       */\n      provider: SocialProviderListEnum,\n      /**\n       * ID Token for direct authentication without redirect\n       */\n      idToken: z.object({\n        token: z.string(),\n        nonce: z.string().optional(),\n        accessToken: z.string().optional(),\n        refreshToken: z.string().optional(),\n        scopes: z.array(z.string()).optional()\n      }).optional(),\n      /**\n       * Whether to allow sign up for new users\n       */\n      requestSignUp: z.boolean().optional(),\n      /**\n       * Additional scopes to request when linking the account.\n       * This is useful for requesting additional permissions when\n       * linking a social account compared to the initial authentication.\n       */\n      scopes: z.array(z.string()).meta({\n        description: \"Additional scopes to request from the provider\"\n      }).optional(),\n      /**\n       * The URL to redirect to if there is an error during the link process.\n       */\n      errorCallbackURL: z.string().meta({\n        description: \"The URL to redirect to if there is an error during the link process\"\n      }).optional(),\n      /**\n       * Disable automatic redirection to the provider\n       *\n       * This is useful if you want to handle the redirection\n       * yourself like in a popup or a different tab.\n       */\n      disableRedirect: z.boolean().meta({\n        description: \"Disable automatic redirection to the provider. Useful for handling the redirection yourself\"\n      }).optional()\n    }),\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Link a social account to the user\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    url: {\n                      type: \"string\",\n                      description: \"The authorization URL to redirect the user to\"\n                    },\n                    redirect: {\n                      type: \"boolean\",\n                      description: \"Indicates if the user should be redirected to the authorization URL\"\n                    },\n                    status: {\n                      type: \"boolean\"\n                    }\n                  },\n                  required: [\"redirect\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (c) => {\n    const session = c.context.session;\n    const provider = c.context.socialProviders.find(\n      (p) => p.id === c.body.provider\n    );\n    if (!provider) {\n      c.context.logger.error(\n        \"Provider not found. Make sure to add the provider in your auth config\",\n        {\n          provider: c.body.provider\n        }\n      );\n      throw new APIError(\"NOT_FOUND\", {\n        message: BASE_ERROR_CODES.PROVIDER_NOT_FOUND\n      });\n    }\n    if (c.body.idToken) {\n      if (!provider.verifyIdToken) {\n        c.context.logger.error(\n          \"Provider does not support id token verification\",\n          {\n            provider: c.body.provider\n          }\n        );\n        throw new APIError(\"NOT_FOUND\", {\n          message: BASE_ERROR_CODES.ID_TOKEN_NOT_SUPPORTED\n        });\n      }\n      const { token, nonce } = c.body.idToken;\n      const valid = await provider.verifyIdToken(token, nonce);\n      if (!valid) {\n        c.context.logger.error(\"Invalid id token\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.INVALID_TOKEN\n        });\n      }\n      const linkingUserInfo = await provider.getUserInfo({\n        idToken: token,\n        accessToken: c.body.idToken.accessToken,\n        refreshToken: c.body.idToken.refreshToken\n      });\n      if (!linkingUserInfo || !linkingUserInfo?.user) {\n        c.context.logger.error(\"Failed to get user info\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.FAILED_TO_GET_USER_INFO\n        });\n      }\n      const linkingUserId = String(linkingUserInfo.user.id);\n      if (!linkingUserInfo.user.email) {\n        c.context.logger.error(\"User email not found\", {\n          provider: c.body.provider\n        });\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: BASE_ERROR_CODES.USER_EMAIL_NOT_FOUND\n        });\n      }\n      const existingAccounts = await c.context.internalAdapter.findAccounts(\n        session.user.id\n      );\n      const hasBeenLinked = existingAccounts.find(\n        (a) => a.providerId === provider.id && a.accountId === linkingUserId\n      );\n      if (hasBeenLinked) {\n        return c.json({\n          url: \"\",\n          // this is for type inference\n          status: true,\n          redirect: false\n        });\n      }\n      const trustedProviders = c.context.options.account?.accountLinking?.trustedProviders;\n      const isTrustedProvider = trustedProviders?.includes(provider.id);\n      if (!isTrustedProvider && !linkingUserInfo.user.emailVerified || c.context.options.account?.accountLinking?.enabled === false) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: \"Account not linked - linking not allowed\"\n        });\n      }\n      if (linkingUserInfo.user.email !== session.user.email && c.context.options.account?.accountLinking?.allowDifferentEmails !== true) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: \"Account not linked - different emails not allowed\"\n        });\n      }\n      try {\n        await c.context.internalAdapter.createAccount(\n          {\n            userId: session.user.id,\n            providerId: provider.id,\n            accountId: linkingUserId,\n            accessToken: c.body.idToken.accessToken,\n            idToken: token,\n            refreshToken: c.body.idToken.refreshToken,\n            scope: c.body.idToken.scopes?.join(\",\")\n          },\n          c\n        );\n      } catch (e) {\n        throw new APIError(\"EXPECTATION_FAILED\", {\n          message: \"Account not linked - unable to create account\"\n        });\n      }\n      if (c.context.options.account?.accountLinking?.updateUserInfoOnLink === true) {\n        try {\n          await c.context.internalAdapter.updateUser(session.user.id, {\n            name: linkingUserInfo.user?.name,\n            image: linkingUserInfo.user?.image\n          });\n        } catch (e) {\n          console.warn(\"Could not update user - \" + e.toString());\n        }\n      }\n      return c.json({\n        url: \"\",\n        // this is for type inference\n        status: true,\n        redirect: false\n      });\n    }\n    const state = await generateState(c, {\n      userId: session.user.id,\n      email: session.user.email\n    });\n    const url = await provider.createAuthorizationURL({\n      state: state.state,\n      codeVerifier: state.codeVerifier,\n      redirectURI: `${c.context.baseURL}/callback/${provider.id}`,\n      scopes: c.body.scopes\n    });\n    return c.json({\n      url: url.toString(),\n      redirect: !c.body.disableRedirect\n    });\n  }\n);\nconst unlinkAccount = createAuthEndpoint(\n  \"/unlink-account\",\n  {\n    method: \"POST\",\n    body: z.object({\n      providerId: z.string(),\n      accountId: z.string().optional()\n    }),\n    use: [freshSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Unlink an account\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    status: {\n                      type: \"boolean\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { providerId, accountId } = ctx.body;\n    const accounts = await ctx.context.internalAdapter.findAccounts(\n      ctx.context.session.user.id\n    );\n    if (accounts.length === 1 && !ctx.context.options.account?.accountLinking?.allowUnlinkingAll) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_UNLINK_LAST_ACCOUNT\n      });\n    }\n    const accountExist = accounts.find(\n      (account) => accountId ? account.accountId === accountId && account.providerId === providerId : account.providerId === providerId\n    );\n    if (!accountExist) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.ACCOUNT_NOT_FOUND\n      });\n    }\n    await ctx.context.internalAdapter.deleteAccount(accountExist.id);\n    return ctx.json({\n      status: true\n    });\n  }\n);\nconst getAccessToken = createAuthEndpoint(\n  \"/get-access-token\",\n  {\n    method: \"POST\",\n    body: z.object({\n      providerId: z.string().meta({\n        description: \"The provider ID for the OAuth provider\"\n      }),\n      accountId: z.string().meta({\n        description: \"The account ID associated with the refresh token\"\n      }).optional(),\n      userId: z.string().meta({\n        description: \"The user ID associated with the account\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Get a valid access token, doing a refresh if needed\",\n        responses: {\n          200: {\n            description: \"A Valid access token\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    tokenType: {\n                      type: \"string\"\n                    },\n                    idToken: {\n                      type: \"string\"\n                    },\n                    accessToken: {\n                      type: \"string\"\n                    },\n                    refreshToken: {\n                      type: \"string\"\n                    },\n                    accessTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    },\n                    refreshTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          400: {\n            description: \"Invalid refresh token or provider configuration\"\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { providerId, accountId, userId } = ctx.body;\n    const req = ctx.request;\n    const session = await getSessionFromCtx(ctx);\n    if (req && !session) {\n      throw ctx.error(\"UNAUTHORIZED\");\n    }\n    let resolvedUserId = session?.user?.id || userId;\n    if (!resolvedUserId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Either userId or session is required`\n      });\n    }\n    if (!ctx.context.socialProviders.find((p) => p.id === providerId)) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} is not supported.`\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(resolvedUserId);\n    const account = accounts.find(\n      (acc) => accountId ? acc.id === accountId && acc.providerId === providerId : acc.providerId === providerId\n    );\n    if (!account) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Account not found\"\n      });\n    }\n    const provider = ctx.context.socialProviders.find(\n      (p) => p.id === providerId\n    );\n    if (!provider) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} not found.`\n      });\n    }\n    try {\n      let newTokens = null;\n      const accessTokenExpired = account.accessTokenExpiresAt && new Date(account.accessTokenExpiresAt).getTime() - Date.now() < 5e3;\n      if (account.refreshToken && accessTokenExpired && provider.refreshAccessToken) {\n        newTokens = await provider.refreshAccessToken(\n          account.refreshToken\n        );\n        await ctx.context.internalAdapter.updateAccount(account.id, {\n          accessToken: await setTokenUtil(newTokens.accessToken, ctx.context),\n          accessTokenExpiresAt: newTokens.accessTokenExpiresAt,\n          refreshToken: await setTokenUtil(newTokens.refreshToken, ctx.context),\n          refreshTokenExpiresAt: newTokens.refreshTokenExpiresAt\n        });\n      }\n      const tokens = {\n        accessToken: await decryptOAuthToken(\n          newTokens?.accessToken ?? account.accessToken ?? \"\",\n          ctx.context\n        ),\n        accessTokenExpiresAt: newTokens?.accessTokenExpiresAt ?? account.accessTokenExpiresAt ?? void 0,\n        scopes: account.scope?.split(\",\") ?? [],\n        idToken: newTokens?.idToken ?? account.idToken ?? void 0\n      };\n      return ctx.json(tokens);\n    } catch (error) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Failed to get a valid access token\",\n        cause: error\n      });\n    }\n  }\n);\nconst refreshToken = createAuthEndpoint(\n  \"/refresh-token\",\n  {\n    method: \"POST\",\n    body: z.object({\n      providerId: z.string().meta({\n        description: \"The provider ID for the OAuth provider\"\n      }),\n      accountId: z.string().meta({\n        description: \"The account ID associated with the refresh token\"\n      }).optional(),\n      userId: z.string().meta({\n        description: \"The user ID associated with the account\"\n      }).optional()\n    }),\n    metadata: {\n      openapi: {\n        description: \"Refresh the access token using a refresh token\",\n        responses: {\n          200: {\n            description: \"Access token refreshed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    tokenType: {\n                      type: \"string\"\n                    },\n                    idToken: {\n                      type: \"string\"\n                    },\n                    accessToken: {\n                      type: \"string\"\n                    },\n                    refreshToken: {\n                      type: \"string\"\n                    },\n                    accessTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    },\n                    refreshTokenExpiresAt: {\n                      type: \"string\",\n                      format: \"date-time\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          400: {\n            description: \"Invalid refresh token or provider configuration\"\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const { providerId, accountId, userId } = ctx.body;\n    const req = ctx.request;\n    const session = await getSessionFromCtx(ctx);\n    if (req && !session) {\n      throw ctx.error(\"UNAUTHORIZED\");\n    }\n    let resolvedUserId = session?.user?.id || userId;\n    if (!resolvedUserId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Either userId or session is required`\n      });\n    }\n    const accounts = await ctx.context.internalAdapter.findAccounts(resolvedUserId);\n    const account = accounts.find(\n      (acc) => accountId ? acc.id === accountId && acc.providerId === providerId : acc.providerId === providerId\n    );\n    if (!account) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Account not found\"\n      });\n    }\n    const provider = ctx.context.socialProviders.find(\n      (p) => p.id === providerId\n    );\n    if (!provider) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} not found.`\n      });\n    }\n    if (!provider.refreshAccessToken) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: `Provider ${providerId} does not support token refreshing.`\n      });\n    }\n    try {\n      const tokens = await provider.refreshAccessToken(\n        account.refreshToken\n      );\n      await ctx.context.internalAdapter.updateAccount(account.id, {\n        accessToken: await setTokenUtil(tokens.accessToken, ctx.context),\n        refreshToken: await setTokenUtil(tokens.refreshToken, ctx.context),\n        accessTokenExpiresAt: tokens.accessTokenExpiresAt,\n        refreshTokenExpiresAt: tokens.refreshTokenExpiresAt\n      });\n      return ctx.json(tokens);\n    } catch (error) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Failed to refresh access token\",\n        cause: error\n      });\n    }\n  }\n);\nconst accountInfo = createAuthEndpoint(\n  \"/account-info\",\n  {\n    method: \"POST\",\n    use: [sessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Get the account info provided by the provider\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\"\n                        },\n                        name: {\n                          type: \"string\"\n                        },\n                        email: {\n                          type: \"string\"\n                        },\n                        image: {\n                          type: \"string\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\"\n                        }\n                      },\n                      required: [\"id\", \"emailVerified\"]\n                    },\n                    data: {\n                      type: \"object\",\n                      properties: {},\n                      additionalProperties: true\n                    }\n                  },\n                  required: [\"user\", \"data\"],\n                  additionalProperties: false\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    body: z.object({\n      accountId: z.string().meta({\n        description: \"The provider given account id for which to get the account info\"\n      })\n    })\n  },\n  async (ctx) => {\n    const account = await ctx.context.internalAdapter.findAccount(\n      ctx.body.accountId\n    );\n    if (!account || account.userId !== ctx.context.session.user.id) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Account not found\"\n      });\n    }\n    const provider = ctx.context.socialProviders.find(\n      (p) => p.id === account.providerId\n    );\n    if (!provider) {\n      throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n        message: `Provider account provider is ${account.providerId} but it is not configured`\n      });\n    }\n    const tokens = await getAccessToken({\n      ...ctx,\n      body: {\n        accountId: account.id,\n        providerId: account.providerId\n      },\n      returnHeaders: false\n    });\n    if (!tokens.accessToken) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Access token not found\"\n      });\n    }\n    const info = await provider.getUserInfo({\n      ...tokens,\n      accessToken: tokens.accessToken\n    });\n    return ctx.json(info);\n  }\n);\n\nconst defuReplaceArrays = createDefu((obj, key, value) => {\n  if (Array.isArray(obj[key]) && Array.isArray(value)) {\n    obj[key] = value;\n    return true;\n  }\n});\nfunction toAuthEndpoints(endpoints, ctx) {\n  const api = {};\n  for (const [key, endpoint] of Object.entries(endpoints)) {\n    api[key] = async (context) => {\n      const authContext = await ctx;\n      let internalContext = {\n        ...context,\n        context: {\n          ...authContext,\n          returned: void 0,\n          responseHeaders: void 0,\n          session: null\n        },\n        path: endpoint.path,\n        headers: context?.headers ? new Headers(context?.headers) : void 0\n      };\n      const { beforeHooks, afterHooks } = getHooks(authContext);\n      const before = await runBeforeHooks(internalContext, beforeHooks);\n      if (\"context\" in before && before.context && typeof before.context === \"object\") {\n        const { headers, ...rest } = before.context;\n        if (headers) {\n          headers.forEach((value, key2) => {\n            internalContext.headers.set(key2, value);\n          });\n        }\n        internalContext = defuReplaceArrays(rest, internalContext);\n      } else if (before) {\n        return context?.asResponse ? toResponse(before, {\n          headers: context?.headers\n        }) : context?.returnHeaders ? {\n          headers: context?.headers,\n          response: before\n        } : before;\n      }\n      internalContext.asResponse = false;\n      internalContext.returnHeaders = true;\n      const result = await endpoint(internalContext).catch((e) => {\n        if (e instanceof APIError) {\n          return {\n            response: e,\n            headers: e.headers ? new Headers(e.headers) : null\n          };\n        }\n        throw e;\n      });\n      if (result && result instanceof Response) {\n        return result;\n      }\n      internalContext.context.returned = result.response;\n      internalContext.context.responseHeaders = result.headers;\n      const after = await runAfterHooks(internalContext, afterHooks);\n      if (after.response) {\n        result.response = after.response;\n      }\n      if (result.response instanceof APIError && shouldPublishLog(authContext.logger.level, \"debug\")) {\n        result.response.stack = result.response.errorStack;\n      }\n      if (result.response instanceof APIError && !context?.asResponse) {\n        throw result.response;\n      }\n      const response = context?.asResponse ? toResponse(result.response, {\n        headers: result.headers\n      }) : context?.returnHeaders ? {\n        headers: result.headers,\n        response: result.response\n      } : result.response;\n      return response;\n    };\n    api[key].path = endpoint.path;\n    api[key].options = endpoint.options;\n  }\n  return api;\n}\nasync function runBeforeHooks(context, hooks) {\n  let modifiedContext = {};\n  for (const hook of hooks) {\n    if (hook.matcher(context)) {\n      const result = await hook.handler({\n        ...context,\n        returnHeaders: false\n      }).catch((e) => {\n        if (e instanceof APIError && shouldPublishLog(context.context.logger.level, \"debug\")) {\n          e.stack = e.errorStack;\n        }\n        throw e;\n      });\n      if (result && typeof result === \"object\") {\n        if (\"context\" in result && typeof result.context === \"object\") {\n          const { headers, ...rest } = result.context;\n          if (headers instanceof Headers) {\n            if (modifiedContext.headers) {\n              headers.forEach((value, key) => {\n                modifiedContext.headers?.set(key, value);\n              });\n            } else {\n              modifiedContext.headers = headers;\n            }\n          }\n          modifiedContext = defuReplaceArrays(rest, modifiedContext);\n          continue;\n        }\n        return result;\n      }\n    }\n  }\n  return { context: modifiedContext };\n}\nasync function runAfterHooks(context, hooks) {\n  for (const hook of hooks) {\n    if (hook.matcher(context)) {\n      const result = await hook.handler(context).catch((e) => {\n        if (e instanceof APIError) {\n          if (shouldPublishLog(context.context.logger.level, \"debug\")) {\n            e.stack = e.errorStack;\n          }\n          return {\n            response: e,\n            headers: e.headers ? new Headers(e.headers) : null\n          };\n        }\n        throw e;\n      });\n      if (result.headers) {\n        result.headers.forEach((value, key) => {\n          if (!context.context.responseHeaders) {\n            context.context.responseHeaders = new Headers({\n              [key]: value\n            });\n          } else {\n            if (key.toLowerCase() === \"set-cookie\") {\n              context.context.responseHeaders.append(key, value);\n            } else {\n              context.context.responseHeaders.set(key, value);\n            }\n          }\n        });\n      }\n      if (result.response) {\n        context.context.returned = result.response;\n      }\n    }\n  }\n  return {\n    response: context.context.returned,\n    headers: context.context.responseHeaders\n  };\n}\nfunction getHooks(authContext) {\n  const plugins = authContext.options.plugins || [];\n  const beforeHooks = [];\n  const afterHooks = [];\n  if (authContext.options.hooks?.before) {\n    beforeHooks.push({\n      matcher: () => true,\n      handler: authContext.options.hooks.before\n    });\n  }\n  if (authContext.options.hooks?.after) {\n    afterHooks.push({\n      matcher: () => true,\n      handler: authContext.options.hooks.after\n    });\n  }\n  const pluginBeforeHooks = plugins.map((plugin) => {\n    if (plugin.hooks?.before) {\n      return plugin.hooks.before;\n    }\n  }).filter((plugin) => plugin !== void 0).flat();\n  const pluginAfterHooks = plugins.map((plugin) => {\n    if (plugin.hooks?.after) {\n      return plugin.hooks.after;\n    }\n  }).filter((plugin) => plugin !== void 0).flat();\n  pluginBeforeHooks.length && beforeHooks.push(...pluginBeforeHooks);\n  pluginAfterHooks.length && afterHooks.push(...pluginAfterHooks);\n  return {\n    beforeHooks,\n    afterHooks\n  };\n}\n\nexport { changeEmail as A, sendVerificationEmail as B, verifyEmail as C, resetPassword as D, forgetPassword as E, signInEmail as F, signOut as G, HIDE_METADATA as H, callbackOAuth as I, signInSocial as J, sendVerificationEmailFn as K, isSimpleRequest as L, originCheckMiddleware as a, ok as b, createEmailVerificationToken as c, decryptOAuthToken as d, error as e, accountInfo as f, generateState as g, handleOAuthUserInfo as h, getAccessToken as i, unlinkAccount as j, deleteUserCallback as k, listUserAccounts as l, linkSocialAccount as m, requestPasswordResetCallback as n, originCheck as o, parseState as p, requestPasswordReset as q, refreshToken as r, setTokenUtil as s, toAuthEndpoints as t, updateUser as u, forgetPasswordCallback as v, wildcardMatch as w, deleteUser as x, setPassword as y, changePassword as z };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,iBAAiB,IAAI;IAC5B,IAAI,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,OAAO,SAAS,MAAM;QACjP,OAAO,CAAC,EAAE,EAAE,MAAM;IACpB,OAAO;QACL,OAAO;IACT;AACF;AACA,SAAS,mBAAmB,GAAG;IAC7B,IAAI,SAAS;IACb,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;QACnC,UAAU,iBAAiB,GAAG,CAAC,EAAE;IACnC;IACA,OAAO;AACT;AACA,SAAS,UAAU,OAAO,EAAE,YAAY,IAAI;IAC1C,IAAI,MAAM,OAAO,CAAC,UAAU;QAC1B,IAAI,iBAAiB,QAAQ,GAAG,CAAC,CAAC,IAAM,CAAC,CAAC,EAAE,UAAU,GAAG,WAAW,CAAC,CAAC;QACtE,OAAO,CAAC,GAAG,EAAE,eAAe,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C;IACA,IAAI,oBAAoB;IACxB,IAAI,mBAAmB;IACvB,IAAI,WAAW;IACf,IAAI,cAAc,MAAM;QACtB,oBAAoB;QACpB,mBAAmB;QACnB,WAAW;IACb,OAAO,IAAI,WAAW;QACpB,oBAAoB;QACpB,mBAAmB,mBAAmB;QACtC,IAAI,iBAAiB,MAAM,GAAG,GAAG;YAC/B,mBAAmB,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC;YAC5C,WAAW,CAAC,IAAI,EAAE,iBAAiB,GAAG,CAAC;QACzC,OAAO;YACL,WAAW,CAAC,EAAE,EAAE,iBAAiB,CAAC,CAAC;QACrC;IACF;IACA,IAAI,oBAAoB,YAAY,GAAG,iBAAiB,EAAE,CAAC,GAAG;IAC9D,IAAI,oBAAoB,YAAY,GAAG,iBAAiB,EAAE,CAAC,GAAG;IAC9D,IAAI,WAAW,YAAY,QAAQ,KAAK,CAAC,qBAAqB;QAAC;KAAQ;IACvE,IAAI,SAAS;IACb,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;QACxC,IAAI,UAAU,QAAQ,CAAC,EAAE;QACzB,IAAI,cAAc,QAAQ,CAAC,IAAI,EAAE;QACjC,IAAI,mBAAmB;QACvB,IAAI,CAAC,WAAW,IAAI,GAAG;YACrB;QACF;QACA,IAAI,WAAW;YACb,IAAI,MAAM,SAAS,MAAM,GAAG,GAAG;gBAC7B,mBAAmB;YACrB,OAAO,IAAI,gBAAgB,MAAM;gBAC/B,mBAAmB;YACrB,OAAO;gBACL,mBAAmB;YACrB;QACF;QACA,IAAI,aAAa,YAAY,MAAM;YACjC,IAAI,kBAAkB;gBACpB,UAAU,MAAM,IAAI,KAAK;gBACzB,UAAU,CAAC,GAAG,EAAE,SAAS,EAAE,EAAE,iBAAiB,GAAG,CAAC;YACpD;YACA;QACF;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IAAK;YACvC,IAAI,OAAO,OAAO,CAAC,EAAE;YACrB,IAAI,SAAS,MAAM;gBACjB,IAAI,IAAI,QAAQ,MAAM,GAAG,GAAG;oBAC1B,UAAU,iBAAiB,OAAO,CAAC,IAAI,EAAE;oBACzC;gBACF;YACF,OAAO,IAAI,SAAS,KAAK;gBACvB,UAAU;YACZ,OAAO,IAAI,SAAS,KAAK;gBACvB,UAAU,GAAG,SAAS,EAAE,CAAC;YAC3B,OAAO;gBACL,UAAU,iBAAiB;YAC7B;QACF;QACA,UAAU;IACZ;IACA,OAAO;AACT;AACA,SAAS,QAAQ,MAAM,EAAE,MAAM;IAC7B,IAAI,OAAO,WAAW,UAAU;QAC9B,MAAM,IAAI,UAAU,CAAC,6BAA6B,EAAE,OAAO,OAAO,MAAM,CAAC;IAC3E;IACA,OAAO,OAAO,IAAI,CAAC;AACrB;AACA,SAAS,cAAc,OAAO,EAAE,OAAO;IACrC,IAAI,OAAO,YAAY,YAAY,CAAC,MAAM,OAAO,CAAC,UAAU;QAC1D,MAAM,IAAI,UACR,CAAC,gFAAgF,EAAE,OAAO,QAAQ,MAAM,CAAC;IAE7G;IACA,IAAI,OAAO,YAAY,YAAY,OAAO,YAAY,WAAW;QAC/D,UAAU;YAAE,WAAW;QAAQ;IACjC;IACA,IAAI,UAAU,MAAM,KAAK,KAAK,CAAC,CAAC,OAAO,YAAY,eAAe,OAAO,YAAY,YAAY,YAAY,QAAQ,CAAC,MAAM,OAAO,CAAC,QAAQ,GAAG;QAC7I,MAAM,IAAI,UACR,CAAC,iFAAiF,EAAE,OAAO,QAAQ,MAAM,CAAC;IAE9G;IACA,UAAU,WAAW,CAAC;IACtB,IAAI,QAAQ,SAAS,KAAK,MAAM;QAC9B,MAAM,IAAI,MACR;IAEJ;IACA,IAAI,gBAAgB,UAAU,SAAS,QAAQ,SAAS;IACxD,IAAI,SAAS,IAAI,OAAO,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,EAAE,QAAQ,KAAK;IAC3D,IAAI,KAAK,QAAQ,IAAI,CAAC,MAAM;IAC5B,GAAG,OAAO,GAAG;IACb,GAAG,OAAO,GAAG;IACb,GAAG,MAAM,GAAG;IACZ,OAAO;AACT;AAEA,MAAM,wBAAwB,CAAA,GAAA,8XAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO;IACxD,IAAI,IAAI,OAAO,EAAE,WAAW,UAAU,CAAC,IAAI,OAAO,EAAE;QAClD;IACF;IACA,MAAM,UAAU,IAAI,OAAO,EAAE;IAC7B,MAAM,UAAU,IAAI,OAAO;IAC3B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;IACjC,IAAI,gBAAgB,YAAY,CAAC,IAAI,OAAO,CAAC,aAAa,EAAE;QAC1D,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;YAAE,SAAS;QAAkB;IAC/D;IACA,MAAM,eAAe,SAAS,IAAI,aAAa,SAAS,IAAI,cAAc;IAC1E,MAAM,cAAc,MAAM,eAAe,OAAO;IAChD,MAAM,cAAc,MAAM;IAC1B,MAAM,mBAAmB,MAAM;IAC/B,MAAM,qBAAqB,MAAM;IACjC,MAAM,iBAAiB,MAAM,OAAO,CAAC,QAAQ,OAAO,CAAC,cAAc,IAAI,QAAQ,cAAc,GAAG;WAC3F,QAAQ,cAAc;WACtB,MAAM,QAAQ,OAAO,CAAC,cAAc,GAAG,YAAY,EAAE;KACzD;IACD,MAAM,aAAa,SAAS,IAAI;IAChC,MAAM,iBAAiB,CAAC,KAAK;QAC3B,IAAI,IAAI,UAAU,CAAC,MAAM;YACvB,OAAO;QACT;QACA,IAAI,QAAQ,QAAQ,CAAC,MAAM;YACzB,IAAI,QAAQ,QAAQ,CAAC,QAAQ;gBAC3B,OAAO,cAAc,SAAS,CAAA,GAAA,iYAAA,CAAA,IAAS,AAAD,EAAE,QAAQ;YAClD;YACA,MAAM,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAO,AAAD,EAAE;YACrB,IAAI,CAAC,MAAM;gBACT,OAAO;YACT;YACA,OAAO,cAAc,SAAS;QAChC;QACA,MAAM,WAAW,CAAA,GAAA,iYAAA,CAAA,IAAW,AAAD,EAAE;QAC7B,OAAO,aAAa,WAAW,aAAa,YAAY,CAAC,WAAW,YAAY,CAAA,GAAA,iYAAA,CAAA,IAAS,AAAD,EAAE,OAAO,IAAI,UAAU,CAAC;IAClH;IACA,MAAM,cAAc,CAAC,KAAK;QACxB,IAAI,CAAC,KAAK;YACR;QACF;QACA,MAAM,kBAAkB,eAAe,IAAI,CACzC,CAAC,SAAW,eAAe,KAAK,WAAW,KAAK,WAAW,QAAQ,UAAU,YAAY,0DAA0D,IAAI,CAAC;QAE1J,IAAI,CAAC,iBAAiB;YACpB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,KAAK;YACnD,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CACrB,CAAC,gCAAgC,EAAE,IAAI;AAC/C,CAAC,EACO,CAAC,gCAAgC,EAAE,gBAAgB;YAErD,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;gBAAE,SAAS,CAAC,QAAQ,EAAE,OAAO;YAAC;QAChE;IACF;IACA,IAAI,cAAc,CAAC,IAAI,OAAO,CAAC,aAAa,IAAI,CAAC,IAAI,OAAO,CAAC,eAAe,EAAE;QAC5E,IAAI,CAAC,gBAAgB,iBAAiB,QAAQ;YAC5C,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;gBAAE,SAAS;YAAyB;QACtE;QACA,YAAY,cAAc;IAC5B;IACA,eAAe,YAAY,aAAa;IACxC,eAAe,YAAY,aAAa;IACxC,oBAAoB,YAAY,kBAAkB;IAClD,sBAAsB,YAAY,oBAAoB;AACxD;AACA,MAAM,cAAc,CAAC,WAAa,CAAA,GAAA,8XAAA,CAAA,uBAAoB,AAAD,EAAE,OAAO;QAC5D,IAAI,CAAC,IAAI,OAAO,EAAE;YAChB;QACF;QACA,MAAM,EAAE,OAAO,EAAE,GAAG;QACpB,MAAM,cAAc,SAAS;QAC7B,MAAM,iBAAiB,MAAM,OAAO,CAClC,QAAQ,OAAO,CAAC,cAAc,IAC5B,QAAQ,cAAc,GAAG;eACxB,QAAQ,cAAc;eACtB,MAAM,QAAQ,OAAO,CAAC,cAAc,GAAG,IAAI,OAAO,KAAK,EAAE;SAC7D;QACD,MAAM,iBAAiB,CAAC,KAAK;YAC3B,IAAI,IAAI,UAAU,CAAC,MAAM;gBACvB,OAAO;YACT;YACA,IAAI,QAAQ,QAAQ,CAAC,MAAM;gBACzB,IAAI,QAAQ,QAAQ,CAAC,QAAQ;oBAC3B,OAAO,cAAc,SAAS,CAAA,GAAA,iYAAA,CAAA,IAAS,AAAD,EAAE,QAAQ;gBAClD;gBACA,MAAM,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAO,AAAD,EAAE;gBACrB,IAAI,CAAC,MAAM;oBACT,OAAO;gBACT;gBACA,OAAO,cAAc,SAAS;YAChC;YACA,MAAM,WAAW,CAAA,GAAA,iYAAA,CAAA,IAAW,AAAD,EAAE;YAC7B,OAAO,aAAa,WAAW,aAAa,YAAY,CAAC,WAAW,YAAY,CAAA,GAAA,iYAAA,CAAA,IAAS,AAAD,EAAE,OAAO,IAAI,UAAU,CAAC;QAClH;QACA,MAAM,cAAc,CAAC,KAAK;YACxB,IAAI,CAAC,KAAK;gBACR;YACF;YACA,MAAM,kBAAkB,eAAe,IAAI,CACzC,CAAC,SAAW,eAAe,KAAK,WAAW,KAAK,WAAW,QAAQ,UAAU,YAAY,0DAA0D,IAAI,CACrJ;YAGJ,IAAI,CAAC,iBAAiB;gBACpB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,KAAK;gBACnD,IAAI,OAAO,CAAC,MAAM,CAAC,IAAI,CACrB,CAAC,gCAAgC,EAAE,IAAI;AAC/C,CAAC,EACO,CAAC,gCAAgC,EAAE,gBAAgB;gBAErD,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;oBAAE,SAAS,CAAC,QAAQ,EAAE,OAAO;gBAAC;YAChE;QACF;QACA,MAAM,YAAY,MAAM,OAAO,CAAC,eAAe,cAAc;YAAC;SAAY;QAC1E,KAAK,MAAM,OAAO,UAAW;YAC3B,YAAY,KAAK;QACnB;IACF;AACA,SAAS,gBAAgB,OAAO;IAC9B,MAAM,iBAAiB;QACrB;QACA;QACA;QACA;KACD;IACD,MAAM,uBAAuB;QAC3B;QACA;QACA;KACD;IACD,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,QAAQ,OAAO,GAAI;QAC5C,IAAI,CAAC,eAAe,QAAQ,CAAC,IAAI,WAAW,KAAK;YAC/C,OAAO;QACT;QACA,IAAI,IAAI,WAAW,OAAO,kBAAkB,CAAC,qBAAqB,QAAQ,CACxE,OAAO,MAAM,IAAI,CAAC,EAAE,EAAE,QAAQ,iBAAiB,KAC9C;YACD,OAAO;QACT;IACF;IACA,OAAO;AACT;AAEA,eAAe,6BAA6B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,YAAY,IAAI;IACnF,MAAM,QAAQ,MAAM,CAAA,GAAA,4XAAA,CAAA,UAAO,AAAD,EACxB;QACE,OAAO,MAAM,WAAW;QACxB;IACF,GACA,QACA;IAEF,OAAO;AACT;AACA,eAAe,wBAAwB,GAAG,EAAE,IAAI;IAC9C,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,uBAAuB;QACjE,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,QAAQ,MAAM,6BAClB,IAAI,OAAO,CAAC,MAAM,EAClB,KAAK,KAAK,EACV,KAAK,GACL,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE;IAEzC,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,aAAa,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK;IAC3G,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,qBAAqB,CAC/D;QACE;QACA;QACA;IACF,GACA,IAAI,OAAO;AAEf;AACA,MAAM,wBAAwB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAC7C,4BACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb,OAAO,CAAA,GAAA,gMAAA,CAAA,QAAO,AAAD,IAAI,IAAI,CAAC;YACpB,aAAa;QACf;QACA,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,aAAa;gBACX,SAAS;oBACP,oBAAoB;wBAClB,QAAQ;4BACN,MAAM;4BACN,YAAY;gCACV,OAAO;oCACL,MAAM;oCACN,aAAa;oCACb,SAAS;gCACX;gCACA,aAAa;oCACX,MAAM;oCACN,aAAa;oCACb,SAAS;oCACT,UAAU;gCACZ;4BACF;4BACA,UAAU;gCAAC;6BAAQ;wBACrB;oBACF;gBACF;YACF;YACA,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,QAAQ;wCACN,MAAM;wCACN,aAAa;wCACb,SAAS;oCACX;gCACF;4BACF;wBACF;oBACF;gBACF;gBACA,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,SAAS;wCACP,MAAM;wCACN,aAAa;wCACb,SAAS;oCACX;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,uBAAuB;QACjE,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,IAAI;IAC1B,MAAM,UAAU,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAiB,AAAD,EAAE;IACxC,IAAI,CAAC,SAAS;QACZ,MAAM,OAAO,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC;QAC/D,IAAI,CAAC,MAAM;YACT,OAAO,IAAI,IAAI,CAAC;gBACd,QAAQ;YACV;QACF;QACA,MAAM,wBAAwB,KAAK,KAAK,IAAI;QAC5C,OAAO,IAAI,IAAI,CAAC;YACd,QAAQ;QACV;IACF;IACA,IAAI,SAAS,KAAK,eAAe;QAC/B,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,IAAI,SAAS,KAAK,UAAU,OAAO;QACjC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,wBAAwB,KAAK,QAAQ,IAAI;IAC/C,OAAO,IAAI,IAAI,CAAC;QACd,QAAQ;IACV;AACF;AAEF,MAAM,cAAc,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACnC,iBACA;IACE,QAAQ;IACR,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACd,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACrB,aAAa;QACf;QACA,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;IACb;IACA,KAAK;QAAC,YAAY,CAAC,MAAQ,IAAI,KAAK,CAAC,WAAW;KAAE;IAClD,UAAU;QACR,SAAS;YACP,aAAa;YACb,YAAY;gBACV;oBACE,MAAM;oBACN,IAAI;oBACJ,aAAa;oBACb,UAAU;oBACV,QAAQ;wBACN,MAAM;oBACR;gBACF;gBACA;oBACE,MAAM;oBACN,IAAI;oBACJ,aAAa;oBACb,UAAU;oBACV,QAAQ;wBACN,MAAM;oBACR;gBACF;aACD;YACD,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,MAAM;wCACJ,MAAM;wCACN,YAAY;4CACV,IAAI;gDACF,MAAM;gDACN,aAAa;4CACf;4CACA,OAAO;gDACL,MAAM;gDACN,aAAa;4CACf;4CACA,MAAM;gDACJ,MAAM;gDACN,aAAa;4CACf;4CACA,OAAO;gDACL,MAAM;gDACN,aAAa;4CACf;4CACA,eAAe;gDACb,MAAM;gDACN,aAAa;4CACf;4CACA,WAAW;gDACT,MAAM;gDACN,aAAa;4CACf;4CACA,WAAW;gDACT,MAAM;gDACN,aAAa;4CACf;wCACF;wCACA,UAAU;4CACR;4CACA;4CACA;4CACA;4CACA;4CACA;4CACA;yCACD;oCACH;oCACA,QAAQ;wCACN,MAAM;wCACN,aAAa;oCACf;gCACF;gCACA,UAAU;oCAAC;oCAAQ;iCAAS;4BAC9B;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,SAAS,gBAAgB,KAAK;QAC5B,IAAI,IAAI,KAAK,CAAC,WAAW,EAAE;YACzB,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM;gBACvC,MAAM,IAAI,QAAQ,CAAC,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO;YAC9D;YACA,MAAM,IAAI,QAAQ,CAAC,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO;QAC9D;QACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;YACjC,SAAS;QACX;IACF;IACA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,KAAK;IAC3B,IAAI;IACJ,IAAI;QACF,MAAM,MAAM,CAAA,GAAA,wMAAA,CAAA,YAAS,AAAD,EAClB,OACA,IAAI,cAAc,MAAM,CAAC,IAAI,OAAO,CAAC,MAAM,GAC3C;YACE,YAAY;gBAAC;aAAQ;QACvB;IAEJ,EAAE,OAAO,GAAG;QACV,IAAI,aAAa,yMAAA,CAAA,aAAU,EAAE;YAC3B,OAAO,gBAAgB;QACzB;QACA,OAAO,gBAAgB;IACzB;IACA,MAAM,SAAS,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACtB,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,KAAK;QACvB,UAAU,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IAC/B;IACA,MAAM,SAAS,OAAO,KAAK,CAAC,IAAI,OAAO;IACvC,MAAM,OAAO,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAC5D,OAAO,KAAK;IAEd,IAAI,CAAC,MAAM;QACT,OAAO,gBAAgB;IACzB;IACA,IAAI,OAAO,QAAQ,EAAE;QACnB,MAAM,UAAU,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAiB,AAAD,EAAE;QACxC,IAAI,CAAC,SAAS;YACZ,IAAI,IAAI,KAAK,CAAC,WAAW,EAAE;gBACzB,MAAM,IAAI,QAAQ,CAAC,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,mBAAmB,CAAC;YAClE;YACA,OAAO,gBAAgB;QACzB;QACA,IAAI,QAAQ,IAAI,CAAC,KAAK,KAAK,OAAO,KAAK,EAAE;YACvC,IAAI,IAAI,KAAK,CAAC,WAAW,EAAE;gBACzB,MAAM,IAAI,QAAQ,CAAC,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,mBAAmB,CAAC;YAClE;YACA,OAAO,gBAAgB;QACzB;QACA,MAAM,eAAe,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,iBAAiB,CACtE,OAAO,KAAK,EACZ;YACE,OAAO,OAAO,QAAQ;YACtB,eAAe;QACjB,GACA;QAEF,MAAM,WAAW,MAAM,6BACrB,IAAI,OAAO,CAAC,MAAM,EAClB,OAAO,QAAQ;QAEjB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,wBAC3C;YACE,MAAM;YACN,KAAK,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,SAAS,aAAa,EAAE,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK;YACxG,OAAO;QACT,GACA,IAAI,OAAO;QAEb,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,KAAK;YAC1B,SAAS,QAAQ,OAAO;YACxB,MAAM;gBACJ,GAAG,QAAQ,IAAI;gBACf,OAAO,OAAO,QAAQ;gBACtB,eAAe;YACjB;QACF;QACA,IAAI,IAAI,KAAK,CAAC,WAAW,EAAE;YACzB,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,CAAC,WAAW;QAC1C;QACA,OAAO,IAAI,IAAI,CAAC;YACd,QAAQ;YACR,MAAM;gBACJ,IAAI,aAAa,EAAE;gBACnB,OAAO,aAAa,KAAK;gBACzB,MAAM,aAAa,IAAI;gBACvB,OAAO,aAAa,KAAK;gBACzB,eAAe,aAAa,aAAa;gBACzC,WAAW,aAAa,SAAS;gBACjC,WAAW,aAAa,SAAS;YACnC;QACF;IACF;IACA,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,qBAAqB;QAC9D,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,mBAAmB,CAC7D,KAAK,IAAI,EACT,IAAI,OAAO;IAEf;IACA,MAAM,cAAc,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,iBAAiB,CACrE,OAAO,KAAK,EACZ;QACE,eAAe;IACjB,GACA;IAEF,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,wBAAwB;QACjE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,sBAAsB,CAChE,aACA,IAAI,OAAO;IAEf;IACA,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,6BAA6B;QACtE,MAAM,iBAAiB,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAiB,AAAD,EAAE;QAC/C,IAAI,CAAC,kBAAkB,eAAe,IAAI,CAAC,KAAK,KAAK,OAAO,KAAK,EAAE;YACjE,MAAM,UAAU,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAC7D,KAAK,IAAI,CAAC,EAAE,EACZ;YAEF,IAAI,CAAC,SAAS;gBACZ,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,yBAAyB;oBAC1C,SAAS;gBACX;YACF;YACA,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,KAAK;gBAC1B;gBACA,MAAM;oBACJ,GAAG,KAAK,IAAI;oBACZ,eAAe;gBACjB;YACF;QACF,OAAO;YACL,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,KAAK;gBAC1B,SAAS,eAAe,OAAO;gBAC/B,MAAM;oBACJ,GAAG,eAAe,IAAI;oBACtB,eAAe;gBACjB;YACF;QACF;IACF;IACA,IAAI,IAAI,KAAK,CAAC,WAAW,EAAE;QACzB,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,CAAC,WAAW;IAC1C;IACA,OAAO,IAAI,IAAI,CAAC;QACd,QAAQ;QACR,MAAM;IACR;AACF;AAGF,MAAM,gBAAgB;IACpB,UAAU;AACZ;AAEA,eAAe,cAAc,CAAC,EAAE,IAAI;IAClC,MAAM,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO;IACpE,IAAI,CAAC,aAAa;QAChB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,eAAe,CAAA,GAAA,iYAAA,CAAA,IAAoB,AAAD,EAAE;IAC1C,MAAM,QAAQ,CAAA,GAAA,iYAAA,CAAA,IAAoB,AAAD,EAAE;IACnC,MAAM,cAAc,EAAE,OAAO,CAAC,gBAAgB,CAAC,SAAS;QACtD,QAAQ,IAAI,KAAK;IAEnB;IACA,MAAM,EAAE,eAAe,CACrB,YAAY,IAAI,EAChB,OACA,EAAE,OAAO,CAAC,MAAM,EAChB,YAAY,UAAU;IAExB,MAAM,OAAO,KAAK,SAAS,CAAC;QAC1B;QACA;QACA,UAAU,EAAE,IAAI,EAAE;QAClB,YAAY,EAAE,IAAI,EAAE;QACpB;QACA;;KAEC,GACD,WAAW,KAAK,GAAG,KAAK,KAAK,KAAK;QAClC,eAAe,EAAE,IAAI,EAAE;IACzB;IACA,MAAM,YAAY,aAAa,GAAG,IAAI;IACtC,UAAU,UAAU,CAAC,UAAU,UAAU,KAAK;IAC9C,MAAM,eAAe,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAC1E;QACE,OAAO;QACP,YAAY;QACZ;IACF,GACA;IAEF,IAAI,CAAC,cAAc;QACjB,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,yBAAyB;YAC1C,SAAS;QACX;IACF;IACA,OAAO;QACL,OAAO,aAAa,UAAU;QAC9B;IACF;AACF;AACA,eAAe,WAAW,CAAC;IACzB,MAAM,QAAQ,EAAE,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,CAAC,KAAK;IAC3C,MAAM,OAAO,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAAC;IACnE,IAAI,CAAC,MAAM;QACT,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,0CAA0C;YAC/D;QACF;QACA,MAAM,WAAW,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;QACvF,MAAM,EAAE,QAAQ,CAAC,GAAG,SAAS,iCAAiC,CAAC;IACjE;IACA,MAAM,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QAC1B,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD;QACpB,cAAc,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD;QACrB,UAAU,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;QAC7B,YAAY,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;QAC/B,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD;QAClB,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;YACb,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD;YACd,QAAQ,iOAAA,CAAA,SAAQ,CAAC,MAAM;QACzB,GAAG,QAAQ;QACX,eAAe,CAAA,GAAA,gMAAA,CAAA,UAAS,AAAD,IAAI,QAAQ;IACrC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK;IAC9B,IAAI,CAAC,WAAW,QAAQ,EAAE;QACxB,WAAW,QAAQ,GAAG,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;IACpD;IACA,MAAM,cAAc,EAAE,OAAO,CAAC,gBAAgB,CAAC;IAC/C,MAAM,mBAAmB,MAAM,EAAE,eAAe,CAC9C,YAAY,IAAI,EAChB,EAAE,OAAO,CAAC,MAAM;IAElB,MAAM,uBAAuB,EAAE,OAAO,CAAC,WAAW,EAAE;IACpD,IAAI,CAAC,wBAAwB,CAAC,CAAC,oBAAoB,qBAAqB,KAAK,GAAG;QAC9E,MAAM,WAAW,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;QACvF,MAAM,EAAE,QAAQ,CAAC,GAAG,SAAS,qBAAqB,CAAC;IACrD;IACA,EAAE,SAAS,CAAC,YAAY,IAAI,EAAE,IAAI;QAChC,QAAQ;IACV;IACA,IAAI,WAAW,SAAS,GAAG,KAAK,GAAG,IAAI;QACrC,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAAC,KAAK,EAAE;QAC/D,MAAM,WAAW,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;QACvF,MAAM,EAAE,QAAQ,CAAC,GAAG,SAAS,iCAAiC,CAAC;IACjE;IACA,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAAC,KAAK,EAAE;IAC/D,OAAO;AACT;AAEA,SAAS,kBAAkB,KAAK,EAAE,GAAG;IACnC,IAAI,CAAC,OAAO,OAAO;IACnB,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE,oBAAoB;QAC3C,OAAO,CAAA,GAAA,4XAAA,CAAA,mBAAgB,AAAD,EAAE;YACtB,KAAK,IAAI,MAAM;YACf,MAAM;QACR;IACF;IACA,OAAO;AACT;AACA,SAAS,aAAa,KAAK,EAAE,GAAG;IAC9B,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE,sBAAsB,OAAO;QACpD,OAAO,CAAA,GAAA,4XAAA,CAAA,mBAAgB,AAAD,EAAE;YACtB,KAAK,IAAI,MAAM;YACf,MAAM;QACR;IACF;IACA,OAAO;AACT;AAEA,eAAe,oBAAoB,CAAC,EAAE,EACpC,QAAQ,EACR,OAAO,EACP,WAAW,EACX,aAAa,EACb,gBAAgB,EACjB;IACC,MAAM,SAAS,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,aAAa,CAC1D,SAAS,KAAK,CAAC,WAAW,IAC1B,QAAQ,SAAS,EACjB,QAAQ,UAAU,EAClB,KAAK,CAAC,CAAC;QACP,uXAAA,CAAA,SAAM,CAAC,KAAK,CACV,2DACA;QAEF,MAAM,WAAW,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;QACvF,MAAM,EAAE,QAAQ,CAAC,GAAG,SAAS,4BAA4B,CAAC;IAC5D;IACA,IAAI,OAAO,QAAQ;IACnB,IAAI,aAAa,CAAC;IAClB,IAAI,QAAQ;QACV,MAAM,gBAAgB,OAAO,QAAQ,CAAC,IAAI,CACxC,CAAC,IAAM,EAAE,UAAU,KAAK,QAAQ,UAAU,IAAI,EAAE,SAAS,KAAK,QAAQ,SAAS;QAEjF,IAAI,CAAC,eAAe;YAClB,MAAM,mBAAmB,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB;YACpE,MAAM,oBAAoB,kBAAkB,SAC1C,QAAQ,UAAU;YAEpB,IAAI,CAAC,qBAAqB,CAAC,SAAS,aAAa,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,YAAY,OAAO;gBACjH,IAAI,CAAA,GAAA,uXAAA,CAAA,gBAAa,AAAD,KAAK;oBACnB,uXAAA,CAAA,SAAM,CAAC,IAAI,CACT,CAAC,+CAA+C,EAAE,QAAQ,UAAU,CAAC,2IAA2I,CAAC;gBAErN;gBACA,OAAO;oBACL,OAAO;oBACP,MAAM;gBACR;YACF;YACA,IAAI;gBACF,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,WAAW,CACzC;oBACE,YAAY,QAAQ,UAAU;oBAC9B,WAAW,SAAS,EAAE,CAAC,QAAQ;oBAC/B,QAAQ,OAAO,IAAI,CAAC,EAAE;oBACtB,aAAa,MAAM,aAAa,QAAQ,WAAW,EAAE,EAAE,OAAO;oBAC9D,cAAc,MAAM,aAAa,QAAQ,YAAY,EAAE,EAAE,OAAO;oBAChE,SAAS,QAAQ,OAAO;oBACxB,sBAAsB,QAAQ,oBAAoB;oBAClD,uBAAuB,QAAQ,qBAAqB;oBACpD,OAAO,QAAQ,KAAK;gBACtB,GACA;YAEJ,EAAE,OAAO,GAAG;gBACV,uXAAA,CAAA,SAAM,CAAC,KAAK,CAAC,0BAA0B;gBACvC,OAAO;oBACL,OAAO;oBACP,MAAM;gBACR;YACF;YACA,IAAI,SAAS,aAAa,IAAI,CAAC,OAAO,IAAI,CAAC,aAAa,IAAI,SAAS,KAAK,CAAC,WAAW,OAAO,OAAO,IAAI,CAAC,KAAK,EAAE;gBAC9G,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,EAAE,EAAE;oBACzD,eAAe;gBACjB;YACF;QACF,OAAO;YACL,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,0BAA0B,OAAO;gBAC9D,MAAM,aAAa,OAAO,WAAW,CACnC,OAAO,OAAO,CAAC;oBACb,SAAS,QAAQ,OAAO;oBACxB,aAAa,MAAM,aAAa,QAAQ,WAAW,EAAE,EAAE,OAAO;oBAC9D,cAAc,MAAM,aAAa,QAAQ,YAAY,EAAE,EAAE,OAAO;oBAChE,sBAAsB,QAAQ,oBAAoB;oBAClD,uBAAuB,QAAQ,qBAAqB;oBACpD,OAAO,QAAQ,KAAK;gBACtB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAK,UAAU,KAAK;gBAE3C,IAAI,OAAO,IAAI,CAAC,YAAY,MAAM,GAAG,GAAG;oBACtC,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,aAAa,CAC3C,cAAc,EAAE,EAChB,YACA;gBAEJ;YACF;YACA,IAAI,SAAS,aAAa,IAAI,CAAC,OAAO,IAAI,CAAC,aAAa,IAAI,SAAS,KAAK,CAAC,WAAW,OAAO,OAAO,IAAI,CAAC,KAAK,EAAE;gBAC9G,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,EAAE,EAAE;oBACzD,eAAe;gBACjB;YACF;QACF;QACA,IAAI,kBAAkB;YACpB,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,cAAc,GAAG;YACnC,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,EAAE,EAAE;gBACzD,GAAG,YAAY;gBACf,OAAO,SAAS,KAAK,CAAC,WAAW;gBACjC,eAAe,SAAS,KAAK,CAAC,WAAW,OAAO,OAAO,IAAI,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,aAAa,IAAI,SAAS,aAAa,GAAG,SAAS,aAAa;YAClJ;QACF;IACF,OAAO;QACL,IAAI,eAAe;YACjB,OAAO;gBACL,OAAO;gBACP,MAAM;gBACN,YAAY;YACd;QACF;QACA,IAAI;YACF,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,cAAc,GAAG;YACnC,OAAO,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,eAAe,CACpD;gBACE,GAAG,YAAY;gBACf,OAAO,SAAS,KAAK,CAAC,WAAW;YACnC,GACA;gBACE,aAAa,MAAM,aAAa,QAAQ,WAAW,EAAE,EAAE,OAAO;gBAC9D,cAAc,MAAM,aAAa,QAAQ,YAAY,EAAE,EAAE,OAAO;gBAChE,SAAS,QAAQ,OAAO;gBACxB,sBAAsB,QAAQ,oBAAoB;gBAClD,uBAAuB,QAAQ,qBAAqB;gBACpD,OAAO,QAAQ,KAAK;gBACpB,YAAY,QAAQ,UAAU;gBAC9B,WAAW,SAAS,EAAE,CAAC,QAAQ;YACjC,GACA,GACA,IAAI,CAAC,CAAC,MAAQ,KAAK;YACrB,IAAI,CAAC,SAAS,aAAa,IAAI,QAAQ,EAAE,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,cAAc;gBACxF,MAAM,QAAQ,MAAM,6BAClB,EAAE,OAAO,CAAC,MAAM,EAChB,KAAK,KAAK,EACV,KAAK,GACL,EAAE,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE;gBAEvC,MAAM,MAAM,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,aAAa,EAAE,aAAa;gBACzF,MAAM,EAAE,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,wBACzC;oBACE;oBACA;oBACA;gBACF,GACA,EAAE,OAAO;YAEb;QACF,EAAE,OAAO,GAAG;YACV,uXAAA,CAAA,SAAM,CAAC,KAAK,CAAC;YACb,IAAI,aAAa,2MAAA,CAAA,WAAQ,EAAE;gBACzB,OAAO;oBACL,OAAO,EAAE,OAAO;oBAChB,MAAM;oBACN,YAAY;gBACd;YACF;YACA,OAAO;gBACL,OAAO;gBACP,MAAM;gBACN,YAAY;YACd;QACF;IACF;IACA,IAAI,CAAC,MAAM;QACT,OAAO;YACL,OAAO;YACP,MAAM;YACN,YAAY;QACd;IACF;IACA,MAAM,UAAU,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC,KAAK,EAAE,EAAE;IACvE,IAAI,CAAC,SAAS;QACZ,OAAO;YACL,OAAO;YACP,MAAM;YACN,YAAY;QACd;IACF;IACA,OAAO;QACL,MAAM;YACJ;YACA;QACF;QACA,OAAO;QACP;IACF;AACF;AAEA,MAAM,eAAe,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACpC,mBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;;OAGC,GACD,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;QACX;;;;OAIC,GACD,oBAAoB,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;QACvC;;;;;OAKC,GACD,kBAAkB,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAChC,aAAa;QACf,GAAG,QAAQ;QACX;;OAEC,GACD,UAAU,uYAAA,CAAA,yBAAsB;QAChC;;;;;OAKC,GACD,iBAAiB,CAAA,GAAA,gMAAA,CAAA,UAAS,AAAD,IAAI,IAAI,CAAC;YAChC,aAAa;QACf,GAAG,QAAQ;QACX;;;;;;;;;;OAUC,GACD,SAAS,CAAA,GAAA,gMAAA,CAAA,WAAU,AAAD,EAChB,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;YACP;;WAEC,GACD,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;gBACrB,aAAa;YACf;YACA;;WAEC,GACD,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;gBACrB,aAAa;YACf,GAAG,QAAQ;YACX;;WAEC,GACD,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;gBAC3B,aAAa;YACf,GAAG,QAAQ;YACX;;WAEC,GACD,cAAc,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;gBAC5B,aAAa;YACf,GAAG,QAAQ;YACX;;WAEC,GACD,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;gBACzB,aAAa;YACf,GAAG,QAAQ;QACb;QAEF,QAAQ,CAAA,GAAA,gMAAA,CAAA,QAAO,AAAD,EAAE,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,KAAK,IAAI,CAAC;YAC/B,aAAa;QACf,GAAG,QAAQ;QACX;;;;;;OAMC,GACD,eAAe,CAAA,GAAA,gMAAA,CAAA,UAAS,AAAD,IAAI,IAAI,CAAC;YAC9B,aAAa;QACf,GAAG,QAAQ;QACX;;OAEC,GACD,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACzB,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,4CAA4C;gCAC5C,MAAM;gCACN,aAAa;gCACb,YAAY;oCACV,UAAU;wCACR,MAAM;wCACN,MAAM;4CAAC;yCAAM;oCACf;oCACA,OAAO;wCACL,MAAM;wCACN,aAAa;wCACb,KAAK;4CACH,MAAM;4CACN,UAAU;wCACZ;wCACA,MAAM;4CACJ,MAAM;4CACN,YAAY;gDACV,IAAI;oDAAE,MAAM;gDAAS;gDACrB,OAAO;oDAAE,MAAM;gDAAS;gDACxB,MAAM;oDACJ,MAAM;oDACN,UAAU;gDACZ;gDACA,OAAO;oDACL,MAAM;oDACN,UAAU;gDACZ;gDACA,eAAe;oDACb,MAAM;gDACR;gDACA,WAAW;oDACT,MAAM;oDACN,QAAQ;gDACV;gDACA,WAAW;oDACT,MAAM;oDACN,QAAQ;gDACV;4CACF;4CACA,UAAU;gDACR;gDACA;gDACA;gDACA;gDACA;6CACD;wCACH;oCACF;gCACF;gCACA,UAAU;oCAAC;oCAAY;oCAAS;iCAAO;4BACzC;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,WAAW,EAAE,OAAO,CAAC,eAAe,CAAC,IAAI,CAC7C,CAAC,IAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ;IAEjC,IAAI,CAAC,UAAU;QACb,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB,yEACA;YACE,UAAU,EAAE,IAAI,CAAC,QAAQ;QAC3B;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;YAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,kBAAkB;QAC9C;IACF;IACA,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;QAClB,IAAI,CAAC,SAAS,aAAa,EAAE;YAC3B,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB,mDACA;gBACE,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;gBAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,sBAAsB;YAClD;QACF;QACA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO;QACvC,MAAM,QAAQ,MAAM,SAAS,aAAa,CAAC,OAAO;QAClD,IAAI,CAAC,OAAO;YACV,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB;gBACzC,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,aAAa;YACzC;QACF;QACA,MAAM,WAAW,MAAM,SAAS,WAAW,CAAC;YAC1C,SAAS;YACT,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;YACvC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;QAC3C;QACA,IAAI,CAAC,YAAY,CAAC,UAAU,MAAM;YAChC,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B;gBAChD,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,uBAAuB;YACnD;QACF;QACA,IAAI,CAAC,SAAS,IAAI,CAAC,KAAK,EAAE;YACxB,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB;gBAC7C,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,oBAAoB;YAChD;QACF;QACA,MAAM,OAAO,MAAM,oBAAoB,GAAG;YACxC,UAAU;gBACR,GAAG,SAAS,IAAI;gBAChB,OAAO,SAAS,IAAI,CAAC,KAAK;gBAC1B,IAAI,OAAO,SAAS,IAAI,CAAC,EAAE;gBAC3B,MAAM,SAAS,IAAI,CAAC,IAAI,IAAI;gBAC5B,OAAO,SAAS,IAAI,CAAC,KAAK;gBAC1B,eAAe,SAAS,IAAI,CAAC,aAAa,IAAI;YAChD;YACA,SAAS;gBACP,YAAY,SAAS,EAAE;gBACvB,WAAW,OAAO,SAAS,IAAI,CAAC,EAAE;gBAClC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;YACzC;YACA,aAAa,EAAE,IAAI,CAAC,WAAW;YAC/B,eAAe,SAAS,qBAAqB,IAAI,CAAC,EAAE,IAAI,CAAC,aAAa,IAAI,SAAS,aAAa;QAClG;QACA,IAAI,KAAK,KAAK,EAAE;YACd,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS,KAAK,KAAK;YACrB;QACF;QACA,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,GAAG,KAAK,IAAI;QACnC,OAAO,EAAE,IAAI,CAAC;YACZ,UAAU;YACV,OAAO,KAAK,IAAI,CAAC,OAAO,CAAC,KAAK;YAC9B,KAAK,KAAK;YACV,MAAM;gBACJ,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;gBACrB,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK;gBAC3B,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI;gBACzB,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK;gBAC3B,eAAe,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa;gBAC3C,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS;gBACnC,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS;YACrC;QACF;IACF;IACA,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,MAAM,cAAc;IACpD,MAAM,MAAM,MAAM,SAAS,sBAAsB,CAAC;QAChD;QACA;QACA,aAAa,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE;QAC3D,QAAQ,EAAE,IAAI,CAAC,MAAM;QACrB,WAAW,EAAE,IAAI,CAAC,SAAS;IAC7B;IACA,OAAO,EAAE,IAAI,CAAC;QACZ,KAAK,IAAI,QAAQ;QACjB,UAAU,CAAC,EAAE,IAAI,CAAC,eAAe;IACnC;AACF;AAEF,MAAM,cAAc,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACnC,kBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;OAEC,GACD,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACrB,aAAa;QACf;QACA;;OAEC,GACD,UAAU,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACxB,aAAa;QACf;QACA;;;OAGC,GACD,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;QACX;;;OAGC,GACD,YAAY,CAAA,GAAA,gMAAA,CAAA,UAAS,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,OAAO,CAAC,MAAM,QAAQ;IAC3B;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,4CAA4C;gCAC5C,MAAM;gCACN,aAAa;gCACb,YAAY;oCACV,UAAU;wCACR,MAAM;wCACN,MAAM;4CAAC;yCAAM;oCACf;oCACA,OAAO;wCACL,MAAM;wCACN,aAAa;oCACf;oCACA,KAAK;wCACH,MAAM;wCACN,UAAU;oCACZ;oCACA,MAAM;wCACJ,MAAM;wCACN,YAAY;4CACV,IAAI;gDAAE,MAAM;4CAAS;4CACrB,OAAO;gDAAE,MAAM;4CAAS;4CACxB,MAAM;gDACJ,MAAM;gDACN,UAAU;4CACZ;4CACA,OAAO;gDACL,MAAM;gDACN,UAAU;4CACZ;4CACA,eAAe;gDACb,MAAM;4CACR;4CACA,WAAW;gDACT,MAAM;gDACN,QAAQ;4CACV;4CACA,WAAW;gDACT,MAAM;gDACN,QAAQ;4CACV;wCACF;wCACA,UAAU;4CACR;4CACA;4CACA;4CACA;4CACA;yCACD;oCACH;gCACF;gCACA,UAAU;oCAAC;oCAAY;oCAAS;iCAAO;4BACzC;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,kBAAkB,SAAS;QACnD,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CACtB;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,IAAI,IAAI;IACpC,MAAM,eAAe,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,GAAG,SAAS,CAAC;IAClD,IAAI,CAAC,aAAa,OAAO,EAAE;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,aAAa;QACzC;IACF;IACA,MAAM,OAAO,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO;QACpE,iBAAiB;IACnB;IACA,IAAI,CAAC,MAAM;QACT,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;QAChC,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB;YAAE;QAAM;QACnD,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;YACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,yBAAyB;QACrD;IACF;IACA,MAAM,oBAAoB,KAAK,QAAQ,CAAC,IAAI,CAC1C,CAAC,IAAM,EAAE,UAAU,KAAK;IAE1B,IAAI,CAAC,mBAAmB;QACtB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,gCAAgC;YAAE;QAAM;QACjE,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;YACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,yBAAyB;QACrD;IACF;IACA,MAAM,kBAAkB,mBAAmB;IAC3C,IAAI,CAAC,iBAAiB;QACpB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB;YAAE;QAAM;QACvD,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;YACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,yBAAyB;QACrD;IACF;IACA,MAAM,gBAAgB,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QACtD,MAAM;QACN;IACF;IACA,IAAI,CAAC,eAAe;QAClB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;YACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,yBAAyB;QACrD;IACF;IACA,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE,kBAAkB,4BAA4B,CAAC,KAAK,IAAI,CAAC,aAAa,EAAE;QAC/F,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE,mBAAmB,uBAAuB;YAClE,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;gBAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,kBAAkB;YAC9C;QACF;QACA,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE,mBAAmB,cAAc;YACxD,MAAM,QAAQ,MAAM,6BAClB,IAAI,OAAO,CAAC,MAAM,EAClB,KAAK,IAAI,CAAC,KAAK,EACf,KAAK,GACL,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE;YAEzC,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,aAAa,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK;YAC3G,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,qBAAqB,CAC/D;gBACE,MAAM,KAAK,IAAI;gBACf;gBACA;YACF,GACA,IAAI,OAAO;QAEf;QACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;YAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,kBAAkB;QAC9C;IACF;IACA,MAAM,UAAU,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAC7D,KAAK,IAAI,CAAC,EAAE,EACZ,KACA,IAAI,IAAI,CAAC,UAAU,KAAK;IAE1B,IAAI,CAAC,SAAS;QACZ,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;YACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,wBAAwB;QACpD;IACF;IACA,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EACnB,KACA;QACE;QACA,MAAM,KAAK,IAAI;IACjB,GACA,IAAI,IAAI,CAAC,UAAU,KAAK;IAE1B,OAAO,IAAI,IAAI,CAAC;QACd,UAAU,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW;QAChC,OAAO,QAAQ,KAAK;QACpB,KAAK,IAAI,IAAI,CAAC,WAAW;QACzB,MAAM;YACJ,IAAI,KAAK,IAAI,CAAC,EAAE;YAChB,OAAO,KAAK,IAAI,CAAC,KAAK;YACtB,MAAM,KAAK,IAAI,CAAC,IAAI;YACpB,OAAO,KAAK,IAAI,CAAC,KAAK;YACtB,eAAe,KAAK,IAAI,CAAC,aAAa;YACtC,WAAW,KAAK,IAAI,CAAC,SAAS;YAC9B,WAAW,KAAK,IAAI,CAAC,SAAS;QAChC;IACF;AACF;AAGF,MAAM,SAAS,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;IACtB,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IACzB,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IAC1B,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IAC9B,mBAAmB,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IACtC,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IAC1B,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;AAC3B;AACA,MAAM,gBAAgB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACrC,iBACA;IACE,QAAQ;QAAC;QAAO;KAAO;IACvB,MAAM,OAAO,QAAQ;IACrB,OAAO,OAAO,QAAQ;IACtB,UAAU;AACZ,GACA,OAAO;IACL,IAAI;IACJ,MAAM,kBAAkB,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;IAC9F,IAAI;QACF,IAAI,EAAE,MAAM,KAAK,OAAO;YACtB,cAAc,OAAO,KAAK,CAAC,EAAE,KAAK;QACpC,OAAO,IAAI,EAAE,MAAM,KAAK,QAAQ;YAC9B,cAAc,OAAO,KAAK,CAAC,EAAE,IAAI;QACnC,OAAO;YACL,MAAM,IAAI,MAAM;QAClB;IACF,EAAE,OAAO,GAAG;QACV,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,4BAA4B;QACnD,MAAM,EAAE,QAAQ,CAAC,GAAG,gBAAgB,+BAA+B,CAAC;IACtE;IACA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,iBAAiB,EAAE,SAAS,EAAE,GAAG;IAC7D,IAAI,CAAC,OAAO;QACV,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,mBAAmB;QAC1C,MAAM,MAAM,gBAAgB,QAAQ,CAAC,OAAO,MAAM;QAClD,MAAM,MAAM,GAAG,kBAAkB,IAAI,qBAAqB,CAAC;QAC3D,MAAM,EAAE,QAAQ,CAAC;IACnB;IACA,MAAM,EACJ,YAAY,EACZ,WAAW,EACX,IAAI,EACJ,QAAQ,EACR,UAAU,EACV,aAAa,EACd,GAAG,MAAM,WAAW;IACrB,SAAS,gBAAgB,MAAM,EAAE,WAAW;QAC1C,MAAM,UAAU,YAAY;QAC5B,MAAM,SAAS,IAAI,gBAAgB;YAAE,OAAO;QAAO;QACnD,IAAI,aAAa,OAAO,GAAG,CAAC,qBAAqB;QACjD,MAAM,MAAM,QAAQ,QAAQ,CAAC,OAAO,MAAM;QAC1C,MAAM,MAAM,GAAG,UAAU,MAAM,OAAO,QAAQ,IAAI;QAClD,MAAM,EAAE,QAAQ,CAAC;IACnB;IACA,IAAI,OAAO;QACT,gBAAgB,OAAO;IACzB;IACA,IAAI,CAAC,MAAM;QACT,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACvB,MAAM,gBAAgB;IACxB;IACA,MAAM,WAAW,EAAE,OAAO,CAAC,eAAe,CAAC,IAAI,CAC7C,CAAC,IAAM,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE;IAE7B,IAAI,CAAC,UAAU;QACb,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB,0BACA,EAAE,MAAM,CAAC,EAAE,EACX;QAEF,MAAM,gBAAgB;IACxB;IACA,IAAI;IACJ,IAAI;QACF,SAAS,MAAM,SAAS,yBAAyB,CAAC;YAChD;YACA;YACA,UAAU;YACV,aAAa,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE;QAC7D;IACF,EAAE,OAAO,GAAG;QACV,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI;QAC3B,MAAM,gBAAgB;IACxB;IACA,MAAM,WAAW,MAAM,SAAS,WAAW,CAAC;QAC1C,GAAG,MAAM;QACT,MAAM,EAAE,IAAI,EAAE,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,EAAE,IAAI,CAAC,IAAI,IAAI,KAAK;IACzD,GAAG,IAAI,CAAC,CAAC,MAAQ,KAAK;IACtB,IAAI,CAAC,UAAU;QACb,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACvB,OAAO,gBAAgB;IACzB;IACA,IAAI,CAAC,aAAa;QAChB,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACvB,MAAM,gBAAgB;IACxB;IACA,IAAI,MAAM;QACR,MAAM,mBAAmB,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB;QACpE,MAAM,oBAAoB,kBAAkB,SAC1C,SAAS,EAAE;QAEb,IAAI,CAAC,qBAAqB,CAAC,SAAS,aAAa,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,YAAY,OAAO;YACjH,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;YACvB,OAAO,gBAAgB;QACzB;QACA,IAAI,SAAS,KAAK,KAAK,KAAK,KAAK,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,yBAAyB,MAAM;YAC7G,OAAO,gBAAgB;QACzB;QACA,MAAM,kBAAkB,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,WAAW,CACjE,OAAO,SAAS,EAAE;QAEpB,IAAI,iBAAiB;YACnB,IAAI,gBAAgB,MAAM,CAAC,QAAQ,OAAO,KAAK,MAAM,CAAC,QAAQ,IAAI;gBAChE,OAAO,gBAAgB;YACzB;YACA,MAAM,aAAa,OAAO,WAAW,CACnC,OAAO,OAAO,CAAC;gBACb,aAAa,MAAM,aAAa,OAAO,WAAW,EAAE,EAAE,OAAO;gBAC7D,cAAc,MAAM,aAAa,OAAO,YAAY,EAAE,EAAE,OAAO;gBAC/D,SAAS,OAAO,OAAO;gBACvB,sBAAsB,OAAO,oBAAoB;gBACjD,uBAAuB,OAAO,qBAAqB;gBACnD,OAAO,OAAO,MAAM,EAAE,KAAK;YAC7B,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAK,UAAU,KAAK;YAE3C,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,aAAa,CAC3C,gBAAgB,EAAE,EAClB;QAEJ,OAAO;YACL,MAAM,aAAa,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,aAAa,CAC9D;gBACE,QAAQ,KAAK,MAAM;gBACnB,YAAY,SAAS,EAAE;gBACvB,WAAW,OAAO,SAAS,EAAE;gBAC7B,GAAG,MAAM;gBACT,aAAa,MAAM,aAAa,OAAO,WAAW,EAAE,EAAE,OAAO;gBAC7D,cAAc,MAAM,aAAa,OAAO,YAAY,EAAE,EAAE,OAAO;gBAC/D,OAAO,OAAO,MAAM,EAAE,KAAK;YAC7B,GACA;YAEF,IAAI,CAAC,YAAY;gBACf,OAAO,gBAAgB;YACzB;QACF;QACA,IAAI;QACJ,IAAI;YACF,MAAM,MAAM;YACZ,gBAAgB,IAAI,QAAQ;QAC9B,EAAE,OAAM;YACN,gBAAgB;QAClB;QACA,MAAM,EAAE,QAAQ,CAAC;IACnB;IACA,IAAI,CAAC,SAAS,KAAK,EAAE;QACnB,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB;QAEF,OAAO,gBAAgB;IACzB;IACA,MAAM,SAAS,MAAM,oBAAoB,GAAG;QAC1C,UAAU;YACR,GAAG,QAAQ;YACX,IAAI,OAAO,SAAS,EAAE;YACtB,OAAO,SAAS,KAAK;YACrB,MAAM,SAAS,IAAI,IAAI,SAAS,KAAK;QACvC;QACA,SAAS;YACP,YAAY,SAAS,EAAE;YACvB,WAAW,OAAO,SAAS,EAAE;YAC7B,GAAG,MAAM;YACT,OAAO,OAAO,MAAM,EAAE,KAAK;QAC7B;QACA;QACA,eAAe,SAAS,qBAAqB,IAAI,CAAC,iBAAiB,SAAS,OAAO,EAAE;QACrF,kBAAkB,SAAS,OAAO,EAAE;IACtC;IACA,IAAI,OAAO,KAAK,EAAE;QAChB,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC;QACpD,OAAO,gBAAgB,OAAO,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC;IACtD;IACA,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,OAAO,IAAI;IACrC,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,GAAG;QACxB;QACA;IACF;IACA,IAAI;IACJ,IAAI;QACF,MAAM,MAAM,OAAO,UAAU,GAAG,cAAc,cAAc;QAC5D,eAAe,IAAI,QAAQ;IAC7B,EAAE,OAAM;QACN,eAAe,OAAO,UAAU,GAAG,cAAc,cAAc;IACjE;IACA,MAAM,EAAE,QAAQ,CAAC;AACnB;AAGF,MAAM,UAAU,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAC/B,aACA;IACE,QAAQ;IACR,gBAAgB;IAChB,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,SAAS;wCACP,MAAM;oCACR;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,qBAAqB,MAAM,IAAI,eAAe,CAClD,IAAI,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EACzC,IAAI,OAAO,CAAC,MAAM;IAEpB,IAAI,CAAC,oBAAoB;QACvB,CAAA,GAAA,iYAAA,CAAA,IAAmB,AAAD,EAAE;QACpB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,qBAAqB;QACjD;IACF;IACA,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC;IAChD,CAAA,GAAA,iYAAA,CAAA,IAAmB,AAAD,EAAE;IACpB,OAAO,IAAI,IAAI,CAAC;QACd,SAAS;IACX;AACF;AAGF,SAAS,cAAc,GAAG,EAAE,WAAW,EAAE,KAAK;IAC5C,MAAM,MAAM,cAAc,IAAI,IAAI,aAAa,IAAI,OAAO,IAAI,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC;IAC5F,IAAI,OACF,OAAO,OAAO,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG;IACpE,OAAO,IAAI,IAAI;AACjB;AACA,SAAS,iBAAiB,GAAG,EAAE,WAAW,EAAE,KAAK;IAC/C,MAAM,MAAM,IAAI,IAAI,aAAa,IAAI,OAAO;IAC5C,IAAI,OACF,OAAO,OAAO,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,GAAK,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG;IACpE,OAAO,IAAI,IAAI;AACjB;AACA,MAAM,uBAAuB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAC5C,2BACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;OAEC,GACD,OAAO,CAAA,GAAA,gMAAA,CAAA,QAAO,AAAD,IAAI,IAAI,CAAC;YACpB,aAAa;QACf;QACA;;;;;OAKC,GACD,YAAY,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC1B,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,QAAQ;wCACN,MAAM;oCACR;oCACA,SAAS;wCACP,MAAM;oCACR;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,mBAAmB;QAC5D,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CACtB;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI;IACtC,MAAM,OAAO,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO;QACpE,iBAAiB;IACnB;IACA,IAAI,CAAC,MAAM;QACT,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC;YAAE;QAAM;QACnE,OAAO,IAAI,IAAI,CAAC;YACd,QAAQ;YACR,SAAS;QACX;IACF;IACA,MAAM,mBAAmB,KAAK,KAAK;IACnC,MAAM,YAAY,CAAA,GAAA,iYAAA,CAAA,IAAO,AAAD,EACtB,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,2BAA2B,IAAI,kBACpE;IAEF,MAAM,oBAAoB,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE;IACrC,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,uBAAuB,CACvD;QACE,OAAO,KAAK,IAAI,CAAC,EAAE;QACnB,YAAY,CAAC,eAAe,EAAE,mBAAmB;QACjD;IACF,GACA;IAEF,MAAM,cAAc,aAAa,mBAAmB,cAAc;IAClE,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,kBAAkB,aAAa,EAAE,aAAa;IACnG,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,CAC1D;QACE,MAAM,KAAK,IAAI;QACf;QACA,OAAO;IACT,GACA,IAAI,OAAO;IAEb,OAAO,IAAI,IAAI,CAAC;QACd,QAAQ;QACR,SAAS;IACX;AACF;AAEF,MAAM,iBAAiB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACtC,oBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;OAEC,GACD,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,KAAK,GAAG,IAAI,CAAC;YAC7B,aAAa;QACf;QACA;;;;;OAKC,GACD,YAAY,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC1B,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,QAAQ;wCACN,MAAM;oCACR;oCACA,SAAS;wCACP,MAAM;oCACR;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,mBAAmB;QAC5D,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CACtB;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI;IACtC,MAAM,OAAO,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC,OAAO;QACpE,iBAAiB;IACnB;IACA,IAAI,CAAC,MAAM;QACT,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC;YAAE;QAAM;QACnE,OAAO,IAAI,IAAI,CAAC;YACd,QAAQ;YACR,SAAS;QACX;IACF;IACA,MAAM,mBAAmB,KAAK,KAAK;IACnC,MAAM,YAAY,CAAA,GAAA,iYAAA,CAAA,IAAO,AAAD,EACtB,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,2BAA2B,IAAI,kBACpE;IAEF,MAAM,oBAAoB,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE;IACrC,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,uBAAuB,CACvD;QACE,OAAO,KAAK,IAAI,CAAC,EAAE;QACnB,YAAY,CAAC,eAAe,EAAE,mBAAmB;QACjD;IACF,GACA;IAEF,MAAM,cAAc,aAAa,mBAAmB,cAAc;IAClE,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,kBAAkB,aAAa,EAAE,aAAa;IACnG,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,CAC1D;QACE,MAAM,KAAK,IAAI;QACf;QACA,OAAO;IACT,GACA,IAAI,OAAO;IAEb,OAAO,IAAI,IAAI,CAAC;QACd,QAAQ;IACV;AACF;AAEF,MAAM,+BAA+B,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACpD,0BACA;IACE,QAAQ;IACR,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACd,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf;IACF;IACA,KAAK;QAAC,YAAY,CAAC,MAAQ,IAAI,KAAK,CAAC,WAAW;KAAE;IAClD,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,OAAO;wCACL,MAAM;oCACR;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,MAAM;IAC5B,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,KAAK;IACjC,IAAI,CAAC,SAAS,CAAC,aAAa;QAC1B,MAAM,IAAI,QAAQ,CAChB,cAAc,IAAI,OAAO,EAAE,aAAa;YAAE,OAAO;QAAgB;IAErE;IACA,MAAM,eAAe,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAC1E,CAAC,eAAe,EAAE,OAAO;IAE3B,IAAI,CAAC,gBAAgB,aAAa,SAAS,GAAG,aAAa,GAAG,IAAI,QAAQ;QACxE,MAAM,IAAI,QAAQ,CAChB,cAAc,IAAI,OAAO,EAAE,aAAa;YAAE,OAAO;QAAgB;IAErE;IACA,MAAM,IAAI,QAAQ,CAAC,iBAAiB,IAAI,OAAO,EAAE,aAAa;QAAE;IAAM;AACxE;AAEF,MAAM,yBAAyB;AAC/B,MAAM,gBAAgB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACrC,mBACA;IACE,QAAQ;IACR,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACd,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IAC5B,GAAG,QAAQ;IACX,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf;QACA,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACrB,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,QAAQ;wCACN,MAAM;oCACR;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,KAAK,EAAE;IAC3C,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,aAAa;QACzC;IACF;IACA,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,IAAI;IAChC,MAAM,YAAY,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO;IAC/C,MAAM,YAAY,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO;IAC/C,IAAI,YAAY,MAAM,GAAG,WAAW;QAClC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,kBAAkB;QAC9C;IACF;IACA,IAAI,YAAY,MAAM,GAAG,WAAW;QAClC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,iBAAiB;QAC7C;IACF;IACA,MAAM,KAAK,CAAC,eAAe,EAAE,OAAO;IACpC,MAAM,eAAe,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,qBAAqB,CAAC;IAC7E,IAAI,CAAC,gBAAgB,aAAa,SAAS,GAAG,aAAa,GAAG,IAAI,QAAQ;QACxE,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,aAAa;QACzC;IACF;IACA,MAAM,SAAS,aAAa,KAAK;IACjC,MAAM,iBAAiB,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;IACvD,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;IAChE,MAAM,UAAU,SAAS,IAAI,CAAC,CAAC,KAAO,GAAG,UAAU,KAAK;IACxD,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAC7C;YACE;YACA,YAAY;YACZ,UAAU;YACV,WAAW;QACb,GACA;IAEJ,OAAO;QACL,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,cAAc,CAC9C,QACA,gBACA;IAEJ;IACA,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAAC,aAAa,EAAE;IACzE,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,iBAAiB;QACzD,MAAM,OAAO,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;QAC5D,IAAI,MAAM;YACR,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,eAAe,CACxD;gBACE;YACF,GACA,IAAI,OAAO;QAEf;IACF;IACA,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,gBAAgB,EAAE,+BAA+B;QACvE,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC;IACnD;IACA,OAAO,IAAI,IAAI,CAAC;QACd,QAAQ;IACV;AACF;AAGF,MAAM,aAAa,IAAM,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACxC,gBACA;QACE,QAAQ;QACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EACX,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACd,aAAa;QACf,IACA,CAAA,GAAA,gMAAA,CAAA,MAAK,AAAD;QAEN,KAAK;YAAC,iYAAA,CAAA,IAAiB;SAAC;QACxB,UAAU;YACR,QAAQ;gBACN,MAAM,CAAC;YACT;YACA,SAAS;gBACP,aAAa;gBACb,aAAa;oBACX,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,MAAM;wCACJ,MAAM;wCACN,aAAa;oCACf;oCACA,OAAO;wCACL,MAAM;wCACN,aAAa;oCACf;gCACF;4BACF;wBACF;oBACF;gBACF;gBACA,WAAW;oBACT,OAAO;wBACL,aAAa;wBACb,SAAS;4BACP,oBAAoB;gCAClB,QAAQ;oCACN,MAAM;oCACN,YAAY;wCACV,QAAQ;4CACN,MAAM;4CACN,aAAa;wCACf;oCACF;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF,GACA,OAAO;QACL,MAAM,OAAO,IAAI,IAAI;QACrB,IAAI,KAAK,KAAK,EAAE;YACd,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;gBAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,wBAAwB;YACpD;QACF;QACA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,GAAG;QACjC,MAAM,UAAU,IAAI,OAAO,CAAC,OAAO;QACnC,MAAM,mBAAmB,CAAA,GAAA,iYAAA,CAAA,IAAc,AAAD,EACpC,IAAI,OAAO,CAAC,OAAO,EACnB,MACA;QAEF,IAAI,UAAU,KAAK,KAAK,SAAS,KAAK,KAAK,OAAO,IAAI,CAAC,kBAAkB,MAAM,KAAK,GAAG;YACrF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;gBAChC,SAAS;YACX;QACF;QACA,MAAM,OAAO,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,UAAU,CACvD,QAAQ,IAAI,CAAC,EAAE,EACf;YACE;YACA;YACA,GAAG,gBAAgB;QACrB,GACA;QAEF,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,KAAK;YAC1B,SAAS,QAAQ,OAAO;YACxB;QACF;QACA,OAAO,IAAI,IAAI,CAAC;YACd,QAAQ;QACV;IACF;AAEF,MAAM,iBAAiB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACtC,oBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;OAEC,GACD,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf;QACA;;OAEC,GACD,iBAAiB,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC/B,aAAa;QACf;QACA;;;OAGC,GACD,qBAAqB,CAAA,GAAA,gMAAA,CAAA,UAAS,AAAD,IAAI,IAAI,CAAC;YACpC,aAAa;QACf,GAAG,QAAQ;IACb;IACA,KAAK;QAAC,iYAAA,CAAA,IAA0B;KAAC;IACjC,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,OAAO;wCACL,MAAM;wCACN,UAAU;wCACV,8CAA8C;wCAC9C,aAAa;oCACf;oCACA,MAAM;wCACJ,MAAM;wCACN,YAAY;4CACV,IAAI;gDACF,MAAM;gDACN,aAAa;4CACf;4CACA,OAAO;gDACL,MAAM;gDACN,QAAQ;gDACR,aAAa;4CACf;4CACA,MAAM;gDACJ,MAAM;gDACN,aAAa;4CACf;4CACA,OAAO;gDACL,MAAM;gDACN,QAAQ;gDACR,UAAU;gDACV,aAAa;4CACf;4CACA,eAAe;gDACb,MAAM;gDACN,aAAa;4CACf;4CACA,WAAW;gDACT,MAAM;gDACN,QAAQ;gDACR,aAAa;4CACf;4CACA,WAAW;gDACT,MAAM;gDACN,QAAQ;gDACR,aAAa;4CACf;wCACF;wCACA,UAAU;4CACR;4CACA;4CACA;4CACA;4CACA;4CACA;yCACD;oCACH;gCACF;gCACA,UAAU;oCAAC;iCAAO;4BACpB;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,mBAAmB,EAAE,GAAG,IAAI,IAAI;IACtE,MAAM,UAAU,IAAI,OAAO,CAAC,OAAO;IACnC,MAAM,oBAAoB,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB;IACvE,IAAI,YAAY,MAAM,GAAG,mBAAmB;QAC1C,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,kBAAkB;QAC9C;IACF;IACA,MAAM,oBAAoB,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB;IACvE,IAAI,YAAY,MAAM,GAAG,mBAAmB;QAC1C,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,iBAAiB;QAC7C;IACF;IACA,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAC7D,QAAQ,IAAI,CAAC,EAAE;IAEjB,MAAM,UAAU,SAAS,IAAI,CAC3B,CAAC,WAAa,SAAS,UAAU,KAAK,gBAAgB,SAAS,QAAQ;IAEzE,IAAI,CAAC,WAAW,CAAC,QAAQ,QAAQ,EAAE;QACjC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,4BAA4B;QACxD;IACF;IACA,MAAM,eAAe,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;IACrD,MAAM,SAAS,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC/C,MAAM,QAAQ,QAAQ;QACtB,UAAU;IACZ;IACA,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,gBAAgB;QAC5C;IACF;IACA,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE;QAC1D,UAAU;IACZ;IACA,IAAI,QAAQ;IACZ,IAAI,qBAAqB;QACvB,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,EAAE;QAChE,MAAM,aAAa,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAChE,QAAQ,IAAI,CAAC,EAAE,EACf;QAEF,IAAI,CAAC,YAAY;YACf,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,yBAAyB;gBAC1C,SAAS,yXAAA,CAAA,mBAAgB,CAAC,qBAAqB;YACjD;QACF;QACA,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,KAAK;YAC1B,SAAS;YACT,MAAM,QAAQ,IAAI;QACpB;QACA,QAAQ,WAAW,KAAK;IAC1B;IACA,OAAO,IAAI,IAAI,CAAC;QACd;QACA,MAAM;YACJ,IAAI,QAAQ,IAAI,CAAC,EAAE;YACnB,OAAO,QAAQ,IAAI,CAAC,KAAK;YACzB,MAAM,QAAQ,IAAI,CAAC,IAAI;YACvB,OAAO,QAAQ,IAAI,CAAC,KAAK;YACzB,eAAe,QAAQ,IAAI,CAAC,aAAa;YACzC,WAAW,QAAQ,IAAI,CAAC,SAAS;YACjC,WAAW,QAAQ,IAAI,CAAC,SAAS;QACnC;IACF;AACF;AAEF,MAAM,cAAc,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACnC,iBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;OAEC,GACD,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf;IACF;IACA,UAAU;QACR,aAAa;IACf;IACA,KAAK;QAAC,iYAAA,CAAA,IAA0B;KAAC;AACnC,GACA,OAAO;IACL,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,IAAI;IAChC,MAAM,UAAU,IAAI,OAAO,CAAC,OAAO;IACnC,MAAM,oBAAoB,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB;IACvE,IAAI,YAAY,MAAM,GAAG,mBAAmB;QAC1C,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,kBAAkB;QAC9C;IACF;IACA,MAAM,oBAAoB,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB;IACvE,IAAI,YAAY,MAAM,GAAG,mBAAmB;QAC1C,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,iBAAiB;QAC7C;IACF;IACA,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAC7D,QAAQ,IAAI,CAAC,EAAE;IAEjB,MAAM,UAAU,SAAS,IAAI,CAC3B,CAAC,WAAa,SAAS,UAAU,KAAK,gBAAgB,SAAS,QAAQ;IAEzE,MAAM,eAAe,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;IACrD,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,WAAW,CAC3C;YACE,QAAQ,QAAQ,IAAI,CAAC,EAAE;YACvB,YAAY;YACZ,WAAW,QAAQ,IAAI,CAAC,EAAE;YAC1B,UAAU;QACZ,GACA;QAEF,OAAO,IAAI,IAAI,CAAC;YACd,QAAQ;QACV;IACF;IACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;QAChC,SAAS;IACX;AACF;AAEF,MAAM,aAAa,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAClC,gBACA;IACE,QAAQ;IACR,KAAK;QAAC,iYAAA,CAAA,IAA0B;KAAC;IACjC,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;;OAGC,GACD,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;QACX;;;OAGC,GACD,UAAU,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACxB,aAAa;QACf,GAAG,QAAQ;QACX;;OAEC,GACD,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACrB,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,SAAS;wCACP,MAAM;wCACN,aAAa;oCACf;oCACA,SAAS;wCACP,MAAM;wCACN,MAAM;4CAAC;4CAAgB;yCAA0B;wCACjD,aAAa;oCACf;gCACF;gCACA,UAAU;oCAAC;oCAAW;iCAAU;4BAClC;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,SAAS;QAClD,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CACtB;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC;IACrB;IACA,MAAM,UAAU,IAAI,OAAO,CAAC,OAAO;IACnC,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;QACrB,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAC7D,QAAQ,IAAI,CAAC,EAAE;QAEjB,MAAM,UAAU,SAAS,IAAI,CAC3B,CAAC,WAAa,SAAS,UAAU,KAAK,gBAAgB,SAAS,QAAQ;QAEzE,IAAI,CAAC,WAAW,CAAC,QAAQ,QAAQ,EAAE;YACjC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;gBAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,4BAA4B;YACxD;QACF;QACA,MAAM,SAAS,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC/C,MAAM,QAAQ,QAAQ;YACtB,UAAU,IAAI,IAAI,CAAC,QAAQ;QAC7B;QACA,IAAI,CAAC,QAAQ;YACX,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;gBAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,gBAAgB;YAC5C;QACF;IACF;IACA,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;QAClB,MAAM,mBAAmB;YACvB,GAAG,GAAG;YACN,OAAO;gBACL,OAAO,IAAI,IAAI,CAAC,KAAK;YACvB;QACF;QACA,OAAO,IAAI,IAAI,CAAC;YACd,SAAS;YACT,SAAS;QACX;IACF;IACA,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,+BAA+B;QACtE,MAAM,QAAQ,CAAA,GAAA,iYAAA,CAAA,IAAoB,AAAD,EAAE,IAAI,OAAO;QAC9C,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,uBAAuB,CACvD;YACE,OAAO,QAAQ,IAAI,CAAC,EAAE;YACtB,YAAY,CAAC,eAAe,EAAE,OAAO;YACrC,WAAW,IAAI,KACb,KAAK,GAAG,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,wBAAwB,KAAK,KAAK,EAAE,IAAI;QAE/F,GACA;QAEF,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,4BAA4B,EAAE,MAAM,aAAa,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK;QACnH,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,6BAA6B,CACrE;YACE,MAAM,QAAQ,IAAI;YAClB;YACA;QACF,GACA,IAAI,OAAO;QAEb,OAAO,IAAI,IAAI,CAAC;YACd,SAAS;YACT,SAAS;QACX;IACF;IACA,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,OAAO,CAAC,aAAa,CAAC,QAAQ,KAAK,GAAG;QAClE,MAAM,aAAa,IAAI,KAAK,QAAQ,OAAO,CAAC,SAAS,EAAE,OAAO;QAC9D,MAAM,WAAW,IAAI,OAAO,CAAC,aAAa,CAAC,QAAQ,GAAG;QACtD,MAAM,MAAM,KAAK,GAAG;QACpB,IAAI,MAAM,aAAa,WAAW,KAAK;YACrC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;gBAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,eAAe;YAC3C;QACF;IACF;IACA,MAAM,eAAe,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE;IAC1D,IAAI,cAAc;QAChB,MAAM,aAAa,QAAQ,IAAI,EAAE,IAAI,OAAO;IAC9C;IACA,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,IAAI,CAAC,EAAE;IAC5D,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,EAAE;IAChE,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,EAAE;IAChE,CAAA,GAAA,iYAAA,CAAA,IAAmB,AAAD,EAAE;IACpB,MAAM,cAAc,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE;IACzD,IAAI,aAAa;QACf,MAAM,YAAY,QAAQ,IAAI,EAAE,IAAI,OAAO;IAC7C;IACA,OAAO,IAAI,IAAI,CAAC;QACd,SAAS;QACT,SAAS;IACX;AACF;AAEF,MAAM,qBAAqB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAC1C,yBACA;IACE,QAAQ;IACR,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACd,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACrB,aAAa;QACf;QACA,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;IACb;IACA,KAAK;QAAC,YAAY,CAAC,MAAQ,IAAI,KAAK,CAAC,WAAW;KAAE;IAClD,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,SAAS;wCACP,MAAM;wCACN,aAAa;oCACf;oCACA,SAAS;wCACP,MAAM;wCACN,MAAM;4CAAC;yCAAe;wCACtB,aAAa;oCACf;gCACF;gCACA,UAAU;oCAAC;oCAAW;iCAAU;4BAClC;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,YAAY,SAAS;QAClD,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CACtB;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC;IACrB;IACA,MAAM,UAAU,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAiB,AAAD,EAAE;IACxC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;YAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,uBAAuB;QACnD;IACF;IACA,MAAM,QAAQ,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,qBAAqB,CACnE,CAAC,eAAe,EAAE,IAAI,KAAK,CAAC,KAAK,EAAE;IAErC,IAAI,CAAC,SAAS,MAAM,SAAS,GAAG,aAAa,GAAG,IAAI,QAAQ;QAC1D,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;YAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,aAAa;QACzC;IACF;IACA,IAAI,MAAM,KAAK,KAAK,QAAQ,IAAI,CAAC,EAAE,EAAE;QACnC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;YAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,aAAa;QACzC;IACF;IACA,MAAM,eAAe,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE;IAC1D,IAAI,cAAc;QAChB,MAAM,aAAa,QAAQ,IAAI,EAAE,IAAI,OAAO;IAC9C;IACA,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,IAAI,CAAC,EAAE;IAC5D,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,EAAE;IAChE,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,EAAE;IAChE,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,uBAAuB,CAAC,MAAM,EAAE;IAClE,CAAA,GAAA,iYAAA,CAAA,IAAmB,AAAD,EAAE;IACpB,MAAM,cAAc,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE;IACzD,IAAI,aAAa;QACf,MAAM,YAAY,QAAQ,IAAI,EAAE,IAAI,OAAO;IAC7C;IACA,IAAI,IAAI,KAAK,CAAC,WAAW,EAAE;QACzB,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,CAAC,WAAW,IAAI;IAC9C;IACA,OAAO,IAAI,IAAI,CAAC;QACd,SAAS;QACT,SAAS;IACX;AACF;AAEF,MAAM,cAAc,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACnC,iBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb,UAAU,CAAA,GAAA,gMAAA,CAAA,QAAO,AAAD,IAAI,IAAI,CAAC;YACvB,aAAa;QACf;QACA,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;IACb;IACA,KAAK;QAAC,iYAAA,CAAA,IAA0B;KAAC;IACjC,UAAU;QACR,SAAS;YACP,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,QAAQ;wCACN,MAAM;wCACN,aAAa;oCACf;oCACA,SAAS;wCACP,MAAM;wCACN,MAAM;4CAAC;4CAAiB;yCAA0B;wCAClD,aAAa;wCACb,UAAU;oCACZ;gCACF;gCACA,UAAU;oCAAC;iCAAS;4BACtB;wBACF;oBACF;gBACF;gBACA,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,SAAS;wCACP,MAAM;oCACR;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,aAAa,SAAS;QACnD,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW;IAC9C,IAAI,aAAa,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE;QAC/C,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,eAAe,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC;IACvE,IAAI,cAAc;QAChB,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,KAAK,MAAM;QACnD,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,eAAe,CAAC;QACnE,IAAI,UAAU;YACZ,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,wBAAwB;gBACzC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,qCAAqC;YACjE;QACF;QACA,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,iBAAiB,CACjD,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAC9B;YACE,OAAO;QACT,GACA;QAEF,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAgB,AAAD,EAAE,KAAK;YAC1B,SAAS,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO;YACpC,MAAM;gBACJ,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI;gBAC3B,OAAO;YACT;QACF;QACA,IAAI,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,uBAAuB;YAChE,MAAM,SAAS,MAAM,6BACnB,IAAI,OAAO,CAAC,MAAM,EAClB,UACA,KAAK,GACL,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE;YAEzC,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,OAAO,aAAa,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK;YAC7G,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,qBAAqB,CAC/D;gBACE,MAAM;oBACJ,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI;oBAC3B,OAAO;gBACT;gBACA,KAAK;gBACL,OAAO;YACT,GACA,IAAI,OAAO;QAEf;QACA,OAAO,IAAI,IAAI,CAAC;YACd,QAAQ;QACV;IACF;IACA,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,2BAA2B,EAAE;QACrE,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACzB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,QAAQ,MAAM,6BAClB,IAAI,OAAO,CAAC,MAAM,EAClB,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAC9B,UACA,IAAI,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE;IAEzC,MAAM,MAAM,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,oBAAoB,EAAE,MAAM,aAAa,EAAE,IAAI,IAAI,CAAC,WAAW,IAAI,KAAK;IAC3G,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,2BAA2B,CACpE;QACE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI;QAC9B;QACA;QACA;IACF,GACA,IAAI,OAAO;IAEb,OAAO,IAAI,IAAI,CAAC;QACd,QAAQ;IACV;AACF;AAGF,SAAS,SAAS,KAAK;IACrB,OAAO,MAAM,OAAO,CAAC,MAAM,SAAS,OAAO,CAAC,MAAM,QAAQ,OAAO,CAAC,MAAM,QAAQ,OAAO,CAAC,MAAM,UAAU,OAAO,CAAC,MAAM;AACxH;AACA,MAAM,OAAO,CAAC,YAAY,SAAS,GAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iEA6EwB,EAAE,SACjE,WACA;;;OAGK,CAAC;AACR,MAAM,QAAQ,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAC7B,UACA;IACE,QAAQ;IACR,UAAU;QACR,GAAG,aAAa;QAChB,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,aAAa;4BACX,QAAQ;gCACN,MAAM;gCACN,aAAa;4BACf;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,QAAQ,IAAI,IAAI,EAAE,OAAO,EAAE,OAAO,IAAI,YAAY,CAAC,GAAG,CAAC,YAAY;IACzE,OAAO,IAAI,SAAS,KAAK,QAAQ;QAC/B,SAAS;YACP,gBAAgB;QAClB;IACF;AACF;AAGF,MAAM,KAAK,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EAC1B,OACA;IACE,QAAQ;IACR,UAAU;QACR,GAAG,aAAa;QAChB,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,IAAI;wCACF,MAAM;wCACN,aAAa;oCACf;gCACF;gCACA,UAAU;oCAAC;iCAAK;4BAClB;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,OAAO,IAAI,IAAI,CAAC;QACd,IAAI;IACN;AACF;AAGF,MAAM,mBAAmB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACxC,kBACA;IACE,QAAQ;IACR,KAAK;QAAC,iYAAA,CAAA,IAAiB;KAAC;IACxB,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,OAAO;oCACL,MAAM;oCACN,YAAY;wCACV,IAAI;4CACF,MAAM;wCACR;wCACA,YAAY;4CACV,MAAM;wCACR;wCACA,WAAW;4CACT,MAAM;4CACN,QAAQ;wCACV;wCACA,WAAW;4CACT,MAAM;4CACN,QAAQ;wCACV;wCACA,WAAW;4CACT,MAAM;wCACR;wCACA,QAAQ;4CACN,MAAM;4CACN,OAAO;gDACL,MAAM;4CACR;wCACF;oCACF;oCACA,UAAU;wCACR;wCACA;wCACA;wCACA;wCACA;wCACA;qCACD;gCACH;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,UAAU,EAAE,OAAO,CAAC,OAAO;IACjC,MAAM,WAAW,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,YAAY,CAC3D,QAAQ,IAAI,CAAC,EAAE;IAEjB,OAAO,EAAE,IAAI,CACX,SAAS,GAAG,CAAC,CAAC,IAAM,CAAC;YACnB,IAAI,EAAE,EAAE;YACR,YAAY,EAAE,UAAU;YACxB,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE,SAAS;YACtB,WAAW,EAAE,SAAS;YACtB,QAAQ,EAAE,KAAK,EAAE,MAAM,QAAQ,EAAE;QACnC,CAAC;AAEL;AAEF,MAAM,oBAAoB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACzC,gBACA;IACE,QAAQ;IACR,gBAAgB;IAChB,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb;;OAEC,GACD,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC3B,aAAa;QACf,GAAG,QAAQ;QACX;;OAEC,GACD,UAAU,uYAAA,CAAA,yBAAsB;QAChC;;OAEC,GACD,SAAS,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;YAChB,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD;YACd,OAAO,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;YAC1B,aAAa,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;YAChC,cAAc,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;YACjC,QAAQ,CAAA,GAAA,gMAAA,CAAA,QAAO,AAAD,EAAE,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,KAAK,QAAQ;QACtC,GAAG,QAAQ;QACX;;OAEC,GACD,eAAe,CAAA,GAAA,gMAAA,CAAA,UAAS,AAAD,IAAI,QAAQ;QACnC;;;;OAIC,GACD,QAAQ,CAAA,GAAA,gMAAA,CAAA,QAAO,AAAD,EAAE,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,KAAK,IAAI,CAAC;YAC/B,aAAa;QACf,GAAG,QAAQ;QACX;;OAEC,GACD,kBAAkB,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAChC,aAAa;QACf,GAAG,QAAQ;QACX;;;;;OAKC,GACD,iBAAiB,CAAA,GAAA,gMAAA,CAAA,UAAS,AAAD,IAAI,IAAI,CAAC;YAChC,aAAa;QACf,GAAG,QAAQ;IACb;IACA,KAAK;QAAC,iYAAA,CAAA,IAAiB;KAAC;IACxB,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,KAAK;wCACH,MAAM;wCACN,aAAa;oCACf;oCACA,UAAU;wCACR,MAAM;wCACN,aAAa;oCACf;oCACA,QAAQ;wCACN,MAAM;oCACR;gCACF;gCACA,UAAU;oCAAC;iCAAW;4BACxB;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,UAAU,EAAE,OAAO,CAAC,OAAO;IACjC,MAAM,WAAW,EAAE,OAAO,CAAC,eAAe,CAAC,IAAI,CAC7C,CAAC,IAAM,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ;IAEjC,IAAI,CAAC,UAAU;QACb,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB,yEACA;YACE,UAAU,EAAE,IAAI,CAAC,QAAQ;QAC3B;QAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;YAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,kBAAkB;QAC9C;IACF;IACA,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE;QAClB,IAAI,CAAC,SAAS,aAAa,EAAE;YAC3B,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CACpB,mDACA;gBACE,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YAEF,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,aAAa;gBAC9B,SAAS,yXAAA,CAAA,mBAAgB,CAAC,sBAAsB;YAClD;QACF;QACA,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO;QACvC,MAAM,QAAQ,MAAM,SAAS,aAAa,CAAC,OAAO;QAClD,IAAI,CAAC,OAAO;YACV,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAoB;gBACzC,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,aAAa;YACzC;QACF;QACA,MAAM,kBAAkB,MAAM,SAAS,WAAW,CAAC;YACjD,SAAS;YACT,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;YACvC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;QAC3C;QACA,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,MAAM;YAC9C,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,2BAA2B;gBAChD,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,uBAAuB;YACnD;QACF;QACA,MAAM,gBAAgB,OAAO,gBAAgB,IAAI,CAAC,EAAE;QACpD,IAAI,CAAC,gBAAgB,IAAI,CAAC,KAAK,EAAE;YAC/B,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,wBAAwB;gBAC7C,UAAU,EAAE,IAAI,CAAC,QAAQ;YAC3B;YACA,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,oBAAoB;YAChD;QACF;QACA,MAAM,mBAAmB,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,YAAY,CACnE,QAAQ,IAAI,CAAC,EAAE;QAEjB,MAAM,gBAAgB,iBAAiB,IAAI,CACzC,CAAC,IAAM,EAAE,UAAU,KAAK,SAAS,EAAE,IAAI,EAAE,SAAS,KAAK;QAEzD,IAAI,eAAe;YACjB,OAAO,EAAE,IAAI,CAAC;gBACZ,KAAK;gBACL,6BAA6B;gBAC7B,QAAQ;gBACR,UAAU;YACZ;QACF;QACA,MAAM,mBAAmB,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB;QACpE,MAAM,oBAAoB,kBAAkB,SAAS,SAAS,EAAE;QAChE,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,IAAI,CAAC,aAAa,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,YAAY,OAAO;YAC7H,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS;YACX;QACF;QACA,IAAI,gBAAgB,IAAI,CAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,yBAAyB,MAAM;YACjI,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,gBAAgB;gBACjC,SAAS;YACX;QACF;QACA,IAAI;YACF,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,aAAa,CAC3C;gBACE,QAAQ,QAAQ,IAAI,CAAC,EAAE;gBACvB,YAAY,SAAS,EAAE;gBACvB,WAAW;gBACX,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW;gBACvC,SAAS;gBACT,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;gBACzC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK;YACrC,GACA;QAEJ,EAAE,OAAO,GAAG;YACV,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,sBAAsB;gBACvC,SAAS;YACX;QACF;QACA,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,yBAAyB,MAAM;YAC5E,IAAI;gBACF,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,QAAQ,IAAI,CAAC,EAAE,EAAE;oBAC1D,MAAM,gBAAgB,IAAI,EAAE;oBAC5B,OAAO,gBAAgB,IAAI,EAAE;gBAC/B;YACF,EAAE,OAAO,GAAG;gBACV,QAAQ,IAAI,CAAC,6BAA6B,EAAE,QAAQ;YACtD;QACF;QACA,OAAO,EAAE,IAAI,CAAC;YACZ,KAAK;YACL,6BAA6B;YAC7B,QAAQ;YACR,UAAU;QACZ;IACF;IACA,MAAM,QAAQ,MAAM,cAAc,GAAG;QACnC,QAAQ,QAAQ,IAAI,CAAC,EAAE;QACvB,OAAO,QAAQ,IAAI,CAAC,KAAK;IAC3B;IACA,MAAM,MAAM,MAAM,SAAS,sBAAsB,CAAC;QAChD,OAAO,MAAM,KAAK;QAClB,cAAc,MAAM,YAAY;QAChC,aAAa,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE;QAC3D,QAAQ,EAAE,IAAI,CAAC,MAAM;IACvB;IACA,OAAO,EAAE,IAAI,CAAC;QACZ,KAAK,IAAI,QAAQ;QACjB,UAAU,CAAC,EAAE,IAAI,CAAC,eAAe;IACnC;AACF;AAEF,MAAM,gBAAgB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACrC,mBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb,YAAY,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD;QACnB,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,QAAQ;IAChC;IACA,KAAK;QAAC,iYAAA,CAAA,IAAsB;KAAC;IAC7B,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,QAAQ;wCACN,MAAM;oCACR;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,IAAI,IAAI;IAC1C,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAC7D,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;IAE7B,IAAI,SAAS,MAAM,KAAK,KAAK,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,gBAAgB,mBAAmB;QAC5F,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,6BAA6B;QACzD;IACF;IACA,MAAM,eAAe,SAAS,IAAI,CAChC,CAAC,UAAY,YAAY,QAAQ,SAAS,KAAK,aAAa,QAAQ,UAAU,KAAK,aAAa,QAAQ,UAAU,KAAK;IAEzH,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,yXAAA,CAAA,mBAAgB,CAAC,iBAAiB;QAC7C;IACF;IACA,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC,aAAa,EAAE;IAC/D,OAAO,IAAI,IAAI,CAAC;QACd,QAAQ;IACV;AACF;AAEF,MAAM,iBAAiB,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACtC,qBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb,YAAY,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC1B,aAAa;QACf;QACA,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACzB,aAAa;QACf,GAAG,QAAQ;QACX,QAAQ,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACtB,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,KAAK;oBACH,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,WAAW;wCACT,MAAM;oCACR;oCACA,SAAS;wCACP,MAAM;oCACR;oCACA,aAAa;wCACX,MAAM;oCACR;oCACA,cAAc;wCACZ,MAAM;oCACR;oCACA,sBAAsB;wCACpB,MAAM;wCACN,QAAQ;oCACV;oCACA,uBAAuB;wCACrB,MAAM;wCACN,QAAQ;oCACV;gCACF;4BACF;wBACF;oBACF;gBACF;gBACA,KAAK;oBACH,aAAa;gBACf;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI;IAClD,MAAM,MAAM,IAAI,OAAO;IACvB,MAAM,UAAU,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAiB,AAAD,EAAE;IACxC,IAAI,OAAO,CAAC,SAAS;QACnB,MAAM,IAAI,KAAK,CAAC;IAClB;IACA,IAAI,iBAAiB,SAAS,MAAM,MAAM;IAC1C,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,CAAC,oCAAoC,CAAC;QACjD;IACF;IACA,IAAI,CAAC,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,aAAa;QACjE,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,CAAC,SAAS,EAAE,WAAW,kBAAkB,CAAC;QACrD;IACF;IACA,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;IAChE,MAAM,UAAU,SAAS,IAAI,CAC3B,CAAC,MAAQ,YAAY,IAAI,EAAE,KAAK,aAAa,IAAI,UAAU,KAAK,aAAa,IAAI,UAAU,KAAK;IAElG,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,WAAW,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,CAC/C,CAAC,IAAM,EAAE,EAAE,KAAK;IAElB,IAAI,CAAC,UAAU;QACb,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,CAAC,SAAS,EAAE,WAAW,WAAW,CAAC;QAC9C;IACF;IACA,IAAI;QACF,IAAI,YAAY;QAChB,MAAM,qBAAqB,QAAQ,oBAAoB,IAAI,IAAI,KAAK,QAAQ,oBAAoB,EAAE,OAAO,KAAK,KAAK,GAAG,KAAK;QAC3H,IAAI,QAAQ,YAAY,IAAI,sBAAsB,SAAS,kBAAkB,EAAE;YAC7E,YAAY,MAAM,SAAS,kBAAkB,CAC3C,QAAQ,YAAY;YAEtB,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE;gBAC1D,aAAa,MAAM,aAAa,UAAU,WAAW,EAAE,IAAI,OAAO;gBAClE,sBAAsB,UAAU,oBAAoB;gBACpD,cAAc,MAAM,aAAa,UAAU,YAAY,EAAE,IAAI,OAAO;gBACpE,uBAAuB,UAAU,qBAAqB;YACxD;QACF;QACA,MAAM,SAAS;YACb,aAAa,MAAM,kBACjB,WAAW,eAAe,QAAQ,WAAW,IAAI,IACjD,IAAI,OAAO;YAEb,sBAAsB,WAAW,wBAAwB,QAAQ,oBAAoB,IAAI,KAAK;YAC9F,QAAQ,QAAQ,KAAK,EAAE,MAAM,QAAQ,EAAE;YACvC,SAAS,WAAW,WAAW,QAAQ,OAAO,IAAI,KAAK;QACzD;QACA,OAAO,IAAI,IAAI,CAAC;IAClB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;YACT,OAAO;QACT;IACF;AACF;AAEF,MAAM,eAAe,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACpC,kBACA;IACE,QAAQ;IACR,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb,YAAY,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YAC1B,aAAa;QACf;QACA,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACzB,aAAa;QACf,GAAG,QAAQ;QACX,QAAQ,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACtB,aAAa;QACf,GAAG,QAAQ;IACb;IACA,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,KAAK;oBACH,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,WAAW;wCACT,MAAM;oCACR;oCACA,SAAS;wCACP,MAAM;oCACR;oCACA,aAAa;wCACX,MAAM;oCACR;oCACA,cAAc;wCACZ,MAAM;oCACR;oCACA,sBAAsB;wCACpB,MAAM;wCACN,QAAQ;oCACV;oCACA,uBAAuB;wCACrB,MAAM;wCACN,QAAQ;oCACV;gCACF;4BACF;wBACF;oBACF;gBACF;gBACA,KAAK;oBACH,aAAa;gBACf;YACF;QACF;IACF;AACF,GACA,OAAO;IACL,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI;IAClD,MAAM,MAAM,IAAI,OAAO;IACvB,MAAM,UAAU,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAiB,AAAD,EAAE;IACxC,IAAI,OAAO,CAAC,SAAS;QACnB,MAAM,IAAI,KAAK,CAAC;IAClB;IACA,IAAI,iBAAiB,SAAS,MAAM,MAAM;IAC1C,IAAI,CAAC,gBAAgB;QACnB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,CAAC,oCAAoC,CAAC;QACjD;IACF;IACA,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;IAChE,MAAM,UAAU,SAAS,IAAI,CAC3B,CAAC,MAAQ,YAAY,IAAI,EAAE,KAAK,aAAa,IAAI,UAAU,KAAK,aAAa,IAAI,UAAU,KAAK;IAElG,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,WAAW,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,CAC/C,CAAC,IAAM,EAAE,EAAE,KAAK;IAElB,IAAI,CAAC,UAAU;QACb,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,CAAC,SAAS,EAAE,WAAW,WAAW,CAAC;QAC9C;IACF;IACA,IAAI,CAAC,SAAS,kBAAkB,EAAE;QAChC,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS,CAAC,SAAS,EAAE,WAAW,mCAAmC,CAAC;QACtE;IACF;IACA,IAAI;QACF,MAAM,SAAS,MAAM,SAAS,kBAAkB,CAC9C,QAAQ,YAAY;QAEtB,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE;YAC1D,aAAa,MAAM,aAAa,OAAO,WAAW,EAAE,IAAI,OAAO;YAC/D,cAAc,MAAM,aAAa,OAAO,YAAY,EAAE,IAAI,OAAO;YACjE,sBAAsB,OAAO,oBAAoB;YACjD,uBAAuB,OAAO,qBAAqB;QACrD;QACA,OAAO,IAAI,IAAI,CAAC;IAClB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;YACT,OAAO;QACT;IACF;AACF;AAEF,MAAM,cAAc,CAAA,GAAA,8XAAA,CAAA,qBAAkB,AAAD,EACnC,iBACA;IACE,QAAQ;IACR,KAAK;QAAC,iYAAA,CAAA,IAAiB;KAAC;IACxB,UAAU;QACR,SAAS;YACP,aAAa;YACb,WAAW;gBACT,OAAO;oBACL,aAAa;oBACb,SAAS;wBACP,oBAAoB;4BAClB,QAAQ;gCACN,MAAM;gCACN,YAAY;oCACV,MAAM;wCACJ,MAAM;wCACN,YAAY;4CACV,IAAI;gDACF,MAAM;4CACR;4CACA,MAAM;gDACJ,MAAM;4CACR;4CACA,OAAO;gDACL,MAAM;4CACR;4CACA,OAAO;gDACL,MAAM;4CACR;4CACA,eAAe;gDACb,MAAM;4CACR;wCACF;wCACA,UAAU;4CAAC;4CAAM;yCAAgB;oCACnC;oCACA,MAAM;wCACJ,MAAM;wCACN,YAAY,CAAC;wCACb,sBAAsB;oCACxB;gCACF;gCACA,UAAU;oCAAC;oCAAQ;iCAAO;gCAC1B,sBAAsB;4BACxB;wBACF;oBACF;gBACF;YACF;QACF;IACF;IACA,MAAM,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,EAAE;QACb,WAAW,CAAA,GAAA,gMAAA,CAAA,SAAQ,AAAD,IAAI,IAAI,CAAC;YACzB,aAAa;QACf;IACF;AACF,GACA,OAAO;IACL,MAAM,UAAU,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,WAAW,CAC3D,IAAI,IAAI,CAAC,SAAS;IAEpB,IAAI,CAAC,WAAW,QAAQ,MAAM,KAAK,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE;QAC9D,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,WAAW,IAAI,OAAO,CAAC,eAAe,CAAC,IAAI,CAC/C,CAAC,IAAM,EAAE,EAAE,KAAK,QAAQ,UAAU;IAEpC,IAAI,CAAC,UAAU;QACb,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,yBAAyB;YAC1C,SAAS,CAAC,6BAA6B,EAAE,QAAQ,UAAU,CAAC,yBAAyB,CAAC;QACxF;IACF;IACA,MAAM,SAAS,MAAM,eAAe;QAClC,GAAG,GAAG;QACN,MAAM;YACJ,WAAW,QAAQ,EAAE;YACrB,YAAY,QAAQ,UAAU;QAChC;QACA,eAAe;IACjB;IACA,IAAI,CAAC,OAAO,WAAW,EAAE;QACvB,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,OAAO,MAAM,SAAS,WAAW,CAAC;QACtC,GAAG,MAAM;QACT,aAAa,OAAO,WAAW;IACjC;IACA,OAAO,IAAI,IAAI,CAAC;AAClB;AAGF,MAAM,oBAAoB,CAAA,GAAA,sLAAA,CAAA,aAAU,AAAD,EAAE,CAAC,KAAK,KAAK;IAC9C,IAAI,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,OAAO,CAAC,QAAQ;QACnD,GAAG,CAAC,IAAI,GAAG;QACX,OAAO;IACT;AACF;AACA,SAAS,gBAAgB,SAAS,EAAE,GAAG;IACrC,MAAM,MAAM,CAAC;IACb,KAAK,MAAM,CAAC,KAAK,SAAS,IAAI,OAAO,OAAO,CAAC,WAAY;QACvD,GAAG,CAAC,IAAI,GAAG,OAAO;YAChB,MAAM,cAAc,MAAM;YAC1B,IAAI,kBAAkB;gBACpB,GAAG,OAAO;gBACV,SAAS;oBACP,GAAG,WAAW;oBACd,UAAU,KAAK;oBACf,iBAAiB,KAAK;oBACtB,SAAS;gBACX;gBACA,MAAM,SAAS,IAAI;gBACnB,SAAS,SAAS,UAAU,IAAI,QAAQ,SAAS,WAAW,KAAK;YACnE;YACA,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,SAAS;YAC7C,MAAM,SAAS,MAAM,eAAe,iBAAiB;YACrD,IAAI,aAAa,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,OAAO,KAAK,UAAU;gBAC/E,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,GAAG,OAAO,OAAO;gBAC3C,IAAI,SAAS;oBACX,QAAQ,OAAO,CAAC,CAAC,OAAO;wBACtB,gBAAgB,OAAO,CAAC,GAAG,CAAC,MAAM;oBACpC;gBACF;gBACA,kBAAkB,kBAAkB,MAAM;YAC5C,OAAO,IAAI,QAAQ;gBACjB,OAAO,SAAS,aAAa,CAAA,GAAA,2MAAA,CAAA,aAAU,AAAD,EAAE,QAAQ;oBAC9C,SAAS,SAAS;gBACpB,KAAK,SAAS,gBAAgB;oBAC5B,SAAS,SAAS;oBAClB,UAAU;gBACZ,IAAI;YACN;YACA,gBAAgB,UAAU,GAAG;YAC7B,gBAAgB,aAAa,GAAG;YAChC,MAAM,SAAS,MAAM,SAAS,iBAAiB,KAAK,CAAC,CAAC;gBACpD,IAAI,aAAa,2MAAA,CAAA,WAAQ,EAAE;oBACzB,OAAO;wBACL,UAAU;wBACV,SAAS,EAAE,OAAO,GAAG,IAAI,QAAQ,EAAE,OAAO,IAAI;oBAChD;gBACF;gBACA,MAAM;YACR;YACA,IAAI,UAAU,kBAAkB,UAAU;gBACxC,OAAO;YACT;YACA,gBAAgB,OAAO,CAAC,QAAQ,GAAG,OAAO,QAAQ;YAClD,gBAAgB,OAAO,CAAC,eAAe,GAAG,OAAO,OAAO;YACxD,MAAM,QAAQ,MAAM,cAAc,iBAAiB;YACnD,IAAI,MAAM,QAAQ,EAAE;gBAClB,OAAO,QAAQ,GAAG,MAAM,QAAQ;YAClC;YACA,IAAI,OAAO,QAAQ,YAAY,2MAAA,CAAA,WAAQ,IAAI,CAAA,GAAA,uXAAA,CAAA,mBAAgB,AAAD,EAAE,YAAY,MAAM,CAAC,KAAK,EAAE,UAAU;gBAC9F,OAAO,QAAQ,CAAC,KAAK,GAAG,OAAO,QAAQ,CAAC,UAAU;YACpD;YACA,IAAI,OAAO,QAAQ,YAAY,2MAAA,CAAA,WAAQ,IAAI,CAAC,SAAS,YAAY;gBAC/D,MAAM,OAAO,QAAQ;YACvB;YACA,MAAM,WAAW,SAAS,aAAa,CAAA,GAAA,2MAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ,EAAE;gBACjE,SAAS,OAAO,OAAO;YACzB,KAAK,SAAS,gBAAgB;gBAC5B,SAAS,OAAO,OAAO;gBACvB,UAAU,OAAO,QAAQ;YAC3B,IAAI,OAAO,QAAQ;YACnB,OAAO;QACT;QACA,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,IAAI;QAC7B,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,OAAO;IACrC;IACA,OAAO;AACT;AACA,eAAe,eAAe,OAAO,EAAE,KAAK;IAC1C,IAAI,kBAAkB,CAAC;IACvB,KAAK,MAAM,QAAQ,MAAO;QACxB,IAAI,KAAK,OAAO,CAAC,UAAU;YACzB,MAAM,SAAS,MAAM,KAAK,OAAO,CAAC;gBAChC,GAAG,OAAO;gBACV,eAAe;YACjB,GAAG,KAAK,CAAC,CAAC;gBACR,IAAI,aAAa,2MAAA,CAAA,WAAQ,IAAI,CAAA,GAAA,uXAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU;oBACpF,EAAE,KAAK,GAAG,EAAE,UAAU;gBACxB;gBACA,MAAM;YACR;YACA,IAAI,UAAU,OAAO,WAAW,UAAU;gBACxC,IAAI,aAAa,UAAU,OAAO,OAAO,OAAO,KAAK,UAAU;oBAC7D,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,GAAG,OAAO,OAAO;oBAC3C,IAAI,mBAAmB,SAAS;wBAC9B,IAAI,gBAAgB,OAAO,EAAE;4BAC3B,QAAQ,OAAO,CAAC,CAAC,OAAO;gCACtB,gBAAgB,OAAO,EAAE,IAAI,KAAK;4BACpC;wBACF,OAAO;4BACL,gBAAgB,OAAO,GAAG;wBAC5B;oBACF;oBACA,kBAAkB,kBAAkB,MAAM;oBAC1C;gBACF;gBACA,OAAO;YACT;QACF;IACF;IACA,OAAO;QAAE,SAAS;IAAgB;AACpC;AACA,eAAe,cAAc,OAAO,EAAE,KAAK;IACzC,KAAK,MAAM,QAAQ,MAAO;QACxB,IAAI,KAAK,OAAO,CAAC,UAAU;YACzB,MAAM,SAAS,MAAM,KAAK,OAAO,CAAC,SAAS,KAAK,CAAC,CAAC;gBAChD,IAAI,aAAa,2MAAA,CAAA,WAAQ,EAAE;oBACzB,IAAI,CAAA,GAAA,uXAAA,CAAA,mBAAgB,AAAD,EAAE,QAAQ,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU;wBAC3D,EAAE,KAAK,GAAG,EAAE,UAAU;oBACxB;oBACA,OAAO;wBACL,UAAU;wBACV,SAAS,EAAE,OAAO,GAAG,IAAI,QAAQ,EAAE,OAAO,IAAI;oBAChD;gBACF;gBACA,MAAM;YACR;YACA,IAAI,OAAO,OAAO,EAAE;gBAClB,OAAO,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO;oBAC7B,IAAI,CAAC,QAAQ,OAAO,CAAC,eAAe,EAAE;wBACpC,QAAQ,OAAO,CAAC,eAAe,GAAG,IAAI,QAAQ;4BAC5C,CAAC,IAAI,EAAE;wBACT;oBACF,OAAO;wBACL,IAAI,IAAI,WAAW,OAAO,cAAc;4BACtC,QAAQ,OAAO,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK;wBAC9C,OAAO;4BACL,QAAQ,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK;wBAC3C;oBACF;gBACF;YACF;YACA,IAAI,OAAO,QAAQ,EAAE;gBACnB,QAAQ,OAAO,CAAC,QAAQ,GAAG,OAAO,QAAQ;YAC5C;QACF;IACF;IACA,OAAO;QACL,UAAU,QAAQ,OAAO,CAAC,QAAQ;QAClC,SAAS,QAAQ,OAAO,CAAC,eAAe;IAC1C;AACF;AACA,SAAS,SAAS,WAAW;IAC3B,MAAM,UAAU,YAAY,OAAO,CAAC,OAAO,IAAI,EAAE;IACjD,MAAM,cAAc,EAAE;IACtB,MAAM,aAAa,EAAE;IACrB,IAAI,YAAY,OAAO,CAAC,KAAK,EAAE,QAAQ;QACrC,YAAY,IAAI,CAAC;YACf,SAAS,IAAM;YACf,SAAS,YAAY,OAAO,CAAC,KAAK,CAAC,MAAM;QAC3C;IACF;IACA,IAAI,YAAY,OAAO,CAAC,KAAK,EAAE,OAAO;QACpC,WAAW,IAAI,CAAC;YACd,SAAS,IAAM;YACf,SAAS,YAAY,OAAO,CAAC,KAAK,CAAC,KAAK;QAC1C;IACF;IACA,MAAM,oBAAoB,QAAQ,GAAG,CAAC,CAAC;QACrC,IAAI,OAAO,KAAK,EAAE,QAAQ;YACxB,OAAO,OAAO,KAAK,CAAC,MAAM;QAC5B;IACF,GAAG,MAAM,CAAC,CAAC,SAAW,WAAW,KAAK,GAAG,IAAI;IAC7C,MAAM,mBAAmB,QAAQ,GAAG,CAAC,CAAC;QACpC,IAAI,OAAO,KAAK,EAAE,OAAO;YACvB,OAAO,OAAO,KAAK,CAAC,KAAK;QAC3B;IACF,GAAG,MAAM,CAAC,CAAC,SAAW,WAAW,KAAK,GAAG,IAAI;IAC7C,kBAAkB,MAAM,IAAI,YAAY,IAAI,IAAI;IAChD,iBAAiB,MAAM,IAAI,WAAW,IAAI,IAAI;IAC9C,OAAO;QACL;QACA;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4874, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.ClH5r3NH.mjs"],"sourcesContent":["import { isTest, isDevelopment } from '@better-auth/core/env';\nimport { z } from 'zod';\n\nfunction getIp(req, options) {\n  if (options.advanced?.ipAddress?.disableIpTracking) {\n    return null;\n  }\n  if (isTest()) {\n    return \"127.0.0.1\";\n  }\n  if (isDevelopment()) {\n    return \"127.0.0.1\";\n  }\n  const headers = \"headers\" in req ? req.headers : req;\n  const defaultHeaders = [\"x-forwarded-for\"];\n  const ipHeaders = options.advanced?.ipAddress?.ipAddressHeaders || defaultHeaders;\n  for (const key of ipHeaders) {\n    const value = \"get\" in headers ? headers.get(key) : headers[key];\n    if (typeof value === \"string\") {\n      const ip = value.split(\",\")[0].trim();\n      if (isValidIP(ip)) {\n        return ip;\n      }\n    }\n  }\n  return null;\n}\nfunction isValidIP(ip) {\n  const ipv4 = z.ipv4().safeParse(ip);\n  if (ipv4.success) {\n    return true;\n  }\n  const ipv6 = z.ipv6().safeParse(ip);\n  if (ipv6.success) {\n    return true;\n  }\n  return false;\n}\n\nexport { getIp as g };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,SAAS,MAAM,GAAG,EAAE,OAAO;IACzB,IAAI,QAAQ,QAAQ,EAAE,WAAW,mBAAmB;QAClD,OAAO;IACT;IACA,IAAI,CAAA,GAAA,uXAAA,CAAA,SAAM,AAAD,KAAK;QACZ,OAAO;IACT;IACA,IAAI,CAAA,GAAA,uXAAA,CAAA,gBAAa,AAAD,KAAK;QACnB,OAAO;IACT;IACA,MAAM,UAAU,aAAa,MAAM,IAAI,OAAO,GAAG;IACjD,MAAM,iBAAiB;QAAC;KAAkB;IAC1C,MAAM,YAAY,QAAQ,QAAQ,EAAE,WAAW,oBAAoB;IACnE,KAAK,MAAM,OAAO,UAAW;QAC3B,MAAM,QAAQ,SAAS,UAAU,QAAQ,GAAG,CAAC,OAAO,OAAO,CAAC,IAAI;QAChE,IAAI,OAAO,UAAU,UAAU;YAC7B,MAAM,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;YACnC,IAAI,UAAU,KAAK;gBACjB,OAAO;YACT;QACF;IACF;IACA,OAAO;AACT;AACA,SAAS,UAAU,EAAE;IACnB,MAAM,OAAO,8NAAA,CAAA,IAAC,CAAC,IAAI,GAAG,SAAS,CAAC;IAChC,IAAI,KAAK,OAAO,EAAE;QAChB,OAAO;IACT;IACA,MAAM,OAAO,8NAAA,CAAA,IAAC,CAAC,IAAI,GAAG,SAAS,CAAC;IAChC,IAAI,KAAK,OAAO,EAAE;QAChB,OAAO;IACT;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4923, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/api/index.mjs"],"sourcesContent":["import { APIError, createRouter } from 'better-call';\nexport { APIError } from 'better-call';\nimport { c as createEmailVerificationToken, w as wildcardMatch, u as updateUser, t as toAuthEndpoints, a as originCheckMiddleware, e as error, b as ok, f as accountInfo, i as getAccessToken, r as refreshToken, j as unlinkAccount, k as deleteUserCallback, l as listUserAccounts, m as linkSocialAccount, n as requestPasswordResetCallback, q as requestPasswordReset, v as forgetPasswordCallback, x as deleteUser, y as setPassword, z as changePassword, A as changeEmail, B as sendVerificationEmail, C as verifyEmail, D as resetPassword, E as forgetPassword, F as signInEmail, G as signOut, I as callbackOAuth, J as signInSocial } from '../shared/better-auth.zbFvKBO6.mjs';\nexport { L as isSimpleRequest, o as originCheck, K as sendVerificationEmailFn } from '../shared/better-auth.zbFvKBO6.mjs';\nimport { l as listSessions, a as getSession, r as revokeOtherSessions, b as revokeSessions, c as revokeSession } from '../shared/better-auth.DEBtROF9.mjs';\nexport { f as freshSessionMiddleware, g as getSessionFromCtx, d as getSessionQuerySchema, h as requestOnlySessionMiddleware, e as sensitiveSessionMiddleware, s as sessionMiddleware } from '../shared/better-auth.DEBtROF9.mjs';\nimport * as z from 'zod';\nimport { createAuthEndpoint } from '@better-auth/core/middleware';\nexport { createAuthEndpoint, createAuthMiddleware, optionsMiddleware } from '@better-auth/core/middleware';\nimport { s as setSessionCookie } from '../shared/better-auth.D9_vQR83.mjs';\nimport { BASE_ERROR_CODES } from '@better-auth/core/error';\nimport { isDevelopment, logger } from '@better-auth/core/env';\nimport '@better-auth/core/db';\nimport { d as parseUserInput } from '../shared/better-auth.Cwj9dt6i.mjs';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport '../shared/better-auth.B4Qoxdgc.mjs';\nimport 'kysely';\nimport { s as safeJSONParse } from '../shared/better-auth.BKEtEpt0.mjs';\nimport { g as getIp } from '../shared/better-auth.ClH5r3NH.mjs';\nimport '@better-auth/core/social-providers';\nimport '../shared/better-auth.CW6D9eSx.mjs';\nimport '../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport 'defu';\nimport '../crypto/index.mjs';\nimport '../shared/better-auth.DR3R5wdU.mjs';\nimport 'jose/errors';\nimport '../shared/better-auth.Ih8C76Vo.mjs';\n\nconst signUpEmail = () => createAuthEndpoint(\n  \"/sign-up/email\",\n  {\n    method: \"POST\",\n    body: z.record(z.string(), z.any()),\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Sign up a user using email and password\",\n        requestBody: {\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  name: {\n                    type: \"string\",\n                    description: \"The name of the user\"\n                  },\n                  email: {\n                    type: \"string\",\n                    description: \"The email of the user\"\n                  },\n                  password: {\n                    type: \"string\",\n                    description: \"The password of the user\"\n                  },\n                  image: {\n                    type: \"string\",\n                    description: \"The profile image URL of the user\"\n                  },\n                  callbackURL: {\n                    type: \"string\",\n                    description: \"The URL to use for email verification callback\"\n                  },\n                  rememberMe: {\n                    type: \"boolean\",\n                    description: \"If this is false, the session will not be remembered. Default is `true`.\"\n                  }\n                },\n                required: [\"name\", \"email\", \"password\"]\n              }\n            }\n          }\n        },\n        responses: {\n          \"200\": {\n            description: \"Successfully created user\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    token: {\n                      type: \"string\",\n                      nullable: true,\n                      description: \"Authentication token for the session\"\n                    },\n                    user: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\",\n                          description: \"The unique identifier of the user\"\n                        },\n                        email: {\n                          type: \"string\",\n                          format: \"email\",\n                          description: \"The email address of the user\"\n                        },\n                        name: {\n                          type: \"string\",\n                          description: \"The name of the user\"\n                        },\n                        image: {\n                          type: \"string\",\n                          format: \"uri\",\n                          nullable: true,\n                          description: \"The profile image URL of the user\"\n                        },\n                        emailVerified: {\n                          type: \"boolean\",\n                          description: \"Whether the email has been verified\"\n                        },\n                        createdAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was created\"\n                        },\n                        updatedAt: {\n                          type: \"string\",\n                          format: \"date-time\",\n                          description: \"When the user was last updated\"\n                        }\n                      },\n                      required: [\n                        \"id\",\n                        \"email\",\n                        \"name\",\n                        \"emailVerified\",\n                        \"createdAt\",\n                        \"updatedAt\"\n                      ]\n                    }\n                  },\n                  required: [\"user\"]\n                  // token is optional\n                }\n              }\n            }\n          },\n          \"422\": {\n            description: \"Unprocessable Entity. User already exists or failed to create user.\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    message: {\n                      type: \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    if (!ctx.context.options.emailAndPassword?.enabled || ctx.context.options.emailAndPassword?.disableSignUp) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Email and password sign up is not enabled\"\n      });\n    }\n    const body = ctx.body;\n    const { name, email, password, image, callbackURL, rememberMe, ...rest } = body;\n    const isValidEmail = z.email().safeParse(email);\n    if (!isValidEmail.success) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.INVALID_EMAIL\n      });\n    }\n    const minPasswordLength = ctx.context.password.config.minPasswordLength;\n    if (password.length < minPasswordLength) {\n      ctx.context.logger.error(\"Password is too short\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_SHORT\n      });\n    }\n    const maxPasswordLength = ctx.context.password.config.maxPasswordLength;\n    if (password.length > maxPasswordLength) {\n      ctx.context.logger.error(\"Password is too long\");\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.PASSWORD_TOO_LONG\n      });\n    }\n    const dbUser = await ctx.context.internalAdapter.findUserByEmail(email);\n    if (dbUser?.user) {\n      ctx.context.logger.info(`Sign-up attempt for existing email: ${email}`);\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.USER_ALREADY_EXISTS_USE_ANOTHER_EMAIL\n      });\n    }\n    const hash = await ctx.context.password.hash(password);\n    let createdUser;\n    try {\n      const data = parseUserInput(ctx.context.options, rest, \"create\");\n      createdUser = await ctx.context.internalAdapter.createUser(\n        {\n          email: email.toLowerCase(),\n          name,\n          image,\n          ...data,\n          emailVerified: false\n        },\n        ctx\n      );\n      if (!createdUser) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n        });\n      }\n    } catch (e) {\n      if (isDevelopment()) {\n        ctx.context.logger.error(\"Failed to create user\", e);\n      }\n      if (e instanceof APIError) {\n        throw e;\n      }\n      ctx.context.logger?.error(\"Failed to create user\", e);\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER,\n        details: e\n      });\n    }\n    if (!createdUser) {\n      throw new APIError(\"UNPROCESSABLE_ENTITY\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_USER\n      });\n    }\n    await ctx.context.internalAdapter.linkAccount(\n      {\n        userId: createdUser.id,\n        providerId: \"credential\",\n        accountId: createdUser.id,\n        password: hash\n      },\n      ctx\n    );\n    if (ctx.context.options.emailVerification?.sendOnSignUp || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      const token = await createEmailVerificationToken(\n        ctx.context.secret,\n        createdUser.email,\n        void 0,\n        ctx.context.options.emailVerification?.expiresIn\n      );\n      const url = `${ctx.context.baseURL}/verify-email?token=${token}&callbackURL=${body.callbackURL || \"/\"}`;\n      const args = ctx.request ? [\n        {\n          user: createdUser,\n          url,\n          token\n        },\n        ctx.request\n      ] : [\n        {\n          user: createdUser,\n          url,\n          token\n        }\n      ];\n      await ctx.context.options.emailVerification?.sendVerificationEmail?.(\n        ...args\n      );\n    }\n    if (ctx.context.options.emailAndPassword.autoSignIn === false || ctx.context.options.emailAndPassword.requireEmailVerification) {\n      return ctx.json({\n        token: null,\n        user: {\n          id: createdUser.id,\n          email: createdUser.email,\n          name: createdUser.name,\n          image: createdUser.image,\n          emailVerified: createdUser.emailVerified,\n          createdAt: createdUser.createdAt,\n          updatedAt: createdUser.updatedAt\n        }\n      });\n    }\n    const session = await ctx.context.internalAdapter.createSession(\n      createdUser.id,\n      ctx,\n      rememberMe === false\n    );\n    if (!session) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: BASE_ERROR_CODES.FAILED_TO_CREATE_SESSION\n      });\n    }\n    await setSessionCookie(\n      ctx,\n      {\n        session,\n        user: createdUser\n      },\n      rememberMe === false\n    );\n    return ctx.json({\n      token: session.token,\n      user: {\n        id: createdUser.id,\n        email: createdUser.email,\n        name: createdUser.name,\n        image: createdUser.image,\n        emailVerified: createdUser.emailVerified,\n        createdAt: createdUser.createdAt,\n        updatedAt: createdUser.updatedAt\n      }\n    });\n  }\n);\n\nfunction shouldRateLimit(max, window, rateLimitData) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  const timeSinceLastRequest = now - rateLimitData.lastRequest;\n  return timeSinceLastRequest < windowInMs && rateLimitData.count >= max;\n}\nfunction rateLimitResponse(retryAfter) {\n  return new Response(\n    JSON.stringify({\n      message: \"Too many requests. Please try again later.\"\n    }),\n    {\n      status: 429,\n      statusText: \"Too Many Requests\",\n      headers: {\n        \"X-Retry-After\": retryAfter.toString()\n      }\n    }\n  );\n}\nfunction getRetryAfter(lastRequest, window) {\n  const now = Date.now();\n  const windowInMs = window * 1e3;\n  return Math.ceil((lastRequest + windowInMs - now) / 1e3);\n}\nfunction createDBStorage(ctx) {\n  const model = \"rateLimit\";\n  const db = ctx.adapter;\n  return {\n    get: async (key) => {\n      const res = await db.findMany({\n        model,\n        where: [{ field: \"key\", value: key }]\n      });\n      const data = res[0];\n      if (typeof data?.lastRequest === \"bigint\") {\n        data.lastRequest = Number(data.lastRequest);\n      }\n      return data;\n    },\n    set: async (key, value, _update) => {\n      try {\n        if (_update) {\n          await db.updateMany({\n            model,\n            where: [{ field: \"key\", value: key }],\n            update: {\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        } else {\n          await db.create({\n            model,\n            data: {\n              key,\n              count: value.count,\n              lastRequest: value.lastRequest\n            }\n          });\n        }\n      } catch (e) {\n        ctx.logger.error(\"Error setting rate limit\", e);\n      }\n    }\n  };\n}\nconst memory = /* @__PURE__ */ new Map();\nfunction getRateLimitStorage(ctx, rateLimitSettings) {\n  if (ctx.options.rateLimit?.customStorage) {\n    return ctx.options.rateLimit.customStorage;\n  }\n  const storage = ctx.rateLimit.storage;\n  if (storage === \"secondary-storage\") {\n    return {\n      get: async (key) => {\n        const data = await ctx.options.secondaryStorage?.get(key);\n        return data ? safeJSONParse(data) : void 0;\n      },\n      set: async (key, value, _update) => {\n        const ttl = rateLimitSettings?.window ?? ctx.options.rateLimit?.window ?? 10;\n        await ctx.options.secondaryStorage?.set?.(\n          key,\n          JSON.stringify(value),\n          ttl\n        );\n      }\n    };\n  } else if (storage === \"memory\") {\n    return {\n      async get(key) {\n        return memory.get(key);\n      },\n      async set(key, value, _update) {\n        memory.set(key, value);\n      }\n    };\n  }\n  return createDBStorage(ctx);\n}\nasync function onRequestRateLimit(req, ctx) {\n  if (!ctx.rateLimit.enabled) {\n    return;\n  }\n  const path = new URL(req.url).pathname.replace(\n    ctx.options.basePath || \"/api/auth\",\n    \"\"\n  );\n  let window = ctx.rateLimit.window;\n  let max = ctx.rateLimit.max;\n  const ip = getIp(req, ctx.options);\n  if (!ip) {\n    return;\n  }\n  const key = ip + path;\n  const specialRules = getDefaultSpecialRules();\n  const specialRule = specialRules.find((rule) => rule.pathMatcher(path));\n  if (specialRule) {\n    window = specialRule.window;\n    max = specialRule.max;\n  }\n  for (const plugin of ctx.options.plugins || []) {\n    if (plugin.rateLimit) {\n      const matchedRule = plugin.rateLimit.find(\n        (rule) => rule.pathMatcher(path)\n      );\n      if (matchedRule) {\n        window = matchedRule.window;\n        max = matchedRule.max;\n        break;\n      }\n    }\n  }\n  if (ctx.rateLimit.customRules) {\n    const _path = Object.keys(ctx.rateLimit.customRules).find((p) => {\n      if (p.includes(\"*\")) {\n        const isMatch = wildcardMatch(p)(path);\n        return isMatch;\n      }\n      return p === path;\n    });\n    if (_path) {\n      const customRule = ctx.rateLimit.customRules[_path];\n      const resolved = typeof customRule === \"function\" ? await customRule(req) : customRule;\n      if (resolved) {\n        window = resolved.window;\n        max = resolved.max;\n      }\n      if (resolved === false) {\n        return;\n      }\n    }\n  }\n  const storage = getRateLimitStorage(ctx, {\n    window\n  });\n  const data = await storage.get(key);\n  const now = Date.now();\n  if (!data) {\n    await storage.set(key, {\n      key,\n      count: 1,\n      lastRequest: now\n    });\n  } else {\n    const timeSinceLastRequest = now - data.lastRequest;\n    if (shouldRateLimit(max, window, data)) {\n      const retryAfter = getRetryAfter(data.lastRequest, window);\n      return rateLimitResponse(retryAfter);\n    } else if (timeSinceLastRequest > window * 1e3) {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: 1,\n          lastRequest: now\n        },\n        true\n      );\n    } else {\n      await storage.set(\n        key,\n        {\n          ...data,\n          count: data.count + 1,\n          lastRequest: now\n        },\n        true\n      );\n    }\n  }\n}\nfunction getDefaultSpecialRules() {\n  const specialRules = [\n    {\n      pathMatcher(path) {\n        return path.startsWith(\"/sign-in\") || path.startsWith(\"/sign-up\") || path.startsWith(\"/change-password\") || path.startsWith(\"/change-email\");\n      },\n      window: 10,\n      max: 3\n    }\n  ];\n  return specialRules;\n}\n\nfunction checkEndpointConflicts(options, logger2) {\n  const endpointRegistry = /* @__PURE__ */ new Map();\n  options.plugins?.forEach((plugin) => {\n    if (plugin.endpoints) {\n      for (const [key, endpoint] of Object.entries(plugin.endpoints)) {\n        if (endpoint && \"path\" in endpoint) {\n          const path = endpoint.path;\n          let methods = [];\n          if (endpoint.options && \"method\" in endpoint.options) {\n            if (Array.isArray(endpoint.options.method)) {\n              methods = endpoint.options.method;\n            } else if (typeof endpoint.options.method === \"string\") {\n              methods = [endpoint.options.method];\n            }\n          }\n          if (methods.length === 0) {\n            methods = [\"*\"];\n          }\n          if (!endpointRegistry.has(path)) {\n            endpointRegistry.set(path, []);\n          }\n          endpointRegistry.get(path).push({\n            pluginId: plugin.id,\n            endpointKey: key,\n            methods\n          });\n        }\n      }\n    }\n  });\n  const conflicts = [];\n  for (const [path, entries] of endpointRegistry.entries()) {\n    if (entries.length > 1) {\n      const methodMap = /* @__PURE__ */ new Map();\n      let hasConflict = false;\n      for (const entry of entries) {\n        for (const method of entry.methods) {\n          if (!methodMap.has(method)) {\n            methodMap.set(method, []);\n          }\n          methodMap.get(method).push(entry.pluginId);\n          if (methodMap.get(method).length > 1) {\n            hasConflict = true;\n          }\n          if (method === \"*\" && entries.length > 1) {\n            hasConflict = true;\n          } else if (method !== \"*\" && methodMap.has(\"*\")) {\n            hasConflict = true;\n          }\n        }\n      }\n      if (hasConflict) {\n        const uniquePlugins = [...new Set(entries.map((e) => e.pluginId))];\n        const conflictingMethods = [];\n        for (const [method, plugins] of methodMap.entries()) {\n          if (plugins.length > 1 || method === \"*\" && entries.length > 1 || method !== \"*\" && methodMap.has(\"*\")) {\n            conflictingMethods.push(method);\n          }\n        }\n        conflicts.push({\n          path,\n          plugins: uniquePlugins,\n          conflictingMethods\n        });\n      }\n    }\n  }\n  if (conflicts.length > 0) {\n    const conflictMessages = conflicts.map(\n      (conflict) => `  - \"${conflict.path}\" [${conflict.conflictingMethods.join(\", \")}] used by plugins: ${conflict.plugins.join(\", \")}`\n    ).join(\"\\n\");\n    logger2.error(\n      `Endpoint path conflicts detected! Multiple plugins are trying to use the same endpoint paths with conflicting HTTP methods:\n${conflictMessages}\n\nTo resolve this, you can:\n\t1. Use only one of the conflicting plugins\n\t2. Configure the plugins to use different paths (if supported)\n\t3. Ensure plugins use different HTTP methods for the same path\n`\n    );\n  }\n}\nfunction getEndpoints(ctx, options) {\n  const pluginEndpoints = options.plugins?.reduce((acc, plugin) => {\n    return {\n      ...acc,\n      ...plugin.endpoints\n    };\n  }, {}) ?? {};\n  const middlewares = options.plugins?.map(\n    (plugin) => plugin.middlewares?.map((m) => {\n      const middleware = (async (context) => {\n        const authContext = await ctx;\n        return m.middleware({\n          ...context,\n          context: {\n            ...authContext,\n            ...context.context\n          }\n        });\n      });\n      middleware.options = m.middleware.options;\n      return {\n        path: m.path,\n        middleware\n      };\n    })\n  ).filter((plugin) => plugin !== void 0).flat() || [];\n  const baseEndpoints = {\n    signInSocial,\n    callbackOAuth,\n    getSession: getSession(),\n    signOut,\n    signUpEmail: signUpEmail(),\n    signInEmail,\n    forgetPassword,\n    resetPassword,\n    verifyEmail,\n    sendVerificationEmail,\n    changeEmail,\n    changePassword,\n    setPassword,\n    updateUser: updateUser(),\n    deleteUser,\n    forgetPasswordCallback,\n    requestPasswordReset,\n    requestPasswordResetCallback,\n    listSessions: listSessions(),\n    revokeSession,\n    revokeSessions,\n    revokeOtherSessions,\n    linkSocialAccount,\n    listUserAccounts,\n    deleteUserCallback,\n    unlinkAccount,\n    refreshToken,\n    getAccessToken,\n    accountInfo\n  };\n  const endpoints = {\n    ...baseEndpoints,\n    ...pluginEndpoints,\n    ok,\n    error\n  };\n  const api = toAuthEndpoints(endpoints, ctx);\n  return {\n    api,\n    middlewares\n  };\n}\nconst router = (ctx, options) => {\n  const { api, middlewares } = getEndpoints(ctx, options);\n  const basePath = new URL(ctx.baseURL).pathname;\n  return createRouter(api, {\n    routerContext: ctx,\n    openapi: {\n      disabled: true\n    },\n    basePath,\n    routerMiddleware: [\n      {\n        path: \"/**\",\n        middleware: originCheckMiddleware\n      },\n      ...middlewares\n    ],\n    async onRequest(req) {\n      const disabledPaths = ctx.options.disabledPaths || [];\n      const path = new URL(req.url).pathname.replace(basePath, \"\");\n      if (disabledPaths.includes(path)) {\n        return new Response(\"Not Found\", { status: 404 });\n      }\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onRequest) {\n          const response = await plugin.onRequest(req, ctx);\n          if (response && \"response\" in response) {\n            return response.response;\n          }\n          if (response && \"request\" in response) {\n            const rateLimitResponse = await onRequestRateLimit(\n              response.request,\n              ctx\n            );\n            if (rateLimitResponse) {\n              return rateLimitResponse;\n            }\n            return response.request;\n          }\n        }\n      }\n      return onRequestRateLimit(req, ctx);\n    },\n    async onResponse(res) {\n      for (const plugin of ctx.options.plugins || []) {\n        if (plugin.onResponse) {\n          const response = await plugin.onResponse(res, ctx);\n          if (response) {\n            return response.response;\n          }\n        }\n      }\n      return res;\n    },\n    onError(e) {\n      if (e instanceof APIError && e.status === \"FOUND\") {\n        return;\n      }\n      if (options.onAPIError?.throw) {\n        throw e;\n      }\n      if (options.onAPIError?.onError) {\n        options.onAPIError.onError(e, ctx);\n        return;\n      }\n      const optLogLevel = options.logger?.level;\n      const log = optLogLevel === \"error\" || optLogLevel === \"warn\" || optLogLevel === \"debug\" ? logger : void 0;\n      if (options.logger?.disabled !== true) {\n        if (e && typeof e === \"object\" && \"message\" in e && typeof e.message === \"string\") {\n          if (e.message.includes(\"no column\") || e.message.includes(\"column\") || e.message.includes(\"relation\") || e.message.includes(\"table\") || e.message.includes(\"does not exist\")) {\n            ctx.logger?.error(e.message);\n            return;\n          }\n        }\n        if (e instanceof APIError) {\n          if (e.status === \"INTERNAL_SERVER_ERROR\") {\n            ctx.logger.error(e.status, e);\n          }\n          log?.error(e.message);\n        } else {\n          ctx.logger?.error(\n            e && typeof e === \"object\" && \"name\" in e ? e.name : \"\",\n            e\n          );\n        }\n      }\n    }\n  });\n};\n\nexport { accountInfo, callbackOAuth, changeEmail, changePassword, checkEndpointConflicts, createEmailVerificationToken, deleteUser, deleteUserCallback, error, forgetPassword, forgetPasswordCallback, getAccessToken, getEndpoints, getSession, linkSocialAccount, listSessions, listUserAccounts, ok, originCheckMiddleware, refreshToken, requestPasswordReset, requestPasswordResetCallback, resetPassword, revokeOtherSessions, revokeSession, revokeSessions, router, sendVerificationEmail, setPassword, signInEmail, signInSocial, signOut, signUpEmail, unlinkAccount, updateUser, verifyEmail };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5723, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.pQjeRkzN.mjs"],"sourcesContent":["const getAuthTables = (options) => {\n  const pluginSchema = (options.plugins ?? []).reduce(\n    (acc, plugin) => {\n      const schema = plugin.schema;\n      if (!schema) return acc;\n      for (const [key, value] of Object.entries(schema)) {\n        acc[key] = {\n          fields: {\n            ...acc[key]?.fields,\n            ...value.fields\n          },\n          modelName: value.modelName || key\n        };\n      }\n      return acc;\n    },\n    {}\n  );\n  const shouldAddRateLimitTable = options.rateLimit?.storage === \"database\";\n  const rateLimitTable = {\n    rateLimit: {\n      modelName: options.rateLimit?.modelName || \"rateLimit\",\n      fields: {\n        key: {\n          type: \"string\",\n          fieldName: options.rateLimit?.fields?.key || \"key\"\n        },\n        count: {\n          type: \"number\",\n          fieldName: options.rateLimit?.fields?.count || \"count\"\n        },\n        lastRequest: {\n          type: \"number\",\n          bigint: true,\n          fieldName: options.rateLimit?.fields?.lastRequest || \"lastRequest\"\n        }\n      }\n    }\n  };\n  const { user, session, account, ...pluginTables } = pluginSchema;\n  const sessionTable = {\n    session: {\n      modelName: options.session?.modelName || \"session\",\n      fields: {\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.expiresAt || \"expiresAt\"\n        },\n        token: {\n          type: \"string\",\n          required: true,\n          fieldName: options.session?.fields?.token || \"token\",\n          unique: true\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.createdAt || \"createdAt\",\n          defaultValue: () => /* @__PURE__ */ new Date()\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.session?.fields?.updatedAt || \"updatedAt\",\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ipAddress: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.ipAddress || \"ipAddress\"\n        },\n        userAgent: {\n          type: \"string\",\n          required: false,\n          fieldName: options.session?.fields?.userAgent || \"userAgent\"\n        },\n        userId: {\n          type: \"string\",\n          fieldName: options.session?.fields?.userId || \"userId\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true\n        },\n        ...session?.fields,\n        ...options.session?.additionalFields\n      },\n      order: 2\n    }\n  };\n  return {\n    user: {\n      modelName: options.user?.modelName || \"user\",\n      fields: {\n        name: {\n          type: \"string\",\n          required: true,\n          fieldName: options.user?.fields?.name || \"name\",\n          sortable: true\n        },\n        email: {\n          type: \"string\",\n          unique: true,\n          required: true,\n          fieldName: options.user?.fields?.email || \"email\",\n          sortable: true\n        },\n        emailVerified: {\n          type: \"boolean\",\n          defaultValue: false,\n          required: true,\n          fieldName: options.user?.fields?.emailVerified || \"emailVerified\",\n          input: false\n        },\n        image: {\n          type: \"string\",\n          required: false,\n          fieldName: options.user?.fields?.image || \"image\"\n        },\n        createdAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          onUpdate: () => /* @__PURE__ */ new Date(),\n          required: true,\n          fieldName: options.user?.fields?.updatedAt || \"updatedAt\"\n        },\n        ...user?.fields,\n        ...options.user?.additionalFields\n      },\n      order: 1\n    },\n    //only add session table if it's not stored in secondary storage\n    ...!options.secondaryStorage || options.session?.storeSessionInDatabase ? sessionTable : {},\n    account: {\n      modelName: options.account?.modelName || \"account\",\n      fields: {\n        accountId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.accountId || \"accountId\"\n        },\n        providerId: {\n          type: \"string\",\n          required: true,\n          fieldName: options.account?.fields?.providerId || \"providerId\"\n        },\n        userId: {\n          type: \"string\",\n          references: {\n            model: options.user?.modelName || \"user\",\n            field: \"id\",\n            onDelete: \"cascade\"\n          },\n          required: true,\n          fieldName: options.account?.fields?.userId || \"userId\"\n        },\n        accessToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.accessToken || \"accessToken\"\n        },\n        refreshToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.refreshToken || \"refreshToken\"\n        },\n        idToken: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.idToken || \"idToken\"\n        },\n        accessTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.accessTokenExpiresAt || \"accessTokenExpiresAt\"\n        },\n        refreshTokenExpiresAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options.account?.fields?.refreshTokenExpiresAt || \"refreshTokenExpiresAt\"\n        },\n        scope: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.scope || \"scope\"\n        },\n        password: {\n          type: \"string\",\n          required: false,\n          fieldName: options.account?.fields?.password || \"password\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.createdAt || \"createdAt\",\n          defaultValue: () => /* @__PURE__ */ new Date()\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.account?.fields?.updatedAt || \"updatedAt\",\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ...account?.fields,\n        ...options.account?.additionalFields\n      },\n      order: 3\n    },\n    verification: {\n      modelName: options.verification?.modelName || \"verification\",\n      fields: {\n        identifier: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.identifier || \"identifier\"\n        },\n        value: {\n          type: \"string\",\n          required: true,\n          fieldName: options.verification?.fields?.value || \"value\"\n        },\n        expiresAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options.verification?.fields?.expiresAt || \"expiresAt\"\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.createdAt || \"createdAt\"\n        },\n        updatedAt: {\n          type: \"date\",\n          required: true,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          onUpdate: () => /* @__PURE__ */ new Date(),\n          fieldName: options.verification?.fields?.updatedAt || \"updatedAt\"\n        }\n      },\n      order: 4\n    },\n    ...pluginTables,\n    ...shouldAddRateLimitTable ? rateLimitTable : {}\n  };\n};\n\nexport { getAuthTables as g };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5983, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.EBxKeVNZ.mjs"],"sourcesContent":["import { s as safeJSONParse } from './better-auth.BKEtEpt0.mjs';\nimport { g as getAuthTables } from './better-auth.pQjeRkzN.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport '@better-auth/core/error';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { logger, TTY_COLORS, getColorDepth } from '@better-auth/core/env';\n\nfunction withApplyDefault(value, field, action) {\n  if (action === \"update\") {\n    if (value === void 0 && field.onUpdate !== void 0) {\n      if (typeof field.onUpdate === \"function\") {\n        return field.onUpdate();\n      }\n      return field.onUpdate;\n    }\n    return value;\n  }\n  if (value === void 0 || value === null) {\n    if (field.defaultValue !== void 0) {\n      if (typeof field.defaultValue === \"function\") {\n        return field.defaultValue();\n      }\n      return field.defaultValue;\n    }\n  }\n  return value;\n}\n\nlet debugLogs = [];\nlet transactionId = -1;\nconst createAsIsTransaction = (adapter) => (fn) => fn(adapter);\nconst createAdapterFactory = ({\n  adapter: customAdapter,\n  config: cfg\n}) => (options) => {\n  const uniqueAdapterFactoryInstanceId = Math.random().toString(36).substring(2, 15);\n  const config = {\n    ...cfg,\n    supportsBooleans: cfg.supportsBooleans ?? true,\n    supportsDates: cfg.supportsDates ?? true,\n    supportsJSON: cfg.supportsJSON ?? false,\n    adapterName: cfg.adapterName ?? cfg.adapterId,\n    supportsNumericIds: cfg.supportsNumericIds ?? true,\n    transaction: cfg.transaction ?? false,\n    disableTransformInput: cfg.disableTransformInput ?? false,\n    disableTransformOutput: cfg.disableTransformOutput ?? false\n  };\n  if (options.advanced?.database?.useNumberId === true && config.supportsNumericIds === false) {\n    throw new Error(\n      `[${config.adapterName}] Your database or database adapter does not support numeric ids. Please disable \"useNumberId\" in your config.`\n    );\n  }\n  const schema = getAuthTables(options);\n  const getDefaultFieldName = ({\n    field,\n    model: unsafe_model\n  }) => {\n    if (field === \"id\" || field === \"_id\") {\n      return \"id\";\n    }\n    const model = getDefaultModelName(unsafe_model);\n    let f = schema[model]?.fields[field];\n    if (!f) {\n      const result = Object.entries(schema[model].fields).find(\n        ([_, f2]) => f2.fieldName === field\n      );\n      if (result) {\n        f = result[1];\n        field = result[0];\n      }\n    }\n    if (!f) {\n      debugLog(`Field ${field} not found in model ${model}`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Field ${field} not found in model ${model}`);\n    }\n    return field;\n  };\n  const getDefaultModelName = (model) => {\n    if (config.usePlural && model.charAt(model.length - 1) === \"s\") {\n      let pluralessModel = model.slice(0, -1);\n      let m2 = schema[pluralessModel] ? pluralessModel : void 0;\n      if (!m2) {\n        m2 = Object.entries(schema).find(\n          ([_, f]) => f.modelName === pluralessModel\n        )?.[0];\n      }\n      if (m2) {\n        return m2;\n      }\n    }\n    let m = schema[model] ? model : void 0;\n    if (!m) {\n      m = Object.entries(schema).find(([_, f]) => f.modelName === model)?.[0];\n    }\n    if (!m) {\n      debugLog(`Model \"${model}\" not found in schema`);\n      debugLog(`Schema:`, schema);\n      throw new Error(`Model \"${model}\" not found in schema`);\n    }\n    return m;\n  };\n  const getModelName = (model) => {\n    const defaultModelKey = getDefaultModelName(model);\n    const usePlural = config && config.usePlural;\n    const useCustomModelName = schema && schema[defaultModelKey] && schema[defaultModelKey].modelName !== model;\n    if (useCustomModelName) {\n      return usePlural ? `${schema[defaultModelKey].modelName}s` : schema[defaultModelKey].modelName;\n    }\n    return usePlural ? `${model}s` : model;\n  };\n  function getFieldName({\n    model: model_name,\n    field: field_name\n  }) {\n    const model = getDefaultModelName(model_name);\n    const field = getDefaultFieldName({ model, field: field_name });\n    return schema[model]?.fields[field]?.fieldName || field;\n  }\n  const debugLog = (...args) => {\n    if (config.debugLogs === true || typeof config.debugLogs === \"object\") {\n      if (typeof config.debugLogs === \"object\" && \"isRunningAdapterTests\" in config.debugLogs) {\n        if (config.debugLogs.isRunningAdapterTests) {\n          args.shift();\n          debugLogs.push({ instance: uniqueAdapterFactoryInstanceId, args });\n        }\n        return;\n      }\n      if (typeof config.debugLogs === \"object\" && config.debugLogs.logCondition && !config.debugLogs.logCondition?.()) {\n        return;\n      }\n      if (typeof args[0] === \"object\" && \"method\" in args[0]) {\n        const method = args.shift().method;\n        if (typeof config.debugLogs === \"object\") {\n          if (method === \"create\" && !config.debugLogs.create) {\n            return;\n          } else if (method === \"update\" && !config.debugLogs.update) {\n            return;\n          } else if (method === \"updateMany\" && !config.debugLogs.updateMany) {\n            return;\n          } else if (method === \"findOne\" && !config.debugLogs.findOne) {\n            return;\n          } else if (method === \"findMany\" && !config.debugLogs.findMany) {\n            return;\n          } else if (method === \"delete\" && !config.debugLogs.delete) {\n            return;\n          } else if (method === \"deleteMany\" && !config.debugLogs.deleteMany) {\n            return;\n          } else if (method === \"count\" && !config.debugLogs.count) {\n            return;\n          }\n        }\n        logger.info(`[${config.adapterName}]`, ...args);\n      } else {\n        logger.info(`[${config.adapterName}]`, ...args);\n      }\n    }\n  };\n  const idField = ({\n    customModelName,\n    forceAllowId\n  }) => {\n    const shouldGenerateId = !config.disableIdGeneration && !options.advanced?.database?.useNumberId && !forceAllowId;\n    const model = getDefaultModelName(customModelName ?? \"id\");\n    return {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\",\n      required: shouldGenerateId ? true : false,\n      ...shouldGenerateId ? {\n        defaultValue() {\n          if (config.disableIdGeneration) return void 0;\n          const useNumberId = options.advanced?.database?.useNumberId;\n          let generateId$1 = options.advanced?.database?.generateId;\n          if (options.advanced?.generateId !== void 0) {\n            logger.warn(\n              \"Your Better Auth config includes advanced.generateId which is deprecated. Please use advanced.database.generateId instead. This will be removed in future releases.\"\n            );\n            generateId$1 = options.advanced?.generateId;\n          }\n          if (generateId$1 === false || useNumberId) return void 0;\n          if (generateId$1) {\n            return generateId$1({\n              model\n            });\n          }\n          if (config.customIdGenerator) {\n            return config.customIdGenerator({ model });\n          }\n          return generateId();\n        }\n      } : {}\n    };\n  };\n  const getFieldAttributes = ({\n    model,\n    field\n  }) => {\n    const defaultModelName = getDefaultModelName(model);\n    const defaultFieldName = getDefaultFieldName({\n      field,\n      model: defaultModelName\n    });\n    const fields = schema[defaultModelName].fields;\n    fields.id = idField({ customModelName: defaultModelName });\n    return fields[defaultFieldName];\n  };\n  const transformInput = async (data, defaultModelName, action, forceAllowId) => {\n    const transformedData = {};\n    const fields = schema[defaultModelName].fields;\n    const newMappedKeys = config.mapKeysTransformInput ?? {};\n    if (!config.disableIdGeneration && !options.advanced?.database?.useNumberId) {\n      fields.id = idField({\n        customModelName: defaultModelName,\n        forceAllowId: forceAllowId && \"id\" in data\n      });\n    }\n    for (const field in fields) {\n      const value = data[field];\n      const fieldAttributes = fields[field];\n      let newFieldName = newMappedKeys[field] || fields[field].fieldName || field;\n      if (value === void 0 && (fieldAttributes.defaultValue === void 0 && !fieldAttributes.transform?.input && !(action === \"update\" && fieldAttributes.onUpdate) || action === \"update\" && !fieldAttributes.onUpdate)) {\n        continue;\n      }\n      let newValue = withApplyDefault(value, fieldAttributes, action);\n      if (fieldAttributes.transform?.input) {\n        newValue = await fieldAttributes.transform.input(newValue);\n      }\n      if (fieldAttributes.references?.field === \"id\" && options.advanced?.database?.useNumberId) {\n        if (Array.isArray(newValue)) {\n          newValue = newValue.map((x) => x !== null ? Number(x) : null);\n        } else {\n          newValue = newValue !== null ? Number(newValue) : null;\n        }\n      } else if (config.supportsJSON === false && typeof newValue === \"object\" && fieldAttributes.type === \"json\") {\n        newValue = JSON.stringify(newValue);\n      } else if (config.supportsDates === false && newValue instanceof Date && fieldAttributes.type === \"date\") {\n        newValue = newValue.toISOString();\n      } else if (config.supportsBooleans === false && typeof newValue === \"boolean\") {\n        newValue = newValue ? 1 : 0;\n      }\n      if (config.customTransformInput) {\n        newValue = config.customTransformInput({\n          data: newValue,\n          action,\n          field: newFieldName,\n          fieldAttributes,\n          model: defaultModelName,\n          schema,\n          options\n        });\n      }\n      if (newValue !== void 0) {\n        transformedData[newFieldName] = newValue;\n      }\n    }\n    return transformedData;\n  };\n  const transformOutput = async (data, unsafe_model, select = []) => {\n    if (!data) return null;\n    const newMappedKeys = config.mapKeysTransformOutput ?? {};\n    const transformedData = {};\n    const tableSchema = schema[unsafe_model].fields;\n    const idKey = Object.entries(newMappedKeys).find(\n      ([_, v]) => v === \"id\"\n    )?.[0];\n    tableSchema[idKey ?? \"id\"] = {\n      type: options.advanced?.database?.useNumberId ? \"number\" : \"string\"\n    };\n    for (const key in tableSchema) {\n      if (select.length && !select.includes(key)) {\n        continue;\n      }\n      const field = tableSchema[key];\n      if (field) {\n        const originalKey = field.fieldName || key;\n        let newValue = data[Object.entries(newMappedKeys).find(\n          ([_, v]) => v === originalKey\n        )?.[0] || originalKey];\n        if (field.transform?.output) {\n          newValue = await field.transform.output(newValue);\n        }\n        let newFieldName = newMappedKeys[key] || key;\n        if (originalKey === \"id\" || field.references?.field === \"id\") {\n          if (typeof newValue !== \"undefined\" && newValue !== null)\n            newValue = String(newValue);\n        } else if (config.supportsJSON === false && typeof newValue === \"string\" && field.type === \"json\") {\n          newValue = safeJSONParse(newValue);\n        } else if (config.supportsDates === false && typeof newValue === \"string\" && field.type === \"date\") {\n          newValue = new Date(newValue);\n        } else if (config.supportsBooleans === false && typeof newValue === \"number\" && field.type === \"boolean\") {\n          newValue = newValue === 1;\n        }\n        if (config.customTransformOutput) {\n          newValue = config.customTransformOutput({\n            data: newValue,\n            field: newFieldName,\n            fieldAttributes: field,\n            select,\n            model: unsafe_model,\n            schema,\n            options\n          });\n        }\n        transformedData[newFieldName] = newValue;\n      }\n    }\n    return transformedData;\n  };\n  const transformWhereClause = ({\n    model,\n    where\n  }) => {\n    if (!where) return void 0;\n    const newMappedKeys = config.mapKeysTransformInput ?? {};\n    return where.map((w) => {\n      const {\n        field: unsafe_field,\n        value,\n        operator = \"eq\",\n        connector = \"AND\"\n      } = w;\n      if (operator === \"in\") {\n        if (!Array.isArray(value)) {\n          throw new Error(\"Value must be an array\");\n        }\n      }\n      const defaultModelName = getDefaultModelName(model);\n      const defaultFieldName = getDefaultFieldName({\n        field: unsafe_field,\n        model\n      });\n      const fieldName = newMappedKeys[defaultFieldName] || getFieldName({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      const fieldAttr = getFieldAttributes({\n        field: defaultFieldName,\n        model: defaultModelName\n      });\n      if (defaultFieldName === \"id\" || fieldAttr.references?.field === \"id\") {\n        if (options.advanced?.database?.useNumberId) {\n          if (Array.isArray(value)) {\n            return {\n              operator,\n              connector,\n              field: fieldName,\n              value: value.map(Number)\n            };\n          }\n          return {\n            operator,\n            connector,\n            field: fieldName,\n            value: Number(value)\n          };\n        }\n      }\n      return {\n        operator,\n        connector,\n        field: fieldName,\n        value\n      };\n    });\n  };\n  const adapterInstance = customAdapter({\n    options,\n    schema,\n    debugLog,\n    getFieldName,\n    getModelName,\n    getDefaultModelName,\n    getDefaultFieldName,\n    getFieldAttributes,\n    transformInput,\n    transformOutput,\n    transformWhereClause\n  });\n  let lazyLoadTransaction = null;\n  const adapter = {\n    transaction: async (cb) => {\n      if (!lazyLoadTransaction) {\n        if (!config.transaction) {\n          if (typeof config.debugLogs === \"object\" && \"isRunningAdapterTests\" in config.debugLogs && config.debugLogs.isRunningAdapterTests) ; else {\n            logger.warn(\n              `[${config.adapterName}] - Transactions are not supported. Executing operations sequentially.`\n            );\n          }\n          lazyLoadTransaction = createAsIsTransaction(adapter);\n        } else {\n          logger.debug(\n            `[${config.adapterName}] - Using provided transaction implementation.`\n          );\n          lazyLoadTransaction = config.transaction;\n        }\n      }\n      return lazyLoadTransaction(cb);\n    },\n    create: async ({\n      data: unsafeData,\n      model: unsafeModel,\n      select,\n      forceAllowId = false\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      unsafeModel = getDefaultModelName(unsafeModel);\n      if (\"id\" in unsafeData && !forceAllowId) {\n        logger.warn(\n          `[${config.adapterName}] - You are trying to create a record with an id. This is not allowed as we handle id generation for you, unless you pass in the \\`forceAllowId\\` parameter. The id will be ignored.`\n        );\n        const err = new Error();\n        const stack = err.stack?.split(\"\\n\").filter((_, i) => i !== 1).join(\"\\n\").replace(\"Error:\", \"Create method with `id` being called at:\");\n        console.log(stack);\n        unsafeData.id = void 0;\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      let data = unsafeData;\n      if (!config.disableTransformInput) {\n        data = await transformInput(\n          unsafeData,\n          unsafeModel,\n          \"create\",\n          forceAllowId\n        );\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.create({ data, model });\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"DB Result\")}:`,\n        { model, res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await transformOutput(res, unsafeModel, select);\n      }\n      debugLog(\n        { method: \"create\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"create\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    update: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      unsafeModel = getDefaultModelName(unsafeModel);\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      let data = unsafeData;\n      if (!config.disableTransformInput) {\n        data = await transformInput(unsafeData, unsafeModel, \"update\");\n      }\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const res = await adapterInstance.update({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await transformOutput(res, unsafeModel);\n      }\n      debugLog(\n        { method: \"update\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"update\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    updateMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      update: unsafeData\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Unsafe Input\")}:`,\n        { model, data: unsafeData }\n      );\n      let data = unsafeData;\n      if (!config.disableTransformInput) {\n        data = await transformInput(unsafeData, unsafeModel, \"update\");\n      }\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Input\")}:`,\n        { model, data }\n      );\n      const updatedCount = await adapterInstance.updateMany({\n        model,\n        where,\n        update: data\n      });\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: updatedCount }\n      );\n      debugLog(\n        { method: \"updateMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(4, 4)}`,\n        `${formatMethod(\"updateMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: updatedCount }\n      );\n      return updatedCount;\n    },\n    findOne: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      select\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findOne\")}:`,\n        { model, where, select }\n      );\n      const res = await adapterInstance.findOne({\n        model,\n        where,\n        select\n      });\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await transformOutput(res, unsafeModel, select);\n      }\n      debugLog(\n        { method: \"findOne\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findOne\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    findMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere,\n      limit: unsafeLimit,\n      sortBy,\n      offset\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const limit = unsafeLimit ?? options.advanced?.database?.defaultFindManyLimit ?? 100;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 3)}`,\n        `${formatMethod(\"findMany\")}:`,\n        { model, where, limit, sortBy, offset }\n      );\n      const res = await adapterInstance.findMany({\n        model,\n        where,\n        limit,\n        sortBy,\n        offset\n      });\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      let transformed = res;\n      if (!config.disableTransformOutput) {\n        transformed = await Promise.all(\n          res.map(async (r) => await transformOutput(r, unsafeModel))\n        );\n      }\n      debugLog(\n        { method: \"findMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(3, 3)}`,\n        `${formatMethod(\"findMany\")} ${formatAction(\"Parsed Result\")}:`,\n        { model, data: transformed }\n      );\n      return transformed;\n    },\n    delete: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"delete\")}:`,\n        { model, where }\n      );\n      await adapterInstance.delete({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"delete\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"delete\")} ${formatAction(\"DB Result\")}:`,\n        { model }\n      );\n    },\n    deleteMany: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DeleteMany\")}:`,\n        { model, where }\n      );\n      const res = await adapterInstance.deleteMany({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"deleteMany\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"deleteMany\")} ${formatAction(\"DB Result\")}:`,\n        { model, data: res }\n      );\n      return res;\n    },\n    count: async ({\n      model: unsafeModel,\n      where: unsafeWhere\n    }) => {\n      transactionId++;\n      let thisTransactionId = transactionId;\n      const model = getModelName(unsafeModel);\n      const where = transformWhereClause({\n        model: unsafeModel,\n        where: unsafeWhere\n      });\n      unsafeModel = getDefaultModelName(unsafeModel);\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(1, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          where\n        }\n      );\n      const res = await adapterInstance.count({\n        model,\n        where\n      });\n      debugLog(\n        { method: \"count\" },\n        `${formatTransactionId(thisTransactionId)} ${formatStep(2, 2)}`,\n        `${formatMethod(\"count\")}:`,\n        {\n          model,\n          data: res\n        }\n      );\n      return res;\n    },\n    createSchema: adapterInstance.createSchema ? async (_, file) => {\n      const tables = getAuthTables(options);\n      if (options.secondaryStorage && !options.session?.storeSessionInDatabase) {\n        delete tables.session;\n      }\n      if (options.rateLimit && options.rateLimit.storage === \"database\" && // rate-limit will default to enabled in production,\n      // and given storage is database, it will try to use the rate-limit table,\n      // so we should make sure to generate rate-limit table schema\n      (typeof options.rateLimit.enabled === \"undefined\" || // and of course if they forcefully set to true, then they want rate-limit,\n      // thus we should also generate rate-limit table schema\n      options.rateLimit.enabled === true)) {\n        tables.ratelimit = {\n          modelName: options.rateLimit.modelName ?? \"ratelimit\",\n          fields: {\n            key: {\n              type: \"string\",\n              unique: true,\n              required: true,\n              fieldName: options.rateLimit.fields?.key ?? \"key\"\n            },\n            count: {\n              type: \"number\",\n              required: true,\n              fieldName: options.rateLimit.fields?.count ?? \"count\"\n            },\n            lastRequest: {\n              type: \"number\",\n              required: true,\n              bigint: true,\n              defaultValue: () => Date.now(),\n              fieldName: options.rateLimit.fields?.lastRequest ?? \"lastRequest\"\n            }\n          }\n        };\n      }\n      return adapterInstance.createSchema({ file, tables });\n    } : void 0,\n    options: {\n      adapterConfig: config,\n      ...adapterInstance.options ?? {}\n    },\n    id: config.adapterId,\n    // Secretly export values ONLY if this adapter has enabled adapter-test-debug-logs.\n    // This would then be used during our adapter-tests to help print debug logs if a test fails.\n    //@ts-expect-error - ^^\n    ...config.debugLogs?.isRunningAdapterTests ? {\n      adapterTestDebugLogs: {\n        resetDebugLogs() {\n          debugLogs = debugLogs.filter(\n            (log) => log.instance !== uniqueAdapterFactoryInstanceId\n          );\n        },\n        printDebugLogs() {\n          const separator = `\\u2500`.repeat(80);\n          const logs = debugLogs.filter(\n            (log2) => log2.instance === uniqueAdapterFactoryInstanceId\n          );\n          if (logs.length === 0) {\n            return;\n          }\n          let log = logs.reverse().map((log2) => {\n            log2.args[0] = `\n${log2.args[0]}`;\n            return [...log2.args, \"\\n\"];\n          }).reduce(\n            (prev, curr) => {\n              return [...curr, ...prev];\n            },\n            [`\n${separator}`]\n          );\n          console.log(...log);\n        }\n      }\n    } : {}\n  };\n  return adapter;\n};\nfunction formatTransactionId(transactionId2) {\n  if (getColorDepth() < 8) {\n    return `#${transactionId2}`;\n  }\n  return `${TTY_COLORS.fg.magenta}#${transactionId2}${TTY_COLORS.reset}`;\n}\nfunction formatStep(step, total) {\n  return `${TTY_COLORS.bg.black}${TTY_COLORS.fg.yellow}[${step}/${total}]${TTY_COLORS.reset}`;\n}\nfunction formatMethod(method) {\n  return `${TTY_COLORS.bright}${method}${TTY_COLORS.reset}`;\n}\nfunction formatAction(action) {\n  return `${TTY_COLORS.dim}(${action})${TTY_COLORS.reset}`;\n}\n\nexport { createAdapterFactory as c };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 6778, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.CBTS2OzX.mjs"],"sourcesContent":["import { SqliteDialect, MysqlDialect, PostgresDialect, MssqlDialect, Kysely } from 'kysely';\nimport { c as createAdapterFactory } from './better-auth.EBxKeVNZ.mjs';\n\nfunction getKyselyDatabaseType(db) {\n  if (!db) {\n    return null;\n  }\n  if (\"dialect\" in db) {\n    return getKyselyDatabaseType(db.dialect);\n  }\n  if (\"createDriver\" in db) {\n    if (db instanceof SqliteDialect) {\n      return \"sqlite\";\n    }\n    if (db instanceof MysqlDialect) {\n      return \"mysql\";\n    }\n    if (db instanceof PostgresDialect) {\n      return \"postgres\";\n    }\n    if (db instanceof MssqlDialect) {\n      return \"mssql\";\n    }\n  }\n  if (\"aggregate\" in db) {\n    return \"sqlite\";\n  }\n  if (\"getConnection\" in db) {\n    return \"mysql\";\n  }\n  if (\"connect\" in db) {\n    return \"postgres\";\n  }\n  if (\"fileControl\" in db) {\n    return \"sqlite\";\n  }\n  if (\"open\" in db && \"close\" in db && \"prepare\" in db) {\n    return \"sqlite\";\n  }\n  return null;\n}\nconst createKyselyAdapter = async (config) => {\n  const db = config.database;\n  if (!db) {\n    return {\n      kysely: null,\n      databaseType: null,\n      transaction: void 0\n    };\n  }\n  if (\"db\" in db) {\n    return {\n      kysely: db.db,\n      databaseType: db.type,\n      transaction: db.transaction\n    };\n  }\n  if (\"dialect\" in db) {\n    return {\n      kysely: new Kysely({ dialect: db.dialect }),\n      databaseType: db.type,\n      transaction: db.transaction\n    };\n  }\n  let dialect = void 0;\n  const databaseType = getKyselyDatabaseType(db);\n  if (\"createDriver\" in db) {\n    dialect = db;\n  }\n  if (\"aggregate\" in db && !(\"createSession\" in db)) {\n    dialect = new SqliteDialect({\n      database: db\n    });\n  }\n  if (\"getConnection\" in db) {\n    dialect = new MysqlDialect(db);\n  }\n  if (\"connect\" in db) {\n    dialect = new PostgresDialect({\n      pool: db\n    });\n  }\n  if (\"fileControl\" in db) {\n    const { BunSqliteDialect } = await import('../chunks/bun-sqlite-dialect.mjs');\n    dialect = new BunSqliteDialect({\n      database: db\n    });\n  }\n  if (\"createSession\" in db && typeof window === \"undefined\") {\n    let DatabaseSync = void 0;\n    try {\n      let nodeSqlite = \"node:sqlite\";\n      ({ DatabaseSync } = await import(\n        /* @vite-ignore */\n        /* webpackIgnore: true */\n        nodeSqlite\n      ));\n    } catch (error) {\n      if (error !== null && typeof error === \"object\" && \"code\" in error && error.code !== \"ERR_UNKNOWN_BUILTIN_MODULE\") {\n        throw error;\n      }\n    }\n    if (DatabaseSync && db instanceof DatabaseSync) {\n      const { NodeSqliteDialect } = await import('../chunks/node-sqlite-dialect.mjs');\n      dialect = new NodeSqliteDialect({\n        database: db\n      });\n    }\n  }\n  return {\n    kysely: dialect ? new Kysely({ dialect }) : null,\n    databaseType,\n    transaction: void 0\n  };\n};\n\nconst kyselyAdapter = (db, config) => {\n  let lazyOptions = null;\n  const createCustomAdapter = (db2) => {\n    return ({ getFieldName, schema, getDefaultModelName }) => {\n      const withReturning = async (values, builder, model, where) => {\n        let res;\n        if (config?.type === \"mysql\") {\n          await builder.execute();\n          const field = values.id ? \"id\" : where.length > 0 && where[0]?.field ? where[0].field : \"id\";\n          if (!values.id && where.length === 0) {\n            res = await db2.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").limit(1).executeTakeFirst();\n            return res;\n          }\n          const value = values[field] || where[0]?.value;\n          res = await db2.selectFrom(model).selectAll().orderBy(getFieldName({ model, field }), \"desc\").where(getFieldName({ model, field }), \"=\", value).limit(1).executeTakeFirst();\n          return res;\n        }\n        if (config?.type === \"mssql\") {\n          res = await builder.outputAll(\"inserted\").executeTakeFirst();\n          return res;\n        }\n        res = await builder.returningAll().executeTakeFirst();\n        return res;\n      };\n      function transformValueToDB(value, model, field) {\n        if (field === \"id\") {\n          return value;\n        }\n        const { type = \"sqlite\" } = config || {};\n        let f = schema[model]?.fields[field];\n        if (!f) {\n          f = Object.values(schema).find((f2) => f2.modelName === model);\n        }\n        if (f.type === \"boolean\" && (type === \"sqlite\" || type === \"mssql\") && value !== null && value !== void 0) {\n          return value ? 1 : 0;\n        }\n        if (f.type === \"date\" && value && value instanceof Date) {\n          if (type === \"sqlite\") return value.toISOString();\n          return value;\n        }\n        return value;\n      }\n      function transformValueFromDB(value) {\n        function transformObject(obj) {\n          for (const key in obj) {\n            if (!Object.prototype.hasOwnProperty.call(obj, key)) continue;\n            const field = obj[key];\n            if (field instanceof Date && config?.type === \"mysql\") ; else if (typeof field === \"object\" && field !== null) {\n              transformObject(field);\n            }\n          }\n        }\n        if (Array.isArray(value)) {\n          for (let i = 0; i < value.length; i++) {\n            const item = value[i];\n            if (typeof item === \"object\" && item !== null) {\n              transformObject(item);\n            }\n          }\n        } else if (typeof value === \"object\" && value !== null) {\n          transformObject(value);\n        }\n        return value;\n      }\n      function convertWhereClause(model, w) {\n        if (!w)\n          return {\n            and: null,\n            or: null\n          };\n        const conditions = {\n          and: [],\n          or: []\n        };\n        w.forEach((condition) => {\n          let {\n            field: _field,\n            value,\n            operator = \"=\",\n            connector = \"AND\"\n          } = condition;\n          const field = getFieldName({ model, field: _field });\n          value = transformValueToDB(value, model, _field);\n          const expr = (eb) => {\n            if (operator.toLowerCase() === \"in\") {\n              return eb(field, \"in\", Array.isArray(value) ? value : [value]);\n            }\n            if (operator.toLowerCase() === \"not_in\") {\n              return eb(\n                field,\n                \"not in\",\n                Array.isArray(value) ? value : [value]\n              );\n            }\n            if (operator === \"contains\") {\n              return eb(field, \"like\", `%${value}%`);\n            }\n            if (operator === \"starts_with\") {\n              return eb(field, \"like\", `${value}%`);\n            }\n            if (operator === \"ends_with\") {\n              return eb(field, \"like\", `%${value}`);\n            }\n            if (operator === \"eq\") {\n              return eb(field, \"=\", value);\n            }\n            if (operator === \"ne\") {\n              return eb(field, \"<>\", value);\n            }\n            if (operator === \"gt\") {\n              return eb(field, \">\", value);\n            }\n            if (operator === \"gte\") {\n              return eb(field, \">=\", value);\n            }\n            if (operator === \"lt\") {\n              return eb(field, \"<\", value);\n            }\n            if (operator === \"lte\") {\n              return eb(field, \"<=\", value);\n            }\n            return eb(field, operator, value);\n          };\n          if (connector === \"OR\") {\n            conditions.or.push(expr);\n          } else {\n            conditions.and.push(expr);\n          }\n        });\n        return {\n          and: conditions.and.length ? conditions.and : null,\n          or: conditions.or.length ? conditions.or : null\n        };\n      }\n      return {\n        async create({ data, model }) {\n          const builder = db2.insertInto(model).values(data);\n          const returned = await withReturning(data, builder, model, []);\n          return transformValueFromDB(returned);\n        },\n        async findOne({ model, where, select }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.selectFrom(model).selectAll();\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          const res = await query.executeTakeFirst();\n          if (!res) return null;\n          return transformValueFromDB(res);\n        },\n        async findMany({ model, where, limit, offset, sortBy }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.selectFrom(model);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          if (config?.type === \"mssql\") {\n            if (!offset) {\n              query = query.top(limit || 100);\n            }\n          } else {\n            query = query.limit(limit || 100);\n          }\n          if (sortBy) {\n            query = query.orderBy(\n              getFieldName({ model, field: sortBy.field }),\n              sortBy.direction\n            );\n          }\n          if (offset) {\n            if (config?.type === \"mssql\") {\n              if (!sortBy) {\n                query = query.orderBy(getFieldName({ model, field: \"id\" }));\n              }\n              query = query.offset(offset).fetch(limit || 100);\n            } else {\n              query = query.offset(offset);\n            }\n          }\n          const res = await query.selectAll().execute();\n          if (!res) return [];\n          return transformValueFromDB(res);\n        },\n        async update({ model, where, update: values }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.updateTable(model).set(values);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          return transformValueFromDB(\n            await withReturning(values, query, model, where)\n          );\n        },\n        async updateMany({ model, where, update: values }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.updateTable(model).set(values);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          const res = await query.execute();\n          return res.length;\n        },\n        async count({ model, where }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.selectFrom(model).select(db2.fn.count(\"id\").as(\"count\"));\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          const res = await query.execute();\n          if (typeof res[0].count === \"number\") {\n            return res[0].count;\n          }\n          if (typeof res[0].count === \"bigint\") {\n            return Number(res[0].count);\n          }\n          return parseInt(res[0].count);\n        },\n        async delete({ model, where }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.deleteFrom(model);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          await query.execute();\n        },\n        async deleteMany({ model, where }) {\n          const { and, or } = convertWhereClause(model, where);\n          let query = db2.deleteFrom(model);\n          if (and) {\n            query = query.where((eb) => eb.and(and.map((expr) => expr(eb))));\n          }\n          if (or) {\n            query = query.where((eb) => eb.or(or.map((expr) => expr(eb))));\n          }\n          return (await query.execute()).length;\n        },\n        options: config\n      };\n    };\n  };\n  let adapterOptions = null;\n  adapterOptions = {\n    config: {\n      adapterId: \"kysely\",\n      adapterName: \"Kysely Adapter\",\n      usePlural: config?.usePlural,\n      debugLogs: config?.debugLogs,\n      supportsBooleans: config?.type === \"sqlite\" || config?.type === \"mssql\" || config?.type === \"mysql\" || !config?.type ? false : true,\n      supportsDates: config?.type === \"sqlite\" || config?.type === \"mssql\" || !config?.type ? false : true,\n      supportsJSON: false,\n      transaction: config?.transaction ?? false ? (cb) => db.transaction().execute((trx) => {\n        const adapter2 = createAdapterFactory({\n          config: adapterOptions.config,\n          adapter: createCustomAdapter(trx)\n        })(lazyOptions);\n        return cb(adapter2);\n      }) : false\n    },\n    adapter: createCustomAdapter(db)\n  };\n  const adapter = createAdapterFactory(adapterOptions);\n  return (options) => {\n    lazyOptions = options;\n    return adapter(options);\n  };\n};\n\nexport { createKyselyAdapter as c, getKyselyDatabaseType as g, kyselyAdapter as k };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7200, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.BNpIwq4C.mjs"],"sourcesContent":["import { logger } from '@better-auth/core/env';\nimport { c as createAdapterFactory } from './better-auth.EBxKeVNZ.mjs';\n\nconst memoryAdapter = (db, config) => {\n  let lazyOptions = null;\n  let adapterCreator = createAdapterFactory({\n    config: {\n      adapterId: \"memory\",\n      adapterName: \"Memory Adapter\",\n      usePlural: false,\n      debugLogs: config?.debugLogs || false,\n      customTransformInput(props) {\n        if (props.options.advanced?.database?.useNumberId && props.field === \"id\" && props.action === \"create\") {\n          return db[props.model].length + 1;\n        }\n        return props.data;\n      },\n      transaction: async (cb) => {\n        let clone = structuredClone(db);\n        try {\n          const r = await cb(adapterCreator(lazyOptions));\n          return r;\n        } catch (error) {\n          Object.keys(db).forEach((key) => {\n            db[key] = clone[key];\n          });\n          throw error;\n        }\n      }\n    },\n    adapter: ({ getFieldName, options, debugLog }) => {\n      function convertWhereClause(where, model) {\n        const table = db[model];\n        if (!table) {\n          logger.error(\n            `[MemoryAdapter] Model ${model} not found in the DB`,\n            Object.keys(db)\n          );\n          throw new Error(`Model ${model} not found`);\n        }\n        const evalClause = (record, clause) => {\n          const { field, value, operator } = clause;\n          switch (operator) {\n            case \"in\":\n              if (!Array.isArray(value)) {\n                throw new Error(\"Value must be an array\");\n              }\n              return value.includes(record[field]);\n            case \"not_in\":\n              if (!Array.isArray(value)) {\n                throw new Error(\"Value must be an array\");\n              }\n              return !value.includes(record[field]);\n            case \"contains\":\n              return record[field].includes(value);\n            case \"starts_with\":\n              return record[field].startsWith(value);\n            case \"ends_with\":\n              return record[field].endsWith(value);\n            case \"ne\":\n              return record[field] !== value;\n            case \"gt\":\n              return value != null && Boolean(record[field] > value);\n            case \"gte\":\n              return value != null && Boolean(record[field] >= value);\n            case \"lt\":\n              return value != null && Boolean(record[field] < value);\n            case \"lte\":\n              return value != null && Boolean(record[field] <= value);\n            default:\n              return record[field] === value;\n          }\n        };\n        return table.filter((record) => {\n          if (!where.length || where.length === 0) {\n            return true;\n          }\n          let result = evalClause(record, where[0]);\n          for (const clause of where) {\n            const clauseResult = evalClause(record, clause);\n            if (clause.connector === \"OR\") {\n              result = result || clauseResult;\n            } else {\n              result = result && clauseResult;\n            }\n          }\n          return result;\n        });\n      }\n      return {\n        create: async ({ model, data }) => {\n          if (options.advanced?.database?.useNumberId) {\n            data.id = db[model].length + 1;\n          }\n          if (!db[model]) {\n            db[model] = [];\n          }\n          db[model].push(data);\n          return data;\n        },\n        findOne: async ({ model, where }) => {\n          const res = convertWhereClause(where, model);\n          const record = res[0] || null;\n          return record;\n        },\n        findMany: async ({ model, where, sortBy, limit, offset }) => {\n          let table = db[model];\n          if (where) {\n            table = convertWhereClause(where, model);\n          }\n          if (sortBy) {\n            table = table.sort((a, b) => {\n              const field = getFieldName({ model, field: sortBy.field });\n              const aValue = a[field];\n              const bValue = b[field];\n              let comparison = 0;\n              if (aValue == null && bValue == null) {\n                comparison = 0;\n              } else if (aValue == null) {\n                comparison = -1;\n              } else if (bValue == null) {\n                comparison = 1;\n              } else if (typeof aValue === \"string\" && typeof bValue === \"string\") {\n                comparison = aValue.localeCompare(bValue);\n              } else if (aValue instanceof Date && bValue instanceof Date) {\n                comparison = aValue.getTime() - bValue.getTime();\n              } else if (typeof aValue === \"number\" && typeof bValue === \"number\") {\n                comparison = aValue - bValue;\n              } else if (typeof aValue === \"boolean\" && typeof bValue === \"boolean\") {\n                comparison = aValue === bValue ? 0 : aValue ? 1 : -1;\n              } else {\n                comparison = String(aValue).localeCompare(String(bValue));\n              }\n              return sortBy.direction === \"asc\" ? comparison : -comparison;\n            });\n          }\n          if (offset !== void 0) {\n            table = table.slice(offset);\n          }\n          if (limit !== void 0) {\n            table = table.slice(0, limit);\n          }\n          return table || [];\n        },\n        count: async ({ model, where }) => {\n          if (where) {\n            const filteredRecords = convertWhereClause(where, model);\n            return filteredRecords.length;\n          }\n          return db[model].length;\n        },\n        update: async ({ model, where, update }) => {\n          const res = convertWhereClause(where, model);\n          res.forEach((record) => {\n            Object.assign(record, update);\n          });\n          return res[0] || null;\n        },\n        delete: async ({ model, where }) => {\n          const table = db[model];\n          const res = convertWhereClause(where, model);\n          db[model] = table.filter((record) => !res.includes(record));\n        },\n        deleteMany: async ({ model, where }) => {\n          const table = db[model];\n          const res = convertWhereClause(where, model);\n          let count = 0;\n          db[model] = table.filter((record) => {\n            if (res.includes(record)) {\n              count++;\n              return false;\n            }\n            return !res.includes(record);\n          });\n          return count;\n        },\n        updateMany({ model, where, update }) {\n          const res = convertWhereClause(where, model);\n          res.forEach((record) => {\n            Object.assign(record, update);\n          });\n          return res[0] || null;\n        }\n      };\n    }\n  });\n  return (options) => {\n    lazyOptions = options;\n    return adapterCreator(options);\n  };\n};\n\nexport { memoryAdapter as m };\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,gBAAgB,CAAC,IAAI;IACzB,IAAI,cAAc;IAClB,IAAI,iBAAiB,CAAA,GAAA,iYAAA,CAAA,IAAoB,AAAD,EAAE;QACxC,QAAQ;YACN,WAAW;YACX,aAAa;YACb,WAAW;YACX,WAAW,QAAQ,aAAa;YAChC,sBAAqB,KAAK;gBACxB,IAAI,MAAM,OAAO,CAAC,QAAQ,EAAE,UAAU,eAAe,MAAM,KAAK,KAAK,QAAQ,MAAM,MAAM,KAAK,UAAU;oBACtG,OAAO,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,GAAG;gBAClC;gBACA,OAAO,MAAM,IAAI;YACnB;YACA,aAAa,OAAO;gBAClB,IAAI,QAAQ,gBAAgB;gBAC5B,IAAI;oBACF,MAAM,IAAI,MAAM,GAAG,eAAe;oBAClC,OAAO;gBACT,EAAE,OAAO,OAAO;oBACd,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC;wBACvB,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI;oBACtB;oBACA,MAAM;gBACR;YACF;QACF;QACA,SAAS,CAAC,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE;YAC3C,SAAS,mBAAmB,KAAK,EAAE,KAAK;gBACtC,MAAM,QAAQ,EAAE,CAAC,MAAM;gBACvB,IAAI,CAAC,OAAO;oBACV,uXAAA,CAAA,SAAM,CAAC,KAAK,CACV,CAAC,sBAAsB,EAAE,MAAM,oBAAoB,CAAC,EACpD,OAAO,IAAI,CAAC;oBAEd,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,UAAU,CAAC;gBAC5C;gBACA,MAAM,aAAa,CAAC,QAAQ;oBAC1B,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;oBACnC,OAAQ;wBACN,KAAK;4BACH,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ;gCACzB,MAAM,IAAI,MAAM;4BAClB;4BACA,OAAO,MAAM,QAAQ,CAAC,MAAM,CAAC,MAAM;wBACrC,KAAK;4BACH,IAAI,CAAC,MAAM,OAAO,CAAC,QAAQ;gCACzB,MAAM,IAAI,MAAM;4BAClB;4BACA,OAAO,CAAC,MAAM,QAAQ,CAAC,MAAM,CAAC,MAAM;wBACtC,KAAK;4BACH,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAChC,KAAK;4BACH,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;wBAClC,KAAK;4BACH,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;wBAChC,KAAK;4BACH,OAAO,MAAM,CAAC,MAAM,KAAK;wBAC3B,KAAK;4BACH,OAAO,SAAS,QAAQ,QAAQ,MAAM,CAAC,MAAM,GAAG;wBAClD,KAAK;4BACH,OAAO,SAAS,QAAQ,QAAQ,MAAM,CAAC,MAAM,IAAI;wBACnD,KAAK;4BACH,OAAO,SAAS,QAAQ,QAAQ,MAAM,CAAC,MAAM,GAAG;wBAClD,KAAK;4BACH,OAAO,SAAS,QAAQ,QAAQ,MAAM,CAAC,MAAM,IAAI;wBACnD;4BACE,OAAO,MAAM,CAAC,MAAM,KAAK;oBAC7B;gBACF;gBACA,OAAO,MAAM,MAAM,CAAC,CAAC;oBACnB,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM,MAAM,KAAK,GAAG;wBACvC,OAAO;oBACT;oBACA,IAAI,SAAS,WAAW,QAAQ,KAAK,CAAC,EAAE;oBACxC,KAAK,MAAM,UAAU,MAAO;wBAC1B,MAAM,eAAe,WAAW,QAAQ;wBACxC,IAAI,OAAO,SAAS,KAAK,MAAM;4BAC7B,SAAS,UAAU;wBACrB,OAAO;4BACL,SAAS,UAAU;wBACrB;oBACF;oBACA,OAAO;gBACT;YACF;YACA,OAAO;gBACL,QAAQ,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE;oBAC5B,IAAI,QAAQ,QAAQ,EAAE,UAAU,aAAa;wBAC3C,KAAK,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,GAAG;oBAC/B;oBACA,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE;wBACd,EAAE,CAAC,MAAM,GAAG,EAAE;oBAChB;oBACA,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;oBACf,OAAO;gBACT;gBACA,SAAS,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC9B,MAAM,MAAM,mBAAmB,OAAO;oBACtC,MAAM,SAAS,GAAG,CAAC,EAAE,IAAI;oBACzB,OAAO;gBACT;gBACA,UAAU,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;oBACtD,IAAI,QAAQ,EAAE,CAAC,MAAM;oBACrB,IAAI,OAAO;wBACT,QAAQ,mBAAmB,OAAO;oBACpC;oBACA,IAAI,QAAQ;wBACV,QAAQ,MAAM,IAAI,CAAC,CAAC,GAAG;4BACrB,MAAM,QAAQ,aAAa;gCAAE;gCAAO,OAAO,OAAO,KAAK;4BAAC;4BACxD,MAAM,SAAS,CAAC,CAAC,MAAM;4BACvB,MAAM,SAAS,CAAC,CAAC,MAAM;4BACvB,IAAI,aAAa;4BACjB,IAAI,UAAU,QAAQ,UAAU,MAAM;gCACpC,aAAa;4BACf,OAAO,IAAI,UAAU,MAAM;gCACzB,aAAa,CAAC;4BAChB,OAAO,IAAI,UAAU,MAAM;gCACzB,aAAa;4BACf,OAAO,IAAI,OAAO,WAAW,YAAY,OAAO,WAAW,UAAU;gCACnE,aAAa,OAAO,aAAa,CAAC;4BACpC,OAAO,IAAI,kBAAkB,QAAQ,kBAAkB,MAAM;gCAC3D,aAAa,OAAO,OAAO,KAAK,OAAO,OAAO;4BAChD,OAAO,IAAI,OAAO,WAAW,YAAY,OAAO,WAAW,UAAU;gCACnE,aAAa,SAAS;4BACxB,OAAO,IAAI,OAAO,WAAW,aAAa,OAAO,WAAW,WAAW;gCACrE,aAAa,WAAW,SAAS,IAAI,SAAS,IAAI,CAAC;4BACrD,OAAO;gCACL,aAAa,OAAO,QAAQ,aAAa,CAAC,OAAO;4BACnD;4BACA,OAAO,OAAO,SAAS,KAAK,QAAQ,aAAa,CAAC;wBACpD;oBACF;oBACA,IAAI,WAAW,KAAK,GAAG;wBACrB,QAAQ,MAAM,KAAK,CAAC;oBACtB;oBACA,IAAI,UAAU,KAAK,GAAG;wBACpB,QAAQ,MAAM,KAAK,CAAC,GAAG;oBACzB;oBACA,OAAO,SAAS,EAAE;gBACpB;gBACA,OAAO,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC5B,IAAI,OAAO;wBACT,MAAM,kBAAkB,mBAAmB,OAAO;wBAClD,OAAO,gBAAgB,MAAM;oBAC/B;oBACA,OAAO,EAAE,CAAC,MAAM,CAAC,MAAM;gBACzB;gBACA,QAAQ,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;oBACrC,MAAM,MAAM,mBAAmB,OAAO;oBACtC,IAAI,OAAO,CAAC,CAAC;wBACX,OAAO,MAAM,CAAC,QAAQ;oBACxB;oBACA,OAAO,GAAG,CAAC,EAAE,IAAI;gBACnB;gBACA,QAAQ,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBAC7B,MAAM,QAAQ,EAAE,CAAC,MAAM;oBACvB,MAAM,MAAM,mBAAmB,OAAO;oBACtC,EAAE,CAAC,MAAM,GAAG,MAAM,MAAM,CAAC,CAAC,SAAW,CAAC,IAAI,QAAQ,CAAC;gBACrD;gBACA,YAAY,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBACjC,MAAM,QAAQ,EAAE,CAAC,MAAM;oBACvB,MAAM,MAAM,mBAAmB,OAAO;oBACtC,IAAI,QAAQ;oBACZ,EAAE,CAAC,MAAM,GAAG,MAAM,MAAM,CAAC,CAAC;wBACxB,IAAI,IAAI,QAAQ,CAAC,SAAS;4BACxB;4BACA,OAAO;wBACT;wBACA,OAAO,CAAC,IAAI,QAAQ,CAAC;oBACvB;oBACA,OAAO;gBACT;gBACA,YAAW,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;oBACjC,MAAM,MAAM,mBAAmB,OAAO;oBACtC,IAAI,OAAO,CAAC,CAAC;wBACX,OAAO,MAAM,CAAC,QAAQ;oBACxB;oBACA,OAAO,GAAG,CAAC,EAAE,IAAI;gBACnB;YACF;QACF;IACF;IACA,OAAO,CAAC;QACN,cAAc;QACd,OAAO,eAAe;IACxB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7400, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.RLDtNcHN.mjs"],"sourcesContent":["import { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { b as parseSessionOutput, p as parseUserOutput } from './better-auth.Cwj9dt6i.mjs';\nimport { g as getIp } from './better-auth.ClH5r3NH.mjs';\nimport { s as safeJSONParse } from './better-auth.BKEtEpt0.mjs';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport 'zod';\nimport 'better-call';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport { BetterAuthError } from '@better-auth/core/error';\nimport './better-auth.B4Qoxdgc.mjs';\nimport '@better-auth/core/db';\nimport { logger, createLogger } from '@better-auth/core/env';\nimport '@better-auth/utils/random';\nimport { g as getAuthTables } from './better-auth.pQjeRkzN.mjs';\nimport { c as createKyselyAdapter, k as kyselyAdapter } from './better-auth.CBTS2OzX.mjs';\nimport { m as memoryAdapter } from './better-auth.BNpIwq4C.mjs';\nimport { sql } from 'kysely';\n\nfunction getWithHooks(adapter, ctx) {\n  const hooks = ctx.hooks;\n  async function createWithHooks(data, model, customCreateFn, context, trxAdapter) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.before;\n      if (toRun) {\n        const result = await toRun(actualData, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\" && \"data\" in result;\n        if (isObject) {\n          actualData = {\n            ...actualData,\n            ...result.data\n          };\n        }\n      }\n    }\n    const customCreated = customCreateFn ? await customCreateFn.fn(actualData) : null;\n    const created = !customCreateFn || customCreateFn.executeMainFn ? await (trxAdapter || adapter).create({\n      model,\n      data: actualData,\n      forceAllowId: true\n    }) : customCreated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.create?.after;\n      if (toRun) {\n        await toRun(created, context);\n      }\n    }\n    return created;\n  }\n  async function updateWithHooks(data, where, model, customUpdateFn, context, trxAdapter) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await (trxAdapter || adapter).update({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  async function updateManyWithHooks(data, where, model, customUpdateFn, context, trxAdapter) {\n    let actualData = data;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.before;\n      if (toRun) {\n        const result = await toRun(data, context);\n        if (result === false) {\n          return null;\n        }\n        const isObject = typeof result === \"object\";\n        actualData = isObject ? result.data : result;\n      }\n    }\n    const customUpdated = customUpdateFn ? await customUpdateFn.fn(actualData) : null;\n    const updated = !customUpdateFn || customUpdateFn.executeMainFn ? await (trxAdapter || adapter).updateMany({\n      model,\n      update: actualData,\n      where\n    }) : customUpdated;\n    for (const hook of hooks || []) {\n      const toRun = hook[model]?.update?.after;\n      if (toRun) {\n        await toRun(updated, context);\n      }\n    }\n    return updated;\n  }\n  return {\n    createWithHooks,\n    updateWithHooks,\n    updateManyWithHooks\n  };\n}\n\nconst createInternalAdapter = (adapter, ctx) => {\n  const logger = ctx.logger;\n  const options = ctx.options;\n  const secondaryStorage = options.secondaryStorage;\n  const sessionExpiration = options.session?.expiresIn || 60 * 60 * 24 * 7;\n  const { createWithHooks, updateWithHooks, updateManyWithHooks } = getWithHooks(adapter, ctx);\n  async function refreshUserSessions(user) {\n    if (!secondaryStorage) return;\n    const listRaw = await secondaryStorage.get(`active-sessions-${user.id}`);\n    if (!listRaw) return;\n    const now = Date.now();\n    const list = safeJSONParse(listRaw) || [];\n    const validSessions = list.filter((s) => s.expiresAt > now);\n    await Promise.all(\n      validSessions.map(async ({ token }) => {\n        const cached = await secondaryStorage.get(token);\n        if (!cached) return;\n        const parsed = safeJSONParse(cached);\n        if (!parsed) return;\n        const sessionTTL = Math.max(\n          Math.floor(new Date(parsed.session.expiresAt).getTime() - now) / 1e3,\n          0\n        );\n        await secondaryStorage.set(\n          token,\n          JSON.stringify({\n            session: parsed.session,\n            user\n          }),\n          Math.floor(sessionTTL)\n        );\n      })\n    );\n  }\n  return {\n    createOAuthUser: async (user, account, context) => {\n      return adapter.transaction(async (trxAdapter) => {\n        const createdUser = await createWithHooks(\n          {\n            // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n            createdAt: /* @__PURE__ */ new Date(),\n            updatedAt: /* @__PURE__ */ new Date(),\n            ...user\n          },\n          \"user\",\n          void 0,\n          context,\n          trxAdapter\n        );\n        const createdAccount = await createWithHooks(\n          {\n            ...account,\n            userId: createdUser.id,\n            // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n            createdAt: /* @__PURE__ */ new Date(),\n            updatedAt: /* @__PURE__ */ new Date()\n          },\n          \"account\",\n          void 0,\n          context,\n          trxAdapter\n        );\n        return {\n          user: createdUser,\n          account: createdAccount\n        };\n      });\n    },\n    createUser: async (user, context, trxAdapter) => {\n      const createdUser = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...user,\n          email: user.email?.toLowerCase()\n        },\n        \"user\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return createdUser;\n    },\n    createAccount: async (account, context, trxAdapter) => {\n      const createdAccount = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return createdAccount;\n    },\n    listSessions: async (userId, trxAdapter) => {\n      if (secondaryStorage) {\n        const currentList = await secondaryStorage.get(\n          `active-sessions-${userId}`\n        );\n        if (!currentList) return [];\n        const list = safeJSONParse(currentList) || [];\n        const now = Date.now();\n        const validSessions = list.filter((s) => s.expiresAt > now);\n        const sessions2 = [];\n        for (const session of validSessions) {\n          const sessionStringified = await secondaryStorage.get(session.token);\n          if (sessionStringified) {\n            const s = safeJSONParse(sessionStringified);\n            if (!s) return [];\n            const parsedSession = parseSessionOutput(ctx.options, {\n              ...s.session,\n              expiresAt: new Date(s.session.expiresAt)\n            });\n            sessions2.push(parsedSession);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await (trxAdapter || adapter).findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return sessions;\n    },\n    listUsers: async (limit, offset, sortBy, where, trxAdapter) => {\n      const users = await (trxAdapter || adapter).findMany({\n        model: \"user\",\n        limit,\n        offset,\n        sortBy,\n        where\n      });\n      return users;\n    },\n    countTotalUsers: async (where, trxAdapter) => {\n      const total = await (trxAdapter || adapter).count({\n        model: \"user\",\n        where\n      });\n      if (typeof total === \"string\") {\n        return parseInt(total);\n      }\n      return total;\n    },\n    deleteUser: async (userId, trxAdapter) => {\n      if (secondaryStorage) {\n        await secondaryStorage.delete(`active-sessions-${userId}`);\n      }\n      if (!secondaryStorage || options.session?.storeSessionInDatabase) {\n        await (trxAdapter || adapter).deleteMany({\n          model: \"session\",\n          where: [\n            {\n              field: \"userId\",\n              value: userId\n            }\n          ]\n        });\n      }\n      await (trxAdapter || adapter).deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      await (trxAdapter || adapter).delete({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n    },\n    createSession: async (userId, ctx2, dontRememberMe, override, overrideAll, trxAdapter) => {\n      const headers = ctx2.headers || ctx2.request?.headers;\n      const { id: _, ...rest } = override || {};\n      const data = {\n        ipAddress: ctx2.request || ctx2.headers ? getIp(ctx2.request || ctx2.headers, ctx2.context.options) || \"\" : \"\",\n        userAgent: headers?.get(\"user-agent\") || \"\",\n        ...rest,\n        /**\n         * If the user doesn't want to be remembered\n         * set the session to expire in 1 day.\n         * The cookie will be set to expire at the end of the session\n         */\n        expiresAt: dontRememberMe ? getDate(60 * 60 * 24, \"sec\") : getDate(sessionExpiration, \"sec\"),\n        userId,\n        token: generateId(32),\n        // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        ...overrideAll ? rest : {}\n      };\n      const res = await createWithHooks(\n        data,\n        \"session\",\n        secondaryStorage ? {\n          fn: async (sessionData) => {\n            const currentList = await secondaryStorage.get(\n              `active-sessions-${userId}`\n            );\n            let list = [];\n            const now = Date.now();\n            if (currentList) {\n              list = safeJSONParse(currentList) || [];\n              list = list.filter((session) => session.expiresAt > now);\n            }\n            const sorted = list.sort((a, b) => a.expiresAt - b.expiresAt);\n            let furthestSessionExp = sorted.at(-1)?.expiresAt;\n            sorted.push({\n              token: data.token,\n              expiresAt: data.expiresAt.getTime()\n            });\n            if (!furthestSessionExp || furthestSessionExp < data.expiresAt.getTime()) {\n              furthestSessionExp = data.expiresAt.getTime();\n            }\n            const furthestSessionTTL = Math.max(\n              Math.floor((furthestSessionExp - now) / 1e3),\n              0\n            );\n            if (furthestSessionTTL > 0) {\n              await secondaryStorage.set(\n                `active-sessions-${userId}`,\n                JSON.stringify(sorted),\n                furthestSessionTTL\n              );\n            }\n            const user = await adapter.findOne({\n              model: \"user\",\n              where: [\n                {\n                  field: \"id\",\n                  value: userId\n                }\n              ]\n            });\n            const sessionTTL = Math.max(\n              Math.floor((data.expiresAt.getTime() - now) / 1e3),\n              0\n            );\n            if (sessionTTL > 0) {\n              await secondaryStorage.set(\n                data.token,\n                JSON.stringify({\n                  session: sessionData,\n                  user\n                }),\n                sessionTTL\n              );\n            }\n            return sessionData;\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        ctx2,\n        trxAdapter\n      );\n      return res;\n    },\n    findSession: async (token, trxAdapter) => {\n      if (secondaryStorage) {\n        const sessionStringified = await secondaryStorage.get(token);\n        if (!sessionStringified && !options.session?.storeSessionInDatabase) {\n          return null;\n        }\n        if (sessionStringified) {\n          const s = safeJSONParse(sessionStringified);\n          if (!s) return null;\n          const parsedSession2 = parseSessionOutput(ctx.options, {\n            ...s.session,\n            expiresAt: new Date(s.session.expiresAt),\n            createdAt: new Date(s.session.createdAt),\n            updatedAt: new Date(s.session.updatedAt)\n          });\n          const parsedUser2 = parseUserOutput(ctx.options, {\n            ...s.user,\n            createdAt: new Date(s.user.createdAt),\n            updatedAt: new Date(s.user.updatedAt)\n          });\n          return {\n            session: parsedSession2,\n            user: parsedUser2\n          };\n        }\n      }\n      const session = await (trxAdapter || adapter).findOne({\n        model: \"session\",\n        where: [\n          {\n            value: token,\n            field: \"token\"\n          }\n        ]\n      });\n      if (!session) {\n        return null;\n      }\n      const user = await (trxAdapter || adapter).findOne({\n        model: \"user\",\n        where: [\n          {\n            value: session.userId,\n            field: \"id\"\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      const parsedSession = parseSessionOutput(ctx.options, session);\n      const parsedUser = parseUserOutput(ctx.options, user);\n      return {\n        session: parsedSession,\n        user: parsedUser\n      };\n    },\n    findSessions: async (sessionTokens, trxAdapter) => {\n      if (secondaryStorage) {\n        const sessions2 = [];\n        for (const sessionToken of sessionTokens) {\n          const sessionStringified = await secondaryStorage.get(sessionToken);\n          if (sessionStringified) {\n            const s = safeJSONParse(sessionStringified);\n            if (!s) return [];\n            const session = {\n              session: {\n                ...s.session,\n                expiresAt: new Date(s.session.expiresAt)\n              },\n              user: {\n                ...s.user,\n                createdAt: new Date(s.user.createdAt),\n                updatedAt: new Date(s.user.updatedAt)\n              }\n            };\n            sessions2.push(session);\n          }\n        }\n        return sessions2;\n      }\n      const sessions = await (trxAdapter || adapter).findMany({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: sessionTokens,\n            operator: \"in\"\n          }\n        ]\n      });\n      const userIds = sessions.map((session) => {\n        return session.userId;\n      });\n      if (!userIds.length) return [];\n      const users = await (trxAdapter || adapter).findMany({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userIds,\n            operator: \"in\"\n          }\n        ]\n      });\n      return sessions.map((session) => {\n        const user = users.find((u) => u.id === session.userId);\n        if (!user) return null;\n        return {\n          session,\n          user\n        };\n      });\n    },\n    updateSession: async (sessionToken, session, context, trxAdapter) => {\n      const updatedSession = await updateWithHooks(\n        session,\n        [{ field: \"token\", value: sessionToken }],\n        \"session\",\n        secondaryStorage ? {\n          async fn(data) {\n            const currentSession = await secondaryStorage.get(sessionToken);\n            let updatedSession2 = null;\n            if (currentSession) {\n              const parsedSession = safeJSONParse(currentSession);\n              if (!parsedSession) return null;\n              updatedSession2 = {\n                ...parsedSession.session,\n                ...data\n              };\n              return updatedSession2;\n            } else {\n              return null;\n            }\n          },\n          executeMainFn: options.session?.storeSessionInDatabase\n        } : void 0,\n        context,\n        trxAdapter\n      );\n      return updatedSession;\n    },\n    deleteSession: async (token, trxAdapter) => {\n      if (secondaryStorage) {\n        const data = await secondaryStorage.get(token);\n        if (data) {\n          const { session } = safeJSONParse(data) ?? {};\n          if (!session) {\n            logger.error(\"Session not found in secondary storage\");\n            return;\n          }\n          const userId = session.userId;\n          const currentList = await secondaryStorage.get(\n            `active-sessions-${userId}`\n          );\n          if (currentList) {\n            let list = safeJSONParse(currentList) || [];\n            const now = Date.now();\n            const filtered = list.filter(\n              (session2) => session2.expiresAt > now && session2.token !== token\n            );\n            const sorted = filtered.sort((a, b) => a.expiresAt - b.expiresAt);\n            const furthestSessionExp = sorted.at(-1)?.expiresAt;\n            if (filtered.length > 0 && furthestSessionExp && furthestSessionExp > Date.now()) {\n              await secondaryStorage.set(\n                `active-sessions-${userId}`,\n                JSON.stringify(filtered),\n                Math.floor((furthestSessionExp - now) / 1e3)\n              );\n            } else {\n              await secondaryStorage.delete(`active-sessions-${userId}`);\n            }\n          } else {\n            logger.error(\"Active sessions list not found in secondary storage\");\n          }\n        }\n        await secondaryStorage.delete(token);\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await (trxAdapter || adapter).delete({\n        model: \"session\",\n        where: [\n          {\n            field: \"token\",\n            value: token\n          }\n        ]\n      });\n    },\n    deleteAccounts: async (userId, trxAdapter) => {\n      await (trxAdapter || adapter).deleteMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n    },\n    deleteAccount: async (accountId, trxAdapter) => {\n      await (trxAdapter || adapter).delete({\n        model: \"account\",\n        where: [\n          {\n            field: \"id\",\n            value: accountId\n          }\n        ]\n      });\n    },\n    deleteSessions: async (userIdOrSessionTokens, trxAdapter) => {\n      if (secondaryStorage) {\n        if (typeof userIdOrSessionTokens === \"string\") {\n          const activeSession = await secondaryStorage.get(\n            `active-sessions-${userIdOrSessionTokens}`\n          );\n          const sessions = activeSession ? safeJSONParse(activeSession) : [];\n          if (!sessions) return;\n          for (const session of sessions) {\n            await secondaryStorage.delete(session.token);\n          }\n        } else {\n          for (const sessionToken of userIdOrSessionTokens) {\n            const session = await secondaryStorage.get(sessionToken);\n            if (session) {\n              await secondaryStorage.delete(sessionToken);\n            }\n          }\n        }\n        if (!options.session?.storeSessionInDatabase || ctx.options.session?.preserveSessionInDatabase) {\n          return;\n        }\n      }\n      await (trxAdapter || adapter).deleteMany({\n        model: \"session\",\n        where: [\n          {\n            field: Array.isArray(userIdOrSessionTokens) ? \"token\" : \"userId\",\n            value: userIdOrSessionTokens,\n            operator: Array.isArray(userIdOrSessionTokens) ? \"in\" : void 0\n          }\n        ]\n      });\n    },\n    findOAuthUser: async (email, accountId, providerId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findMany({\n        model: \"account\",\n        where: [\n          {\n            value: accountId,\n            field: \"accountId\"\n          }\n        ]\n      }).then((accounts) => {\n        return accounts.find((a) => a.providerId === providerId);\n      });\n      if (account) {\n        const user = await (trxAdapter || adapter).findOne({\n          model: \"user\",\n          where: [\n            {\n              value: account.userId,\n              field: \"id\"\n            }\n          ]\n        });\n        if (user) {\n          return {\n            user,\n            accounts: [account]\n          };\n        } else {\n          const user2 = await (trxAdapter || adapter).findOne({\n            model: \"user\",\n            where: [\n              {\n                value: email.toLowerCase(),\n                field: \"email\"\n              }\n            ]\n          });\n          if (user2) {\n            return {\n              user: user2,\n              accounts: [account]\n            };\n          }\n          return null;\n        }\n      } else {\n        const user = await (trxAdapter || adapter).findOne({\n          model: \"user\",\n          where: [\n            {\n              value: email.toLowerCase(),\n              field: \"email\"\n            }\n          ]\n        });\n        if (user) {\n          const accounts = await (trxAdapter || adapter).findMany({\n            model: \"account\",\n            where: [\n              {\n                value: user.id,\n                field: \"userId\"\n              }\n            ]\n          });\n          return {\n            user,\n            accounts: accounts || []\n          };\n        } else {\n          return null;\n        }\n      }\n    },\n    findUserByEmail: async (email, options2, trxAdapter) => {\n      const user = await (trxAdapter || adapter).findOne({\n        model: \"user\",\n        where: [\n          {\n            value: email.toLowerCase(),\n            field: \"email\"\n          }\n        ]\n      });\n      if (!user) return null;\n      if (options2?.includeAccounts) {\n        const accounts = await (trxAdapter || adapter).findMany({\n          model: \"account\",\n          where: [\n            {\n              value: user.id,\n              field: \"userId\"\n            }\n          ]\n        });\n        return {\n          user,\n          accounts\n        };\n      }\n      return {\n        user,\n        accounts: []\n      };\n    },\n    findUserById: async (userId, trxAdapter) => {\n      const user = await (trxAdapter || adapter).findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ]\n      });\n      return user;\n    },\n    linkAccount: async (account, context, trxAdapter) => {\n      const _account = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...account\n        },\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return _account;\n    },\n    updateUser: async (userId, data, context, trxAdapter) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"id\",\n            value: userId\n          }\n        ],\n        \"user\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      await refreshUserSessions(user);\n      await refreshUserSessions(user);\n      return user;\n    },\n    updateUserByEmail: async (email, data, context, trxAdapter) => {\n      const user = await updateWithHooks(\n        data,\n        [\n          {\n            field: \"email\",\n            value: email.toLowerCase()\n          }\n        ],\n        \"user\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      await refreshUserSessions(user);\n      await refreshUserSessions(user);\n      return user;\n    },\n    updatePassword: async (userId, password, context, trxAdapter) => {\n      await updateManyWithHooks(\n        {\n          password\n        },\n        [\n          {\n            field: \"userId\",\n            value: userId\n          },\n          {\n            field: \"providerId\",\n            value: \"credential\"\n          }\n        ],\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n    },\n    findAccounts: async (userId, trxAdapter) => {\n      const accounts = await (trxAdapter || adapter).findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return accounts;\n    },\n    findAccount: async (accountId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByProviderId: async (accountId, providerId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findOne({\n        model: \"account\",\n        where: [\n          {\n            field: \"accountId\",\n            value: accountId\n          },\n          {\n            field: \"providerId\",\n            value: providerId\n          }\n        ]\n      });\n      return account;\n    },\n    findAccountByUserId: async (userId, trxAdapter) => {\n      const account = await (trxAdapter || adapter).findMany({\n        model: \"account\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      return account;\n    },\n    updateAccount: async (id, data, context, trxAdapter) => {\n      const account = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"account\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return account;\n    },\n    createVerificationValue: async (data, context, trxAdapter) => {\n      const verification = await createWithHooks(\n        {\n          // todo: we should remove auto setting createdAt and updatedAt in the next major release, since the db generators already handle that\n          createdAt: /* @__PURE__ */ new Date(),\n          updatedAt: /* @__PURE__ */ new Date(),\n          ...data\n        },\n        \"verification\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return verification;\n    },\n    findVerificationValue: async (identifier, trxAdapter) => {\n      const verification = await (trxAdapter || adapter).findMany(\n        {\n          model: \"verification\",\n          where: [\n            {\n              field: \"identifier\",\n              value: identifier\n            }\n          ],\n          sortBy: {\n            field: \"createdAt\",\n            direction: \"desc\"\n          },\n          limit: 1\n        }\n      );\n      if (!options.verification?.disableCleanup) {\n        await (trxAdapter || adapter).deleteMany({\n          model: \"verification\",\n          where: [\n            {\n              field: \"expiresAt\",\n              value: /* @__PURE__ */ new Date(),\n              operator: \"lt\"\n            }\n          ]\n        });\n      }\n      const lastVerification = verification[0];\n      return lastVerification;\n    },\n    deleteVerificationValue: async (id, trxAdapter) => {\n      await (trxAdapter || adapter).delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"id\",\n            value: id\n          }\n        ]\n      });\n    },\n    deleteVerificationByIdentifier: async (identifier, trxAdapter) => {\n      await (trxAdapter || adapter).delete({\n        model: \"verification\",\n        where: [\n          {\n            field: \"identifier\",\n            value: identifier\n          }\n        ]\n      });\n    },\n    updateVerificationValue: async (id, data, context, trxAdapter) => {\n      const verification = await updateWithHooks(\n        data,\n        [{ field: \"id\", value: id }],\n        \"verification\",\n        void 0,\n        context,\n        trxAdapter\n      );\n      return verification;\n    }\n  };\n};\n\nasync function getAdapter(options) {\n  if (!options.database) {\n    const tables = getAuthTables(options);\n    const memoryDB = Object.keys(tables).reduce((acc, key) => {\n      acc[key] = [];\n      return acc;\n    }, {});\n    logger.warn(\n      \"No database configuration provided. Using memory adapter in development\"\n    );\n    return memoryAdapter(memoryDB)(options);\n  }\n  if (typeof options.database === \"function\") {\n    return options.database(options);\n  }\n  const { kysely, databaseType, transaction } = await createKyselyAdapter(options);\n  if (!kysely) {\n    throw new BetterAuthError(\"Failed to initialize database adapter\");\n  }\n  return kyselyAdapter(kysely, {\n    type: databaseType || \"sqlite\",\n    debugLogs: \"debugLogs\" in options.database ? options.database.debugLogs : false,\n    transaction\n  })(options);\n}\nfunction convertToDB(fields, values) {\n  let result = values.id ? {\n    id: values.id\n  } : {};\n  for (const key in fields) {\n    const field = fields[key];\n    const value = values[key];\n    if (value === void 0) {\n      continue;\n    }\n    result[field.fieldName || key] = value;\n  }\n  return result;\n}\nfunction convertFromDB(fields, values) {\n  if (!values) {\n    return null;\n  }\n  let result = {\n    id: values.id\n  };\n  for (const [key, value] of Object.entries(fields)) {\n    result[key] = values[value.fieldName || key];\n  }\n  return result;\n}\n\nfunction getSchema(config) {\n  const tables = getAuthTables(config);\n  let schema = {};\n  for (const key in tables) {\n    const table = tables[key];\n    const fields = table.fields;\n    let actualFields = {};\n    Object.entries(fields).forEach(([key2, field]) => {\n      actualFields[field.fieldName || key2] = field;\n      if (field.references) {\n        const refTable = tables[field.references.model];\n        if (refTable) {\n          actualFields[field.fieldName || key2].references = {\n            ...field.references,\n            model: refTable.modelName,\n            field: field.references.field\n          };\n        }\n      }\n    });\n    if (schema[table.modelName]) {\n      schema[table.modelName].fields = {\n        ...schema[table.modelName].fields,\n        ...actualFields\n      };\n      continue;\n    }\n    schema[table.modelName] = {\n      fields: actualFields,\n      order: table.order || Infinity\n    };\n  }\n  return schema;\n}\n\nconst postgresMap = {\n  string: [\"character varying\", \"varchar\", \"text\"],\n  number: [\n    \"int4\",\n    \"integer\",\n    \"bigint\",\n    \"smallint\",\n    \"numeric\",\n    \"real\",\n    \"double precision\"\n  ],\n  boolean: [\"bool\", \"boolean\"],\n  date: [\"timestamptz\", \"timestamp\", \"date\"],\n  json: [\"json\", \"jsonb\"]\n};\nconst mysqlMap = {\n  string: [\"varchar\", \"text\"],\n  number: [\n    \"integer\",\n    \"int\",\n    \"bigint\",\n    \"smallint\",\n    \"decimal\",\n    \"float\",\n    \"double\"\n  ],\n  boolean: [\"boolean\", \"tinyint\"],\n  date: [\"timestamp\", \"datetime\", \"date\"],\n  json: [\"json\"]\n};\nconst sqliteMap = {\n  string: [\"TEXT\"],\n  number: [\"INTEGER\", \"REAL\"],\n  boolean: [\"INTEGER\", \"BOOLEAN\"],\n  // 0 or 1\n  date: [\"DATE\", \"INTEGER\"],\n  json: [\"TEXT\"]\n};\nconst mssqlMap = {\n  string: [\"varchar\", \"nvarchar\"],\n  number: [\"int\", \"bigint\", \"smallint\", \"decimal\", \"float\", \"double\"],\n  boolean: [\"bit\", \"smallint\"],\n  date: [\"datetime2\", \"date\", \"datetime\"],\n  json: [\"varchar\", \"nvarchar\"]\n};\nconst map = {\n  postgres: postgresMap,\n  mysql: mysqlMap,\n  sqlite: sqliteMap,\n  mssql: mssqlMap\n};\nfunction matchType(columnDataType, fieldType, dbType) {\n  function normalize(type) {\n    return type.toLowerCase().split(\"(\")[0].trim();\n  }\n  if (fieldType === \"string[]\" || fieldType === \"number[]\") {\n    return columnDataType.toLowerCase().includes(\"json\");\n  }\n  const types = map[dbType];\n  const expected = Array.isArray(fieldType) ? types[\"string\"].map((t) => t.toLowerCase()) : types[fieldType].map((t) => t.toLowerCase());\n  return expected.includes(normalize(columnDataType));\n}\nasync function getPostgresSchema(db) {\n  try {\n    const result = await sql`SHOW search_path`.execute(\n      db\n    );\n    if (result.rows[0]?.search_path) {\n      const schemas = result.rows[0].search_path.split(\",\").map((s) => s.trim()).map((s) => s.replace(/^[\"']|[\"']$/g, \"\")).filter((s) => !s.startsWith(\"$\"));\n      return schemas[0] || \"public\";\n    }\n  } catch (error) {\n  }\n  return \"public\";\n}\nasync function getMigrations(config) {\n  const betterAuthSchema = getSchema(config);\n  const logger = createLogger(config.logger);\n  let { kysely: db, databaseType: dbType } = await createKyselyAdapter(config);\n  if (!dbType) {\n    logger.warn(\n      \"Could not determine database type, defaulting to sqlite. Please provide a type in the database options to avoid this.\"\n    );\n    dbType = \"sqlite\";\n  }\n  if (!db) {\n    logger.error(\n      \"Only kysely adapter is supported for migrations. You can use `generate` command to generate the schema, if you're using a different adapter.\"\n    );\n    process.exit(1);\n  }\n  let currentSchema = \"public\";\n  if (dbType === \"postgres\") {\n    currentSchema = await getPostgresSchema(db);\n    logger.debug(\n      `PostgreSQL migration: Using schema '${currentSchema}' (from search_path)`\n    );\n    try {\n      const schemaCheck = await sql`\n\t\t\t\tSELECT schema_name \n\t\t\t\tFROM information_schema.schemata \n\t\t\t\tWHERE schema_name = ${currentSchema}\n\t\t\t`.execute(db);\n      if (!schemaCheck.rows[0]) {\n        logger.warn(\n          `Schema '${currentSchema}' does not exist. Tables will be inspected from available schemas. Consider creating the schema first or checking your database configuration.`\n        );\n      }\n    } catch (error) {\n      logger.debug(\n        `Could not verify schema existence: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n  const allTableMetadata = await db.introspection.getTables();\n  let tableMetadata = allTableMetadata;\n  if (dbType === \"postgres\") {\n    try {\n      const tablesInSchema = await sql`\n\t\t\t\tSELECT table_name \n\t\t\t\tFROM information_schema.tables \n\t\t\t\tWHERE table_schema = ${currentSchema}\n\t\t\t\tAND table_type = 'BASE TABLE'\n\t\t\t`.execute(db);\n      const tableNamesInSchema = new Set(\n        tablesInSchema.rows.map((row) => row.table_name)\n      );\n      tableMetadata = allTableMetadata.filter(\n        (table) => table.schema === currentSchema && tableNamesInSchema.has(table.name)\n      );\n      logger.debug(\n        `Found ${tableMetadata.length} table(s) in schema '${currentSchema}': ${tableMetadata.map((t) => t.name).join(\", \") || \"(none)\"}`\n      );\n    } catch (error) {\n      logger.warn(\n        `Could not filter tables by schema. Using all discovered tables. Error: ${error instanceof Error ? error.message : String(error)}`\n      );\n    }\n  }\n  const toBeCreated = [];\n  const toBeAdded = [];\n  for (const [key, value] of Object.entries(betterAuthSchema)) {\n    const table = tableMetadata.find((t) => t.name === key);\n    if (!table) {\n      const tIndex = toBeCreated.findIndex((t) => t.table === key);\n      const tableData = {\n        table: key,\n        fields: value.fields,\n        order: value.order || Infinity\n      };\n      const insertIndex = toBeCreated.findIndex(\n        (t) => (t.order || Infinity) > tableData.order\n      );\n      if (insertIndex === -1) {\n        if (tIndex === -1) {\n          toBeCreated.push(tableData);\n        } else {\n          toBeCreated[tIndex].fields = {\n            ...toBeCreated[tIndex].fields,\n            ...value.fields\n          };\n        }\n      } else {\n        toBeCreated.splice(insertIndex, 0, tableData);\n      }\n      continue;\n    }\n    let toBeAddedFields = {};\n    for (const [fieldName, field] of Object.entries(value.fields)) {\n      const column = table.columns.find((c) => c.name === fieldName);\n      if (!column) {\n        toBeAddedFields[fieldName] = field;\n        continue;\n      }\n      if (matchType(column.dataType, field.type, dbType)) {\n        continue;\n      } else {\n        logger.warn(\n          `Field ${fieldName} in table ${key} has a different type in the database. Expected ${field.type} but got ${column.dataType}.`\n        );\n      }\n    }\n    if (Object.keys(toBeAddedFields).length > 0) {\n      toBeAdded.push({\n        table: key,\n        fields: toBeAddedFields,\n        order: value.order || Infinity\n      });\n    }\n  }\n  const migrations = [];\n  function getType(field, fieldName) {\n    const type = field.type;\n    const typeMap = {\n      string: {\n        sqlite: \"text\",\n        postgres: \"text\",\n        mysql: field.unique ? \"varchar(255)\" : field.references ? \"varchar(36)\" : \"text\",\n        mssql: field.unique || field.sortable ? \"varchar(255)\" : field.references ? \"varchar(36)\" : (\n          // mssql deprecated `text`, and the alternative is `varchar(max)`.\n          // Kysely type interface doesn't support `text`, so we set this to `varchar(8000)` as\n          // that's the max length for `varchar`\n          \"varchar(8000)\"\n        )\n      },\n      boolean: {\n        sqlite: \"integer\",\n        postgres: \"boolean\",\n        mysql: \"boolean\",\n        mssql: \"smallint\"\n      },\n      number: {\n        sqlite: field.bigint ? \"bigint\" : \"integer\",\n        postgres: field.bigint ? \"bigint\" : \"integer\",\n        mysql: field.bigint ? \"bigint\" : \"integer\",\n        mssql: field.bigint ? \"bigint\" : \"integer\"\n      },\n      date: {\n        sqlite: \"date\",\n        postgres: \"timestamptz\",\n        mysql: \"timestamp(3)\",\n        mssql: sql`datetime2(3)`\n      },\n      json: {\n        sqlite: \"text\",\n        postgres: \"jsonb\",\n        mysql: \"json\",\n        mssql: \"varchar(8000)\"\n      },\n      id: {\n        postgres: config.advanced?.database?.useNumberId ? \"serial\" : \"text\",\n        mysql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        mssql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        sqlite: config.advanced?.database?.useNumberId ? \"integer\" : \"text\"\n      },\n      foreignKeyId: {\n        postgres: config.advanced?.database?.useNumberId ? \"integer\" : \"text\",\n        mysql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        mssql: config.advanced?.database?.useNumberId ? \"integer\" : \"varchar(36)\",\n        sqlite: config.advanced?.database?.useNumberId ? \"integer\" : \"text\"\n      }\n    };\n    if (fieldName === \"id\" || field.references?.field === \"id\") {\n      if (fieldName === \"id\") {\n        return typeMap.id[dbType];\n      }\n      return typeMap.foreignKeyId[dbType];\n    }\n    if (dbType === \"sqlite\" && (type === \"string[]\" || type === \"number[]\")) {\n      return \"text\";\n    }\n    if (type === \"string[]\" || type === \"number[]\") {\n      return \"jsonb\";\n    }\n    if (Array.isArray(type)) {\n      return \"text\";\n    }\n    return typeMap[type][dbType || \"sqlite\"];\n  }\n  if (toBeAdded.length) {\n    for (const table of toBeAdded) {\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        const exec = db.schema.alterTable(table.table).addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(\n              `${field.references.model}.${field.references.field}`\n            ).onDelete(field.references.onDelete || \"cascade\");\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          if (field.type === \"date\" && typeof field.defaultValue === \"function\" && (dbType === \"postgres\" || dbType === \"mysql\" || dbType === \"mssql\")) {\n            if (dbType === \"mysql\") {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP(3)`);\n            } else {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP`);\n            }\n          }\n          return col;\n        });\n        migrations.push(exec);\n      }\n    }\n  }\n  if (toBeCreated.length) {\n    for (const table of toBeCreated) {\n      let dbT = db.schema.createTable(table.table).addColumn(\n        \"id\",\n        config.advanced?.database?.useNumberId ? dbType === \"postgres\" ? \"serial\" : \"integer\" : dbType === \"mysql\" || dbType === \"mssql\" ? \"varchar(36)\" : \"text\",\n        (col) => {\n          if (config.advanced?.database?.useNumberId) {\n            if (dbType === \"postgres\" || dbType === \"sqlite\") {\n              return col.primaryKey().notNull();\n            } else if (dbType === \"mssql\") {\n              return col.identity().primaryKey().notNull();\n            }\n            return col.autoIncrement().primaryKey().notNull();\n          }\n          return col.primaryKey().notNull();\n        }\n      );\n      for (const [fieldName, field] of Object.entries(table.fields)) {\n        const type = getType(field, fieldName);\n        dbT = dbT.addColumn(fieldName, type, (col) => {\n          col = field.required !== false ? col.notNull() : col;\n          if (field.references) {\n            col = col.references(`${field.references.model}.${field.references.field}`).onDelete(field.references.onDelete || \"cascade\");\n          }\n          if (field.unique) {\n            col = col.unique();\n          }\n          if (field.type === \"date\" && typeof field.defaultValue === \"function\" && (dbType === \"postgres\" || dbType === \"mysql\" || dbType === \"mssql\")) {\n            if (dbType === \"mysql\") {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP(3)`);\n            } else {\n              col = col.defaultTo(sql`CURRENT_TIMESTAMP`);\n            }\n          }\n          return col;\n        });\n      }\n      migrations.push(dbT);\n    }\n  }\n  async function runMigrations() {\n    for (const migration of migrations) {\n      await migration.execute();\n    }\n  }\n  async function compileMigrations() {\n    const compiled = migrations.map((m) => m.compile().sql);\n    return compiled.join(\";\\n\\n\") + \";\";\n  }\n  return { toBeCreated, toBeAdded, runMigrations, compileMigrations };\n}\n\nexport { getAdapter as a, convertToDB as b, createInternalAdapter as c, convertFromDB as d, getMigrations as e, getSchema as f, getWithHooks as g, matchType as m };\n"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAAS,aAAa,OAAO,EAAE,GAAG;IAChC,MAAM,QAAQ,IAAI,KAAK;IACvB,eAAe,gBAAgB,IAAI,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU;QAC7E,IAAI,aAAa;QACjB,KAAK,MAAM,QAAQ,SAAS,EAAE,CAAE;YAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM,EAAE,QAAQ;YACnC,IAAI,OAAO;gBACT,MAAM,SAAS,MAAM,MAAM,YAAY;gBACvC,IAAI,WAAW,OAAO;oBACpB,OAAO;gBACT;gBACA,MAAM,WAAW,OAAO,WAAW,YAAY,UAAU;gBACzD,IAAI,UAAU;oBACZ,aAAa;wBACX,GAAG,UAAU;wBACb,GAAG,OAAO,IAAI;oBAChB;gBACF;YACF;QACF;QACA,MAAM,gBAAgB,iBAAiB,MAAM,eAAe,EAAE,CAAC,cAAc;QAC7E,MAAM,UAAU,CAAC,kBAAkB,eAAe,aAAa,GAAG,MAAM,CAAC,cAAc,OAAO,EAAE,MAAM,CAAC;YACrG;YACA,MAAM;YACN,cAAc;QAChB,KAAK;QACL,KAAK,MAAM,QAAQ,SAAS,EAAE,CAAE;YAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM,EAAE,QAAQ;YACnC,IAAI,OAAO;gBACT,MAAM,MAAM,SAAS;YACvB;QACF;QACA,OAAO;IACT;IACA,eAAe,gBAAgB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU;QACpF,IAAI,aAAa;QACjB,KAAK,MAAM,QAAQ,SAAS,EAAE,CAAE;YAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM,EAAE,QAAQ;YACnC,IAAI,OAAO;gBACT,MAAM,SAAS,MAAM,MAAM,MAAM;gBACjC,IAAI,WAAW,OAAO;oBACpB,OAAO;gBACT;gBACA,MAAM,WAAW,OAAO,WAAW;gBACnC,aAAa,WAAW,OAAO,IAAI,GAAG;YACxC;QACF;QACA,MAAM,gBAAgB,iBAAiB,MAAM,eAAe,EAAE,CAAC,cAAc;QAC7E,MAAM,UAAU,CAAC,kBAAkB,eAAe,aAAa,GAAG,MAAM,CAAC,cAAc,OAAO,EAAE,MAAM,CAAC;YACrG;YACA,QAAQ;YACR;QACF,KAAK;QACL,KAAK,MAAM,QAAQ,SAAS,EAAE,CAAE;YAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM,EAAE,QAAQ;YACnC,IAAI,OAAO;gBACT,MAAM,MAAM,SAAS;YACvB;QACF;QACA,OAAO;IACT;IACA,eAAe,oBAAoB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,cAAc,EAAE,OAAO,EAAE,UAAU;QACxF,IAAI,aAAa;QACjB,KAAK,MAAM,QAAQ,SAAS,EAAE,CAAE;YAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM,EAAE,QAAQ;YACnC,IAAI,OAAO;gBACT,MAAM,SAAS,MAAM,MAAM,MAAM;gBACjC,IAAI,WAAW,OAAO;oBACpB,OAAO;gBACT;gBACA,MAAM,WAAW,OAAO,WAAW;gBACnC,aAAa,WAAW,OAAO,IAAI,GAAG;YACxC;QACF;QACA,MAAM,gBAAgB,iBAAiB,MAAM,eAAe,EAAE,CAAC,cAAc;QAC7E,MAAM,UAAU,CAAC,kBAAkB,eAAe,aAAa,GAAG,MAAM,CAAC,cAAc,OAAO,EAAE,UAAU,CAAC;YACzG;YACA,QAAQ;YACR;QACF,KAAK;QACL,KAAK,MAAM,QAAQ,SAAS,EAAE,CAAE;YAC9B,MAAM,QAAQ,IAAI,CAAC,MAAM,EAAE,QAAQ;YACnC,IAAI,OAAO;gBACT,MAAM,MAAM,SAAS;YACvB;QACF;QACA,OAAO;IACT;IACA,OAAO;QACL;QACA;QACA;IACF;AACF;AAEA,MAAM,wBAAwB,CAAC,SAAS;IACtC,MAAM,SAAS,IAAI,MAAM;IACzB,MAAM,UAAU,IAAI,OAAO;IAC3B,MAAM,mBAAmB,QAAQ,gBAAgB;IACjD,MAAM,oBAAoB,QAAQ,OAAO,EAAE,aAAa,KAAK,KAAK,KAAK;IACvE,MAAM,EAAE,eAAe,EAAE,eAAe,EAAE,mBAAmB,EAAE,GAAG,aAAa,SAAS;IACxF,eAAe,oBAAoB,IAAI;QACrC,IAAI,CAAC,kBAAkB;QACvB,MAAM,UAAU,MAAM,iBAAiB,GAAG,CAAC,CAAC,gBAAgB,EAAE,KAAK,EAAE,EAAE;QACvE,IAAI,CAAC,SAAS;QACd,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,YAAY,EAAE;QACzC,MAAM,gBAAgB,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,SAAS,GAAG;QACvD,MAAM,QAAQ,GAAG,CACf,cAAc,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE;YAChC,MAAM,SAAS,MAAM,iBAAiB,GAAG,CAAC;YAC1C,IAAI,CAAC,QAAQ;YACb,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;YAC7B,IAAI,CAAC,QAAQ;YACb,MAAM,aAAa,KAAK,GAAG,CACzB,KAAK,KAAK,CAAC,IAAI,KAAK,OAAO,OAAO,CAAC,SAAS,EAAE,OAAO,KAAK,OAAO,KACjE;YAEF,MAAM,iBAAiB,GAAG,CACxB,OACA,KAAK,SAAS,CAAC;gBACb,SAAS,OAAO,OAAO;gBACvB;YACF,IACA,KAAK,KAAK,CAAC;QAEf;IAEJ;IACA,OAAO;QACL,iBAAiB,OAAO,MAAM,SAAS;YACrC,OAAO,QAAQ,WAAW,CAAC,OAAO;gBAChC,MAAM,cAAc,MAAM,gBACxB;oBACE,qIAAqI;oBACrI,WAAW,aAAa,GAAG,IAAI;oBAC/B,WAAW,aAAa,GAAG,IAAI;oBAC/B,GAAG,IAAI;gBACT,GACA,QACA,KAAK,GACL,SACA;gBAEF,MAAM,iBAAiB,MAAM,gBAC3B;oBACE,GAAG,OAAO;oBACV,QAAQ,YAAY,EAAE;oBACtB,qIAAqI;oBACrI,WAAW,aAAa,GAAG,IAAI;oBAC/B,WAAW,aAAa,GAAG,IAAI;gBACjC,GACA,WACA,KAAK,GACL,SACA;gBAEF,OAAO;oBACL,MAAM;oBACN,SAAS;gBACX;YACF;QACF;QACA,YAAY,OAAO,MAAM,SAAS;YAChC,MAAM,cAAc,MAAM,gBACxB;gBACE,qIAAqI;gBACrI,WAAW,aAAa,GAAG,IAAI;gBAC/B,WAAW,aAAa,GAAG,IAAI;gBAC/B,GAAG,IAAI;gBACP,OAAO,KAAK,KAAK,EAAE;YACrB,GACA,QACA,KAAK,GACL,SACA;YAEF,OAAO;QACT;QACA,eAAe,OAAO,SAAS,SAAS;YACtC,MAAM,iBAAiB,MAAM,gBAC3B;gBACE,qIAAqI;gBACrI,WAAW,aAAa,GAAG,IAAI;gBAC/B,WAAW,aAAa,GAAG,IAAI;gBAC/B,GAAG,OAAO;YACZ,GACA,WACA,KAAK,GACL,SACA;YAEF,OAAO;QACT;QACA,cAAc,OAAO,QAAQ;YAC3B,IAAI,kBAAkB;gBACpB,MAAM,cAAc,MAAM,iBAAiB,GAAG,CAC5C,CAAC,gBAAgB,EAAE,QAAQ;gBAE7B,IAAI,CAAC,aAAa,OAAO,EAAE;gBAC3B,MAAM,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,gBAAgB,EAAE;gBAC7C,MAAM,MAAM,KAAK,GAAG;gBACpB,MAAM,gBAAgB,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,SAAS,GAAG;gBACvD,MAAM,YAAY,EAAE;gBACpB,KAAK,MAAM,WAAW,cAAe;oBACnC,MAAM,qBAAqB,MAAM,iBAAiB,GAAG,CAAC,QAAQ,KAAK;oBACnE,IAAI,oBAAoB;wBACtB,MAAM,IAAI,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;wBACxB,IAAI,CAAC,GAAG,OAAO,EAAE;wBACjB,MAAM,gBAAgB,CAAA,GAAA,iYAAA,CAAA,IAAkB,AAAD,EAAE,IAAI,OAAO,EAAE;4BACpD,GAAG,EAAE,OAAO;4BACZ,WAAW,IAAI,KAAK,EAAE,OAAO,CAAC,SAAS;wBACzC;wBACA,UAAU,IAAI,CAAC;oBACjB;gBACF;gBACA,OAAO;YACT;YACA,MAAM,WAAW,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;gBACtD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,OAAO;QACT;QACA,WAAW,OAAO,OAAO,QAAQ,QAAQ,OAAO;YAC9C,MAAM,QAAQ,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;gBACnD,OAAO;gBACP;gBACA;gBACA;gBACA;YACF;YACA,OAAO;QACT;QACA,iBAAiB,OAAO,OAAO;YAC7B,MAAM,QAAQ,MAAM,CAAC,cAAc,OAAO,EAAE,KAAK,CAAC;gBAChD,OAAO;gBACP;YACF;YACA,IAAI,OAAO,UAAU,UAAU;gBAC7B,OAAO,SAAS;YAClB;YACA,OAAO;QACT;QACA,YAAY,OAAO,QAAQ;YACzB,IAAI,kBAAkB;gBACpB,MAAM,iBAAiB,MAAM,CAAC,CAAC,gBAAgB,EAAE,QAAQ;YAC3D;YACA,IAAI,CAAC,oBAAoB,QAAQ,OAAO,EAAE,wBAAwB;gBAChE,MAAM,CAAC,cAAc,OAAO,EAAE,UAAU,CAAC;oBACvC,OAAO;oBACP,OAAO;wBACL;4BACE,OAAO;4BACP,OAAO;wBACT;qBACD;gBACH;YACF;YACA,MAAM,CAAC,cAAc,OAAO,EAAE,UAAU,CAAC;gBACvC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,MAAM,CAAC,cAAc,OAAO,EAAE,MAAM,CAAC;gBACnC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;QACF;QACA,eAAe,OAAO,QAAQ,MAAM,gBAAgB,UAAU,aAAa;YACzE,MAAM,UAAU,KAAK,OAAO,IAAI,KAAK,OAAO,EAAE;YAC9C,MAAM,EAAE,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,YAAY,CAAC;YACxC,MAAM,OAAO;gBACX,WAAW,KAAK,OAAO,IAAI,KAAK,OAAO,GAAG,CAAA,GAAA,iYAAA,CAAA,IAAK,AAAD,EAAE,KAAK,OAAO,IAAI,KAAK,OAAO,EAAE,KAAK,OAAO,CAAC,OAAO,KAAK,KAAK;gBAC5G,WAAW,SAAS,IAAI,iBAAiB;gBACzC,GAAG,IAAI;gBACP;;;;SAIC,GACD,WAAW,iBAAiB,CAAA,GAAA,iYAAA,CAAA,IAAO,AAAD,EAAE,KAAK,KAAK,IAAI,SAAS,CAAA,GAAA,iYAAA,CAAA,IAAO,AAAD,EAAE,mBAAmB;gBACtF;gBACA,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE;gBAClB,qIAAqI;gBACrI,WAAW,aAAa,GAAG,IAAI;gBAC/B,WAAW,aAAa,GAAG,IAAI;gBAC/B,GAAG,cAAc,OAAO,CAAC,CAAC;YAC5B;YACA,MAAM,MAAM,MAAM,gBAChB,MACA,WACA,mBAAmB;gBACjB,IAAI,OAAO;oBACT,MAAM,cAAc,MAAM,iBAAiB,GAAG,CAC5C,CAAC,gBAAgB,EAAE,QAAQ;oBAE7B,IAAI,OAAO,EAAE;oBACb,MAAM,MAAM,KAAK,GAAG;oBACpB,IAAI,aAAa;wBACf,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,gBAAgB,EAAE;wBACvC,OAAO,KAAK,MAAM,CAAC,CAAC,UAAY,QAAQ,SAAS,GAAG;oBACtD;oBACA,MAAM,SAAS,KAAK,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,SAAS,GAAG,EAAE,SAAS;oBAC5D,IAAI,qBAAqB,OAAO,EAAE,CAAC,CAAC,IAAI;oBACxC,OAAO,IAAI,CAAC;wBACV,OAAO,KAAK,KAAK;wBACjB,WAAW,KAAK,SAAS,CAAC,OAAO;oBACnC;oBACA,IAAI,CAAC,sBAAsB,qBAAqB,KAAK,SAAS,CAAC,OAAO,IAAI;wBACxE,qBAAqB,KAAK,SAAS,CAAC,OAAO;oBAC7C;oBACA,MAAM,qBAAqB,KAAK,GAAG,CACjC,KAAK,KAAK,CAAC,CAAC,qBAAqB,GAAG,IAAI,MACxC;oBAEF,IAAI,qBAAqB,GAAG;wBAC1B,MAAM,iBAAiB,GAAG,CACxB,CAAC,gBAAgB,EAAE,QAAQ,EAC3B,KAAK,SAAS,CAAC,SACf;oBAEJ;oBACA,MAAM,OAAO,MAAM,QAAQ,OAAO,CAAC;wBACjC,OAAO;wBACP,OAAO;4BACL;gCACE,OAAO;gCACP,OAAO;4BACT;yBACD;oBACH;oBACA,MAAM,aAAa,KAAK,GAAG,CACzB,KAAK,KAAK,CAAC,CAAC,KAAK,SAAS,CAAC,OAAO,KAAK,GAAG,IAAI,MAC9C;oBAEF,IAAI,aAAa,GAAG;wBAClB,MAAM,iBAAiB,GAAG,CACxB,KAAK,KAAK,EACV,KAAK,SAAS,CAAC;4BACb,SAAS;4BACT;wBACF,IACA;oBAEJ;oBACA,OAAO;gBACT;gBACA,eAAe,QAAQ,OAAO,EAAE;YAClC,IAAI,KAAK,GACT,MACA;YAEF,OAAO;QACT;QACA,aAAa,OAAO,OAAO;YACzB,IAAI,kBAAkB;gBACpB,MAAM,qBAAqB,MAAM,iBAAiB,GAAG,CAAC;gBACtD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,OAAO,EAAE,wBAAwB;oBACnE,OAAO;gBACT;gBACA,IAAI,oBAAoB;oBACtB,MAAM,IAAI,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;oBACxB,IAAI,CAAC,GAAG,OAAO;oBACf,MAAM,iBAAiB,CAAA,GAAA,iYAAA,CAAA,IAAkB,AAAD,EAAE,IAAI,OAAO,EAAE;wBACrD,GAAG,EAAE,OAAO;wBACZ,WAAW,IAAI,KAAK,EAAE,OAAO,CAAC,SAAS;wBACvC,WAAW,IAAI,KAAK,EAAE,OAAO,CAAC,SAAS;wBACvC,WAAW,IAAI,KAAK,EAAE,OAAO,CAAC,SAAS;oBACzC;oBACA,MAAM,cAAc,CAAA,GAAA,iYAAA,CAAA,IAAe,AAAD,EAAE,IAAI,OAAO,EAAE;wBAC/C,GAAG,EAAE,IAAI;wBACT,WAAW,IAAI,KAAK,EAAE,IAAI,CAAC,SAAS;wBACpC,WAAW,IAAI,KAAK,EAAE,IAAI,CAAC,SAAS;oBACtC;oBACA,OAAO;wBACL,SAAS;wBACT,MAAM;oBACR;gBACF;YACF;YACA,MAAM,UAAU,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;gBACpD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,IAAI,CAAC,SAAS;gBACZ,OAAO;YACT;YACA,MAAM,OAAO,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;gBACjD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO,QAAQ,MAAM;wBACrB,OAAO;oBACT;iBACD;YACH;YACA,IAAI,CAAC,MAAM;gBACT,OAAO;YACT;YACA,MAAM,gBAAgB,CAAA,GAAA,iYAAA,CAAA,IAAkB,AAAD,EAAE,IAAI,OAAO,EAAE;YACtD,MAAM,aAAa,CAAA,GAAA,iYAAA,CAAA,IAAe,AAAD,EAAE,IAAI,OAAO,EAAE;YAChD,OAAO;gBACL,SAAS;gBACT,MAAM;YACR;QACF;QACA,cAAc,OAAO,eAAe;YAClC,IAAI,kBAAkB;gBACpB,MAAM,YAAY,EAAE;gBACpB,KAAK,MAAM,gBAAgB,cAAe;oBACxC,MAAM,qBAAqB,MAAM,iBAAiB,GAAG,CAAC;oBACtD,IAAI,oBAAoB;wBACtB,MAAM,IAAI,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;wBACxB,IAAI,CAAC,GAAG,OAAO,EAAE;wBACjB,MAAM,UAAU;4BACd,SAAS;gCACP,GAAG,EAAE,OAAO;gCACZ,WAAW,IAAI,KAAK,EAAE,OAAO,CAAC,SAAS;4BACzC;4BACA,MAAM;gCACJ,GAAG,EAAE,IAAI;gCACT,WAAW,IAAI,KAAK,EAAE,IAAI,CAAC,SAAS;gCACpC,WAAW,IAAI,KAAK,EAAE,IAAI,CAAC,SAAS;4BACtC;wBACF;wBACA,UAAU,IAAI,CAAC;oBACjB;gBACF;gBACA,OAAO;YACT;YACA,MAAM,WAAW,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;gBACtD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;wBACP,UAAU;oBACZ;iBACD;YACH;YACA,MAAM,UAAU,SAAS,GAAG,CAAC,CAAC;gBAC5B,OAAO,QAAQ,MAAM;YACvB;YACA,IAAI,CAAC,QAAQ,MAAM,EAAE,OAAO,EAAE;YAC9B,MAAM,QAAQ,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;gBACnD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;wBACP,UAAU;oBACZ;iBACD;YACH;YACA,OAAO,SAAS,GAAG,CAAC,CAAC;gBACnB,MAAM,OAAO,MAAM,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,QAAQ,MAAM;gBACtD,IAAI,CAAC,MAAM,OAAO;gBAClB,OAAO;oBACL;oBACA;gBACF;YACF;QACF;QACA,eAAe,OAAO,cAAc,SAAS,SAAS;YACpD,MAAM,iBAAiB,MAAM,gBAC3B,SACA;gBAAC;oBAAE,OAAO;oBAAS,OAAO;gBAAa;aAAE,EACzC,WACA,mBAAmB;gBACjB,MAAM,IAAG,IAAI;oBACX,MAAM,iBAAiB,MAAM,iBAAiB,GAAG,CAAC;oBAClD,IAAI,kBAAkB;oBACtB,IAAI,gBAAgB;wBAClB,MAAM,gBAAgB,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;wBACpC,IAAI,CAAC,eAAe,OAAO;wBAC3B,kBAAkB;4BAChB,GAAG,cAAc,OAAO;4BACxB,GAAG,IAAI;wBACT;wBACA,OAAO;oBACT,OAAO;wBACL,OAAO;oBACT;gBACF;gBACA,eAAe,QAAQ,OAAO,EAAE;YAClC,IAAI,KAAK,GACT,SACA;YAEF,OAAO;QACT;QACA,eAAe,OAAO,OAAO;YAC3B,IAAI,kBAAkB;gBACpB,MAAM,OAAO,MAAM,iBAAiB,GAAG,CAAC;gBACxC,IAAI,MAAM;oBACR,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,SAAS,CAAC;oBAC5C,IAAI,CAAC,SAAS;wBACZ,OAAO,KAAK,CAAC;wBACb;oBACF;oBACA,MAAM,SAAS,QAAQ,MAAM;oBAC7B,MAAM,cAAc,MAAM,iBAAiB,GAAG,CAC5C,CAAC,gBAAgB,EAAE,QAAQ;oBAE7B,IAAI,aAAa;wBACf,IAAI,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,gBAAgB,EAAE;wBAC3C,MAAM,MAAM,KAAK,GAAG;wBACpB,MAAM,WAAW,KAAK,MAAM,CAC1B,CAAC,WAAa,SAAS,SAAS,GAAG,OAAO,SAAS,KAAK,KAAK;wBAE/D,MAAM,SAAS,SAAS,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,SAAS,GAAG,EAAE,SAAS;wBAChE,MAAM,qBAAqB,OAAO,EAAE,CAAC,CAAC,IAAI;wBAC1C,IAAI,SAAS,MAAM,GAAG,KAAK,sBAAsB,qBAAqB,KAAK,GAAG,IAAI;4BAChF,MAAM,iBAAiB,GAAG,CACxB,CAAC,gBAAgB,EAAE,QAAQ,EAC3B,KAAK,SAAS,CAAC,WACf,KAAK,KAAK,CAAC,CAAC,qBAAqB,GAAG,IAAI;wBAE5C,OAAO;4BACL,MAAM,iBAAiB,MAAM,CAAC,CAAC,gBAAgB,EAAE,QAAQ;wBAC3D;oBACF,OAAO;wBACL,OAAO,KAAK,CAAC;oBACf;gBACF;gBACA,MAAM,iBAAiB,MAAM,CAAC;gBAC9B,IAAI,CAAC,QAAQ,OAAO,EAAE,0BAA0B,IAAI,OAAO,CAAC,OAAO,EAAE,2BAA2B;oBAC9F;gBACF;YACF;YACA,MAAM,CAAC,cAAc,OAAO,EAAE,MAAM,CAAC;gBACnC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;QACF;QACA,gBAAgB,OAAO,QAAQ;YAC7B,MAAM,CAAC,cAAc,OAAO,EAAE,UAAU,CAAC;gBACvC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;QACF;QACA,eAAe,OAAO,WAAW;YAC/B,MAAM,CAAC,cAAc,OAAO,EAAE,MAAM,CAAC;gBACnC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;QACF;QACA,gBAAgB,OAAO,uBAAuB;YAC5C,IAAI,kBAAkB;gBACpB,IAAI,OAAO,0BAA0B,UAAU;oBAC7C,MAAM,gBAAgB,MAAM,iBAAiB,GAAG,CAC9C,CAAC,gBAAgB,EAAE,uBAAuB;oBAE5C,MAAM,WAAW,gBAAgB,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,iBAAiB,EAAE;oBAClE,IAAI,CAAC,UAAU;oBACf,KAAK,MAAM,WAAW,SAAU;wBAC9B,MAAM,iBAAiB,MAAM,CAAC,QAAQ,KAAK;oBAC7C;gBACF,OAAO;oBACL,KAAK,MAAM,gBAAgB,sBAAuB;wBAChD,MAAM,UAAU,MAAM,iBAAiB,GAAG,CAAC;wBAC3C,IAAI,SAAS;4BACX,MAAM,iBAAiB,MAAM,CAAC;wBAChC;oBACF;gBACF;gBACA,IAAI,CAAC,QAAQ,OAAO,EAAE,0BAA0B,IAAI,OAAO,CAAC,OAAO,EAAE,2BAA2B;oBAC9F;gBACF;YACF;YACA,MAAM,CAAC,cAAc,OAAO,EAAE,UAAU,CAAC;gBACvC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO,MAAM,OAAO,CAAC,yBAAyB,UAAU;wBACxD,OAAO;wBACP,UAAU,MAAM,OAAO,CAAC,yBAAyB,OAAO,KAAK;oBAC/D;iBACD;YACH;QACF;QACA,eAAe,OAAO,OAAO,WAAW,YAAY;YAClD,MAAM,UAAU,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;gBACrD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH,GAAG,IAAI,CAAC,CAAC;gBACP,OAAO,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,UAAU,KAAK;YAC/C;YACA,IAAI,SAAS;gBACX,MAAM,OAAO,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;oBACjD,OAAO;oBACP,OAAO;wBACL;4BACE,OAAO,QAAQ,MAAM;4BACrB,OAAO;wBACT;qBACD;gBACH;gBACA,IAAI,MAAM;oBACR,OAAO;wBACL;wBACA,UAAU;4BAAC;yBAAQ;oBACrB;gBACF,OAAO;oBACL,MAAM,QAAQ,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;wBAClD,OAAO;wBACP,OAAO;4BACL;gCACE,OAAO,MAAM,WAAW;gCACxB,OAAO;4BACT;yBACD;oBACH;oBACA,IAAI,OAAO;wBACT,OAAO;4BACL,MAAM;4BACN,UAAU;gCAAC;6BAAQ;wBACrB;oBACF;oBACA,OAAO;gBACT;YACF,OAAO;gBACL,MAAM,OAAO,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;oBACjD,OAAO;oBACP,OAAO;wBACL;4BACE,OAAO,MAAM,WAAW;4BACxB,OAAO;wBACT;qBACD;gBACH;gBACA,IAAI,MAAM;oBACR,MAAM,WAAW,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;wBACtD,OAAO;wBACP,OAAO;4BACL;gCACE,OAAO,KAAK,EAAE;gCACd,OAAO;4BACT;yBACD;oBACH;oBACA,OAAO;wBACL;wBACA,UAAU,YAAY,EAAE;oBAC1B;gBACF,OAAO;oBACL,OAAO;gBACT;YACF;QACF;QACA,iBAAiB,OAAO,OAAO,UAAU;YACvC,MAAM,OAAO,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;gBACjD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO,MAAM,WAAW;wBACxB,OAAO;oBACT;iBACD;YACH;YACA,IAAI,CAAC,MAAM,OAAO;YAClB,IAAI,UAAU,iBAAiB;gBAC7B,MAAM,WAAW,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;oBACtD,OAAO;oBACP,OAAO;wBACL;4BACE,OAAO,KAAK,EAAE;4BACd,OAAO;wBACT;qBACD;gBACH;gBACA,OAAO;oBACL;oBACA;gBACF;YACF;YACA,OAAO;gBACL;gBACA,UAAU,EAAE;YACd;QACF;QACA,cAAc,OAAO,QAAQ;YAC3B,MAAM,OAAO,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;gBACjD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,OAAO;QACT;QACA,aAAa,OAAO,SAAS,SAAS;YACpC,MAAM,WAAW,MAAM,gBACrB;gBACE,qIAAqI;gBACrI,WAAW,aAAa,GAAG,IAAI;gBAC/B,WAAW,aAAa,GAAG,IAAI;gBAC/B,GAAG,OAAO;YACZ,GACA,WACA,KAAK,GACL,SACA;YAEF,OAAO;QACT;QACA,YAAY,OAAO,QAAQ,MAAM,SAAS;YACxC,MAAM,OAAO,MAAM,gBACjB,MACA;gBACE;oBACE,OAAO;oBACP,OAAO;gBACT;aACD,EACD,QACA,KAAK,GACL,SACA;YAEF,MAAM,oBAAoB;YAC1B,MAAM,oBAAoB;YAC1B,OAAO;QACT;QACA,mBAAmB,OAAO,OAAO,MAAM,SAAS;YAC9C,MAAM,OAAO,MAAM,gBACjB,MACA;gBACE;oBACE,OAAO;oBACP,OAAO,MAAM,WAAW;gBAC1B;aACD,EACD,QACA,KAAK,GACL,SACA;YAEF,MAAM,oBAAoB;YAC1B,MAAM,oBAAoB;YAC1B,OAAO;QACT;QACA,gBAAgB,OAAO,QAAQ,UAAU,SAAS;YAChD,MAAM,oBACJ;gBACE;YACF,GACA;gBACE;oBACE,OAAO;oBACP,OAAO;gBACT;gBACA;oBACE,OAAO;oBACP,OAAO;gBACT;aACD,EACD,WACA,KAAK,GACL,SACA;QAEJ;QACA,cAAc,OAAO,QAAQ;YAC3B,MAAM,WAAW,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;gBACtD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,OAAO;QACT;QACA,aAAa,OAAO,WAAW;YAC7B,MAAM,UAAU,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;gBACpD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,OAAO;QACT;QACA,yBAAyB,OAAO,WAAW,YAAY;YACrD,MAAM,UAAU,MAAM,CAAC,cAAc,OAAO,EAAE,OAAO,CAAC;gBACpD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;oBACA;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,OAAO;QACT;QACA,qBAAqB,OAAO,QAAQ;YAClC,MAAM,UAAU,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CAAC;gBACrD,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;YACA,OAAO;QACT;QACA,eAAe,OAAO,IAAI,MAAM,SAAS;YACvC,MAAM,UAAU,MAAM,gBACpB,MACA;gBAAC;oBAAE,OAAO;oBAAM,OAAO;gBAAG;aAAE,EAC5B,WACA,KAAK,GACL,SACA;YAEF,OAAO;QACT;QACA,yBAAyB,OAAO,MAAM,SAAS;YAC7C,MAAM,eAAe,MAAM,gBACzB;gBACE,qIAAqI;gBACrI,WAAW,aAAa,GAAG,IAAI;gBAC/B,WAAW,aAAa,GAAG,IAAI;gBAC/B,GAAG,IAAI;YACT,GACA,gBACA,KAAK,GACL,SACA;YAEF,OAAO;QACT;QACA,uBAAuB,OAAO,YAAY;YACxC,MAAM,eAAe,MAAM,CAAC,cAAc,OAAO,EAAE,QAAQ,CACzD;gBACE,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;gBACD,QAAQ;oBACN,OAAO;oBACP,WAAW;gBACb;gBACA,OAAO;YACT;YAEF,IAAI,CAAC,QAAQ,YAAY,EAAE,gBAAgB;gBACzC,MAAM,CAAC,cAAc,OAAO,EAAE,UAAU,CAAC;oBACvC,OAAO;oBACP,OAAO;wBACL;4BACE,OAAO;4BACP,OAAO,aAAa,GAAG,IAAI;4BAC3B,UAAU;wBACZ;qBACD;gBACH;YACF;YACA,MAAM,mBAAmB,YAAY,CAAC,EAAE;YACxC,OAAO;QACT;QACA,yBAAyB,OAAO,IAAI;YAClC,MAAM,CAAC,cAAc,OAAO,EAAE,MAAM,CAAC;gBACnC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;QACF;QACA,gCAAgC,OAAO,YAAY;YACjD,MAAM,CAAC,cAAc,OAAO,EAAE,MAAM,CAAC;gBACnC,OAAO;gBACP,OAAO;oBACL;wBACE,OAAO;wBACP,OAAO;oBACT;iBACD;YACH;QACF;QACA,yBAAyB,OAAO,IAAI,MAAM,SAAS;YACjD,MAAM,eAAe,MAAM,gBACzB,MACA;gBAAC;oBAAE,OAAO;oBAAM,OAAO;gBAAG;aAAE,EAC5B,gBACA,KAAK,GACL,SACA;YAEF,OAAO;QACT;IACF;AACF;AAEA,eAAe,WAAW,OAAO;IAC/B,IAAI,CAAC,QAAQ,QAAQ,EAAE;QACrB,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;QAC7B,MAAM,WAAW,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK;YAChD,GAAG,CAAC,IAAI,GAAG,EAAE;YACb,OAAO;QACT,GAAG,CAAC;QACJ,uXAAA,CAAA,SAAM,CAAC,IAAI,CACT;QAEF,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,UAAU;IACjC;IACA,IAAI,OAAO,QAAQ,QAAQ,KAAK,YAAY;QAC1C,OAAO,QAAQ,QAAQ,CAAC;IAC1B;IACA,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAmB,AAAD,EAAE;IACxE,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,yXAAA,CAAA,kBAAe,CAAC;IAC5B;IACA,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE,QAAQ;QAC3B,MAAM,gBAAgB;QACtB,WAAW,eAAe,QAAQ,QAAQ,GAAG,QAAQ,QAAQ,CAAC,SAAS,GAAG;QAC1E;IACF,GAAG;AACL;AACA,SAAS,YAAY,MAAM,EAAE,MAAM;IACjC,IAAI,SAAS,OAAO,EAAE,GAAG;QACvB,IAAI,OAAO,EAAE;IACf,IAAI,CAAC;IACL,IAAK,MAAM,OAAO,OAAQ;QACxB,MAAM,QAAQ,MAAM,CAAC,IAAI;QACzB,MAAM,QAAQ,MAAM,CAAC,IAAI;QACzB,IAAI,UAAU,KAAK,GAAG;YACpB;QACF;QACA,MAAM,CAAC,MAAM,SAAS,IAAI,IAAI,GAAG;IACnC;IACA,OAAO;AACT;AACA,SAAS,cAAc,MAAM,EAAE,MAAM;IACnC,IAAI,CAAC,QAAQ;QACX,OAAO;IACT;IACA,IAAI,SAAS;QACX,IAAI,OAAO,EAAE;IACf;IACA,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,QAAS;QACjD,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,SAAS,IAAI,IAAI;IAC9C;IACA,OAAO;AACT;AAEA,SAAS,UAAU,MAAM;IACvB,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;IAC7B,IAAI,SAAS,CAAC;IACd,IAAK,MAAM,OAAO,OAAQ;QACxB,MAAM,QAAQ,MAAM,CAAC,IAAI;QACzB,MAAM,SAAS,MAAM,MAAM;QAC3B,IAAI,eAAe,CAAC;QACpB,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,MAAM,MAAM;YAC3C,YAAY,CAAC,MAAM,SAAS,IAAI,KAAK,GAAG;YACxC,IAAI,MAAM,UAAU,EAAE;gBACpB,MAAM,WAAW,MAAM,CAAC,MAAM,UAAU,CAAC,KAAK,CAAC;gBAC/C,IAAI,UAAU;oBACZ,YAAY,CAAC,MAAM,SAAS,IAAI,KAAK,CAAC,UAAU,GAAG;wBACjD,GAAG,MAAM,UAAU;wBACnB,OAAO,SAAS,SAAS;wBACzB,OAAO,MAAM,UAAU,CAAC,KAAK;oBAC/B;gBACF;YACF;QACF;QACA,IAAI,MAAM,CAAC,MAAM,SAAS,CAAC,EAAE;YAC3B,MAAM,CAAC,MAAM,SAAS,CAAC,CAAC,MAAM,GAAG;gBAC/B,GAAG,MAAM,CAAC,MAAM,SAAS,CAAC,CAAC,MAAM;gBACjC,GAAG,YAAY;YACjB;YACA;QACF;QACA,MAAM,CAAC,MAAM,SAAS,CAAC,GAAG;YACxB,QAAQ;YACR,OAAO,MAAM,KAAK,IAAI;QACxB;IACF;IACA,OAAO;AACT;AAEA,MAAM,cAAc;IAClB,QAAQ;QAAC;QAAqB;QAAW;KAAO;IAChD,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,SAAS;QAAC;QAAQ;KAAU;IAC5B,MAAM;QAAC;QAAe;QAAa;KAAO;IAC1C,MAAM;QAAC;QAAQ;KAAQ;AACzB;AACA,MAAM,WAAW;IACf,QAAQ;QAAC;QAAW;KAAO;IAC3B,QAAQ;QACN;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IACD,SAAS;QAAC;QAAW;KAAU;IAC/B,MAAM;QAAC;QAAa;QAAY;KAAO;IACvC,MAAM;QAAC;KAAO;AAChB;AACA,MAAM,YAAY;IAChB,QAAQ;QAAC;KAAO;IAChB,QAAQ;QAAC;QAAW;KAAO;IAC3B,SAAS;QAAC;QAAW;KAAU;IAC/B,SAAS;IACT,MAAM;QAAC;QAAQ;KAAU;IACzB,MAAM;QAAC;KAAO;AAChB;AACA,MAAM,WAAW;IACf,QAAQ;QAAC;QAAW;KAAW;IAC/B,QAAQ;QAAC;QAAO;QAAU;QAAY;QAAW;QAAS;KAAS;IACnE,SAAS;QAAC;QAAO;KAAW;IAC5B,MAAM;QAAC;QAAa;QAAQ;KAAW;IACvC,MAAM;QAAC;QAAW;KAAW;AAC/B;AACA,MAAM,MAAM;IACV,UAAU;IACV,OAAO;IACP,QAAQ;IACR,OAAO;AACT;AACA,SAAS,UAAU,cAAc,EAAE,SAAS,EAAE,MAAM;IAClD,SAAS,UAAU,IAAI;QACrB,OAAO,KAAK,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI;IAC9C;IACA,IAAI,cAAc,cAAc,cAAc,YAAY;QACxD,OAAO,eAAe,WAAW,GAAG,QAAQ,CAAC;IAC/C;IACA,MAAM,QAAQ,GAAG,CAAC,OAAO;IACzB,MAAM,WAAW,MAAM,OAAO,CAAC,aAAa,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,WAAW,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,WAAW;IACnI,OAAO,SAAS,QAAQ,CAAC,UAAU;AACrC;AACA,eAAe,kBAAkB,EAAE;IACjC,IAAI;QACF,MAAM,SAAS,MAAM,kNAAA,CAAA,MAAG,CAAC,gBAAgB,CAAC,CAAC,OAAO,CAChD;QAEF,IAAI,OAAO,IAAI,CAAC,EAAE,EAAE,aAAa;YAC/B,MAAM,UAAU,OAAO,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,IAAM,EAAE,OAAO,CAAC,gBAAgB,KAAK,MAAM,CAAC,CAAC,IAAM,CAAC,EAAE,UAAU,CAAC;YACjJ,OAAO,OAAO,CAAC,EAAE,IAAI;QACvB;IACF,EAAE,OAAO,OAAO,CAChB;IACA,OAAO;AACT;AACA,eAAe,cAAc,MAAM;IACjC,MAAM,mBAAmB,UAAU;IACnC,MAAM,SAAS,CAAA,GAAA,uXAAA,CAAA,eAAY,AAAD,EAAE,OAAO,MAAM;IACzC,IAAI,EAAE,QAAQ,EAAE,EAAE,cAAc,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAmB,AAAD,EAAE;IACrE,IAAI,CAAC,QAAQ;QACX,OAAO,IAAI,CACT;QAEF,SAAS;IACX;IACA,IAAI,CAAC,IAAI;QACP,OAAO,KAAK,CACV;QAEF,QAAQ,IAAI,CAAC;IACf;IACA,IAAI,gBAAgB;IACpB,IAAI,WAAW,YAAY;QACzB,gBAAgB,MAAM,kBAAkB;QACxC,OAAO,KAAK,CACV,CAAC,oCAAoC,EAAE,cAAc,oBAAoB,CAAC;QAE5E,IAAI;YACF,MAAM,cAAc,MAAM,kNAAA,CAAA,MAAG,CAAC;;;wBAGZ,EAAE,cAAc;GACrC,CAAC,CAAC,OAAO,CAAC;YACP,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE,EAAE;gBACxB,OAAO,IAAI,CACT,CAAC,QAAQ,EAAE,cAAc,8IAA8I,CAAC;YAE5K;QACF,EAAE,OAAO,OAAO;YACd,OAAO,KAAK,CACV,CAAC,mCAAmC,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO,QAAQ;QAElG;IACF;IACA,MAAM,mBAAmB,MAAM,GAAG,aAAa,CAAC,SAAS;IACzD,IAAI,gBAAgB;IACpB,IAAI,WAAW,YAAY;QACzB,IAAI;YACF,MAAM,iBAAiB,MAAM,kNAAA,CAAA,MAAG,CAAC;;;yBAGd,EAAE,cAAc;;GAEtC,CAAC,CAAC,OAAO,CAAC;YACP,MAAM,qBAAqB,IAAI,IAC7B,eAAe,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,IAAI,UAAU;YAEjD,gBAAgB,iBAAiB,MAAM,CACrC,CAAC,QAAU,MAAM,MAAM,KAAK,iBAAiB,mBAAmB,GAAG,CAAC,MAAM,IAAI;YAEhF,OAAO,KAAK,CACV,CAAC,MAAM,EAAE,cAAc,MAAM,CAAC,qBAAqB,EAAE,cAAc,GAAG,EAAE,cAAc,GAAG,CAAC,CAAC,IAAM,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,UAAU;QAErI,EAAE,OAAO,OAAO;YACd,OAAO,IAAI,CACT,CAAC,uEAAuE,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO,QAAQ;QAEtI;IACF;IACA,MAAM,cAAc,EAAE;IACtB,MAAM,YAAY,EAAE;IACpB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,OAAO,OAAO,CAAC,kBAAmB;QAC3D,MAAM,QAAQ,cAAc,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;QACnD,IAAI,CAAC,OAAO;YACV,MAAM,SAAS,YAAY,SAAS,CAAC,CAAC,IAAM,EAAE,KAAK,KAAK;YACxD,MAAM,YAAY;gBAChB,OAAO;gBACP,QAAQ,MAAM,MAAM;gBACpB,OAAO,MAAM,KAAK,IAAI;YACxB;YACA,MAAM,cAAc,YAAY,SAAS,CACvC,CAAC,IAAM,CAAC,EAAE,KAAK,IAAI,QAAQ,IAAI,UAAU,KAAK;YAEhD,IAAI,gBAAgB,CAAC,GAAG;gBACtB,IAAI,WAAW,CAAC,GAAG;oBACjB,YAAY,IAAI,CAAC;gBACnB,OAAO;oBACL,WAAW,CAAC,OAAO,CAAC,MAAM,GAAG;wBAC3B,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM;wBAC7B,GAAG,MAAM,MAAM;oBACjB;gBACF;YACF,OAAO;gBACL,YAAY,MAAM,CAAC,aAAa,GAAG;YACrC;YACA;QACF;QACA,IAAI,kBAAkB,CAAC;QACvB,KAAK,MAAM,CAAC,WAAW,MAAM,IAAI,OAAO,OAAO,CAAC,MAAM,MAAM,EAAG;YAC7D,MAAM,SAAS,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK;YACpD,IAAI,CAAC,QAAQ;gBACX,eAAe,CAAC,UAAU,GAAG;gBAC7B;YACF;YACA,IAAI,UAAU,OAAO,QAAQ,EAAE,MAAM,IAAI,EAAE,SAAS;gBAClD;YACF,OAAO;gBACL,OAAO,IAAI,CACT,CAAC,MAAM,EAAE,UAAU,UAAU,EAAE,IAAI,gDAAgD,EAAE,MAAM,IAAI,CAAC,SAAS,EAAE,OAAO,QAAQ,CAAC,CAAC,CAAC;YAEjI;QACF;QACA,IAAI,OAAO,IAAI,CAAC,iBAAiB,MAAM,GAAG,GAAG;YAC3C,UAAU,IAAI,CAAC;gBACb,OAAO;gBACP,QAAQ;gBACR,OAAO,MAAM,KAAK,IAAI;YACxB;QACF;IACF;IACA,MAAM,aAAa,EAAE;IACrB,SAAS,QAAQ,KAAK,EAAE,SAAS;QAC/B,MAAM,OAAO,MAAM,IAAI;QACvB,MAAM,UAAU;YACd,QAAQ;gBACN,QAAQ;gBACR,UAAU;gBACV,OAAO,MAAM,MAAM,GAAG,iBAAiB,MAAM,UAAU,GAAG,gBAAgB;gBAC1E,OAAO,MAAM,MAAM,IAAI,MAAM,QAAQ,GAAG,iBAAiB,MAAM,UAAU,GAAG,gBAC1E,kEAAkE;gBAClE,qFAAqF;gBACrF,sCAAsC;gBACtC;YAEJ;YACA,SAAS;gBACP,QAAQ;gBACR,UAAU;gBACV,OAAO;gBACP,OAAO;YACT;YACA,QAAQ;gBACN,QAAQ,MAAM,MAAM,GAAG,WAAW;gBAClC,UAAU,MAAM,MAAM,GAAG,WAAW;gBACpC,OAAO,MAAM,MAAM,GAAG,WAAW;gBACjC,OAAO,MAAM,MAAM,GAAG,WAAW;YACnC;YACA,MAAM;gBACJ,QAAQ;gBACR,UAAU;gBACV,OAAO;gBACP,OAAO,kNAAA,CAAA,MAAG,CAAC,YAAY,CAAC;YAC1B;YACA,MAAM;gBACJ,QAAQ;gBACR,UAAU;gBACV,OAAO;gBACP,OAAO;YACT;YACA,IAAI;gBACF,UAAU,OAAO,QAAQ,EAAE,UAAU,cAAc,WAAW;gBAC9D,OAAO,OAAO,QAAQ,EAAE,UAAU,cAAc,YAAY;gBAC5D,OAAO,OAAO,QAAQ,EAAE,UAAU,cAAc,YAAY;gBAC5D,QAAQ,OAAO,QAAQ,EAAE,UAAU,cAAc,YAAY;YAC/D;YACA,cAAc;gBACZ,UAAU,OAAO,QAAQ,EAAE,UAAU,cAAc,YAAY;gBAC/D,OAAO,OAAO,QAAQ,EAAE,UAAU,cAAc,YAAY;gBAC5D,OAAO,OAAO,QAAQ,EAAE,UAAU,cAAc,YAAY;gBAC5D,QAAQ,OAAO,QAAQ,EAAE,UAAU,cAAc,YAAY;YAC/D;QACF;QACA,IAAI,cAAc,QAAQ,MAAM,UAAU,EAAE,UAAU,MAAM;YAC1D,IAAI,cAAc,MAAM;gBACtB,OAAO,QAAQ,EAAE,CAAC,OAAO;YAC3B;YACA,OAAO,QAAQ,YAAY,CAAC,OAAO;QACrC;QACA,IAAI,WAAW,YAAY,CAAC,SAAS,cAAc,SAAS,UAAU,GAAG;YACvE,OAAO;QACT;QACA,IAAI,SAAS,cAAc,SAAS,YAAY;YAC9C,OAAO;QACT;QACA,IAAI,MAAM,OAAO,CAAC,OAAO;YACvB,OAAO;QACT;QACA,OAAO,OAAO,CAAC,KAAK,CAAC,UAAU,SAAS;IAC1C;IACA,IAAI,UAAU,MAAM,EAAE;QACpB,KAAK,MAAM,SAAS,UAAW;YAC7B,KAAK,MAAM,CAAC,WAAW,MAAM,IAAI,OAAO,OAAO,CAAC,MAAM,MAAM,EAAG;gBAC7D,MAAM,OAAO,QAAQ,OAAO;gBAC5B,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,KAAK,EAAE,SAAS,CAAC,WAAW,MAAM,CAAC;oBACzE,MAAM,MAAM,QAAQ,KAAK,QAAQ,IAAI,OAAO,KAAK;oBACjD,IAAI,MAAM,UAAU,EAAE;wBACpB,MAAM,IAAI,UAAU,CAClB,GAAG,MAAM,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,UAAU,CAAC,KAAK,EAAE,EACrD,QAAQ,CAAC,MAAM,UAAU,CAAC,QAAQ,IAAI;oBAC1C;oBACA,IAAI,MAAM,MAAM,EAAE;wBAChB,MAAM,IAAI,MAAM;oBAClB;oBACA,IAAI,MAAM,IAAI,KAAK,UAAU,OAAO,MAAM,YAAY,KAAK,cAAc,CAAC,WAAW,cAAc,WAAW,WAAW,WAAW,OAAO,GAAG;wBAC5I,IAAI,WAAW,SAAS;4BACtB,MAAM,IAAI,SAAS,CAAC,kNAAA,CAAA,MAAG,CAAC,oBAAoB,CAAC;wBAC/C,OAAO;4BACL,MAAM,IAAI,SAAS,CAAC,kNAAA,CAAA,MAAG,CAAC,iBAAiB,CAAC;wBAC5C;oBACF;oBACA,OAAO;gBACT;gBACA,WAAW,IAAI,CAAC;YAClB;QACF;IACF;IACA,IAAI,YAAY,MAAM,EAAE;QACtB,KAAK,MAAM,SAAS,YAAa;YAC/B,IAAI,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,MAAM,KAAK,EAAE,SAAS,CACpD,MACA,OAAO,QAAQ,EAAE,UAAU,cAAc,WAAW,aAAa,WAAW,YAAY,WAAW,WAAW,WAAW,UAAU,gBAAgB,QACnJ,CAAC;gBACC,IAAI,OAAO,QAAQ,EAAE,UAAU,aAAa;oBAC1C,IAAI,WAAW,cAAc,WAAW,UAAU;wBAChD,OAAO,IAAI,UAAU,GAAG,OAAO;oBACjC,OAAO,IAAI,WAAW,SAAS;wBAC7B,OAAO,IAAI,QAAQ,GAAG,UAAU,GAAG,OAAO;oBAC5C;oBACA,OAAO,IAAI,aAAa,GAAG,UAAU,GAAG,OAAO;gBACjD;gBACA,OAAO,IAAI,UAAU,GAAG,OAAO;YACjC;YAEF,KAAK,MAAM,CAAC,WAAW,MAAM,IAAI,OAAO,OAAO,CAAC,MAAM,MAAM,EAAG;gBAC7D,MAAM,OAAO,QAAQ,OAAO;gBAC5B,MAAM,IAAI,SAAS,CAAC,WAAW,MAAM,CAAC;oBACpC,MAAM,MAAM,QAAQ,KAAK,QAAQ,IAAI,OAAO,KAAK;oBACjD,IAAI,MAAM,UAAU,EAAE;wBACpB,MAAM,IAAI,UAAU,CAAC,GAAG,MAAM,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,UAAU,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,UAAU,CAAC,QAAQ,IAAI;oBACpH;oBACA,IAAI,MAAM,MAAM,EAAE;wBAChB,MAAM,IAAI,MAAM;oBAClB;oBACA,IAAI,MAAM,IAAI,KAAK,UAAU,OAAO,MAAM,YAAY,KAAK,cAAc,CAAC,WAAW,cAAc,WAAW,WAAW,WAAW,OAAO,GAAG;wBAC5I,IAAI,WAAW,SAAS;4BACtB,MAAM,IAAI,SAAS,CAAC,kNAAA,CAAA,MAAG,CAAC,oBAAoB,CAAC;wBAC/C,OAAO;4BACL,MAAM,IAAI,SAAS,CAAC,kNAAA,CAAA,MAAG,CAAC,iBAAiB,CAAC;wBAC5C;oBACF;oBACA,OAAO;gBACT;YACF;YACA,WAAW,IAAI,CAAC;QAClB;IACF;IACA,eAAe;QACb,KAAK,MAAM,aAAa,WAAY;YAClC,MAAM,UAAU,OAAO;QACzB;IACF;IACA,eAAe;QACb,MAAM,WAAW,WAAW,GAAG,CAAC,CAAC,IAAM,EAAE,OAAO,GAAG,GAAG;QACtD,OAAO,SAAS,IAAI,CAAC,WAAW;IAClC;IACA,OAAO;QAAE;QAAa;QAAW;QAAe;IAAkB;AACpE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8752, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.YwDQhoPc.mjs"],"sourcesContent":["import { APIError } from 'better-call';\n\nasync function validatePassword(ctx, data) {\n  const accounts = await ctx.context.internalAdapter.findAccounts(data.userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword) {\n    return false;\n  }\n  const compare = await ctx.context.password.verify({\n    hash: currentPassword,\n    password: data.password\n  });\n  return compare;\n}\nasync function checkPassword(userId, c) {\n  const accounts = await c.context.internalAdapter.findAccounts(userId);\n  const credentialAccount = accounts?.find(\n    (account) => account.providerId === \"credential\"\n  );\n  const currentPassword = credentialAccount?.password;\n  if (!credentialAccount || !currentPassword || !c.body.password) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"No password credential found\"\n    });\n  }\n  const compare = await c.context.password.verify({\n    hash: currentPassword,\n    password: c.body.password\n  });\n  if (!compare) {\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"Invalid password\"\n    });\n  }\n  return true;\n}\n\nexport { checkPassword as c, validatePassword as v };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,eAAe,iBAAiB,GAAG,EAAE,IAAI;IACvC,MAAM,WAAW,MAAM,IAAI,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,MAAM;IAC3E,MAAM,oBAAoB,UAAU,KAClC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,mBAAmB;IAC3C,IAAI,CAAC,qBAAqB,CAAC,iBAAiB;QAC1C,OAAO;IACT;IACA,MAAM,UAAU,MAAM,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChD,MAAM;QACN,UAAU,KAAK,QAAQ;IACzB;IACA,OAAO;AACT;AACA,eAAe,cAAc,MAAM,EAAE,CAAC;IACpC,MAAM,WAAW,MAAM,EAAE,OAAO,CAAC,eAAe,CAAC,YAAY,CAAC;IAC9D,MAAM,oBAAoB,UAAU,KAClC,CAAC,UAAY,QAAQ,UAAU,KAAK;IAEtC,MAAM,kBAAkB,mBAAmB;IAC3C,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,QAAQ,EAAE;QAC9D,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,MAAM,UAAU,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC9C,MAAM;QACN,UAAU,EAAE,IAAI,CAAC,QAAQ;IAC3B;IACA,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,2MAAA,CAAA,WAAQ,CAAC,eAAe;YAChC,SAAS;QACX;IACF;IACA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8796, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.B_MIzgm3.mjs"],"sourcesContent":["import { checkEndpointConflicts, getEndpoints, router } from '../api/index.mjs';\nimport { defu } from 'defu';\nimport { verifyPassword, hashPassword } from '../crypto/index.mjs';\nimport '@better-auth/core/db';\nimport { a as getAdapter, c as createInternalAdapter, e as getMigrations } from './better-auth.RLDtNcHN.mjs';\nimport { g as getAuthTables } from './better-auth.pQjeRkzN.mjs';\nimport 'zod';\nimport 'better-call';\nimport { g as getCookies, c as createCookieGetter } from './better-auth.D9_vQR83.mjs';\nimport { createLogger, env, isProduction, isTest } from '@better-auth/core/env';\nimport { socialProviders } from '@better-auth/core/social-providers';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport '@better-auth/utils/base64';\nimport 'jose';\nimport './better-auth.B4Qoxdgc.mjs';\nimport { c as checkPassword } from './better-auth.YwDQhoPc.mjs';\nimport { a as getBaseURL, g as getOrigin } from './better-auth.DR3R5wdU.mjs';\nimport { BetterAuthError, BASE_ERROR_CODES } from '@better-auth/core/error';\nimport { createTelemetry } from '@better-auth/telemetry';\nimport { g as getKyselyDatabaseType } from './better-auth.CBTS2OzX.mjs';\n\nconst DEFAULT_SECRET = \"better-auth-secret-123456789\";\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === \"object\" || typeof obj === \"function\") && typeof obj.then === \"function\";\n}\n\nconst init = async (options) => {\n  const adapter = await getAdapter(options);\n  const plugins = options.plugins || [];\n  const internalPlugins = getInternalPlugins(options);\n  const logger = createLogger(options.logger);\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  const secret = options.secret || env.BETTER_AUTH_SECRET || env.AUTH_SECRET || DEFAULT_SECRET;\n  if (secret === DEFAULT_SECRET) {\n    if (isProduction) {\n      logger.error(\n        \"You are using the default secret. Please set `BETTER_AUTH_SECRET` in your environment variables or pass `secret` in your auth config.\"\n      );\n    }\n  }\n  options = {\n    ...options,\n    secret,\n    baseURL: baseURL ? new URL(baseURL).origin : \"\",\n    basePath: options.basePath || \"/api/auth\",\n    plugins: plugins.concat(internalPlugins)\n  };\n  checkEndpointConflicts(options, logger);\n  const cookies = getCookies(options);\n  const tables = getAuthTables(options);\n  const providers = Object.entries(\n    options.socialProviders || {}\n  ).map(([key, config]) => {\n    if (config == null) {\n      return null;\n    }\n    if (config.enabled === false) {\n      return null;\n    }\n    if (!config.clientId) {\n      logger.warn(\n        `Social provider ${key} is missing clientId or clientSecret`\n      );\n    }\n    const provider = socialProviders[key](config);\n    provider.disableImplicitSignUp = config.disableImplicitSignUp;\n    return provider;\n  }).filter((x) => x !== null);\n  const generateIdFunc = ({ model, size }) => {\n    if (typeof options.advanced?.generateId === \"function\") {\n      return options.advanced.generateId({ model, size });\n    }\n    if (typeof options?.advanced?.database?.generateId === \"function\") {\n      return options.advanced.database.generateId({ model, size });\n    }\n    return generateId(size);\n  };\n  const { publish } = await createTelemetry(options, {\n    adapter: adapter.id,\n    database: typeof options.database === \"function\" ? \"adapter\" : getKyselyDatabaseType(options.database) || \"unknown\"\n  });\n  let ctx = {\n    appName: options.appName || \"Better Auth\",\n    socialProviders: providers,\n    options,\n    tables,\n    trustedOrigins: getTrustedOrigins(options),\n    baseURL: baseURL || \"\",\n    sessionConfig: {\n      updateAge: options.session?.updateAge !== void 0 ? options.session.updateAge : 24 * 60 * 60,\n      // 24 hours\n      expiresIn: options.session?.expiresIn || 60 * 60 * 24 * 7,\n      // 7 days\n      freshAge: options.session?.freshAge === void 0 ? 60 * 60 * 24 : options.session.freshAge\n    },\n    secret,\n    rateLimit: {\n      ...options.rateLimit,\n      enabled: options.rateLimit?.enabled ?? isProduction,\n      window: options.rateLimit?.window || 10,\n      max: options.rateLimit?.max || 100,\n      storage: options.rateLimit?.storage || (options.secondaryStorage ? \"secondary-storage\" : \"memory\")\n    },\n    authCookies: cookies,\n    logger,\n    generateId: generateIdFunc,\n    session: null,\n    secondaryStorage: options.secondaryStorage,\n    password: {\n      hash: options.emailAndPassword?.password?.hash || hashPassword,\n      verify: options.emailAndPassword?.password?.verify || verifyPassword,\n      config: {\n        minPasswordLength: options.emailAndPassword?.minPasswordLength || 8,\n        maxPasswordLength: options.emailAndPassword?.maxPasswordLength || 128\n      },\n      checkPassword\n    },\n    setNewSession(session) {\n      this.newSession = session;\n    },\n    newSession: null,\n    adapter,\n    internalAdapter: createInternalAdapter(adapter, {\n      options,\n      logger,\n      hooks: options.databaseHooks ? [options.databaseHooks] : []}),\n    createAuthCookie: createCookieGetter(options),\n    async runMigrations() {\n      if (!options.database || \"updateMany\" in options.database) {\n        throw new BetterAuthError(\n          \"Database is not provided or it's an adapter. Migrations are only supported with a database instance.\"\n        );\n      }\n      const { runMigrations } = await getMigrations(options);\n      await runMigrations();\n    },\n    publishTelemetry: publish,\n    skipCSRFCheck: !!options.advanced?.disableCSRFCheck,\n    skipOriginCheck: options.advanced?.disableOriginCheck !== void 0 ? options.advanced.disableOriginCheck : isTest() ? true : false\n  };\n  const initOrPromise = runPluginInit(ctx);\n  let context;\n  if (isPromise(initOrPromise)) {\n    ({ context } = await initOrPromise);\n  } else {\n    ({ context } = initOrPromise);\n  }\n  return context;\n};\nasync function runPluginInit(ctx) {\n  let options = ctx.options;\n  const plugins = options.plugins || [];\n  let context = ctx;\n  const dbHooks = [];\n  for (const plugin of plugins) {\n    if (plugin.init) {\n      let initPromise = plugin.init(context);\n      let result;\n      if (isPromise(initPromise)) {\n        result = await initPromise;\n      } else {\n        result = initPromise;\n      }\n      if (typeof result === \"object\") {\n        if (result.options) {\n          const { databaseHooks, ...restOpts } = result.options;\n          if (databaseHooks) {\n            dbHooks.push(databaseHooks);\n          }\n          options = defu(options, restOpts);\n        }\n        if (result.context) {\n          context = {\n            ...context,\n            ...result.context\n          };\n        }\n      }\n    }\n  }\n  dbHooks.push(options.databaseHooks);\n  context.internalAdapter = createInternalAdapter(ctx.adapter, {\n    options,\n    logger: ctx.logger,\n    hooks: dbHooks.filter((u) => u !== void 0),\n    generateId: ctx.generateId\n  });\n  context.options = options;\n  return { context };\n}\nfunction getInternalPlugins(options) {\n  const plugins = [];\n  if (options.advanced?.crossSubDomainCookies?.enabled) ;\n  return plugins;\n}\nfunction getTrustedOrigins(options) {\n  const baseURL = getBaseURL(options.baseURL, options.basePath);\n  if (!baseURL) {\n    return [];\n  }\n  const trustedOrigins = [new URL(baseURL).origin];\n  if (options.trustedOrigins && Array.isArray(options.trustedOrigins)) {\n    trustedOrigins.push(...options.trustedOrigins);\n  }\n  const envTrustedOrigins = env.BETTER_AUTH_TRUSTED_ORIGINS;\n  if (envTrustedOrigins) {\n    trustedOrigins.push(...envTrustedOrigins.split(\",\"));\n  }\n  if (trustedOrigins.filter((x) => !x).length) {\n    throw new BetterAuthError(\n      \"A provided trusted origin is invalid, make sure your trusted origins list is properly defined.\"\n    );\n  }\n  return trustedOrigins;\n}\n\nconst betterAuth = (options) => {\n  const authContext = init(options);\n  const { api } = getEndpoints(authContext, options);\n  const errorCodes = options.plugins?.reduce((acc, plugin) => {\n    if (plugin.$ERROR_CODES) {\n      return {\n        ...acc,\n        ...plugin.$ERROR_CODES\n      };\n    }\n    return acc;\n  }, {});\n  return {\n    handler: async (request) => {\n      const ctx = await authContext;\n      const basePath = ctx.options.basePath || \"/api/auth\";\n      if (!ctx.options.baseURL) {\n        const baseURL = getBaseURL(void 0, basePath, request);\n        if (baseURL) {\n          ctx.baseURL = baseURL;\n          ctx.options.baseURL = getOrigin(ctx.baseURL) || void 0;\n        } else {\n          throw new BetterAuthError(\n            \"Could not get base URL from request. Please provide a valid base URL.\"\n          );\n        }\n      }\n      ctx.trustedOrigins = [\n        ...options.trustedOrigins ? Array.isArray(options.trustedOrigins) ? options.trustedOrigins : await options.trustedOrigins(request) : [],\n        ctx.options.baseURL\n      ];\n      const { handler } = router(ctx, options);\n      return handler(request);\n    },\n    api,\n    options,\n    $context: authContext,\n    $Infer: {},\n    $ERROR_CODES: {\n      ...errorCodes,\n      ...BASE_ERROR_CODES\n    }\n  };\n};\n\nexport { betterAuth as b };\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,iBAAiB;AAEvB,SAAS,UAAU,GAAG;IACpB,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,QAAQ,YAAY,OAAO,QAAQ,UAAU,KAAK,OAAO,IAAI,IAAI,KAAK;AAChG;AAEA,MAAM,OAAO,OAAO;IAClB,MAAM,UAAU,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE;IACjC,MAAM,UAAU,QAAQ,OAAO,IAAI,EAAE;IACrC,MAAM,kBAAkB,mBAAmB;IAC3C,MAAM,SAAS,CAAA,GAAA,uXAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,MAAM;IAC1C,MAAM,UAAU,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE,QAAQ,OAAO,EAAE,QAAQ,QAAQ;IAC5D,MAAM,SAAS,QAAQ,MAAM,IAAI,uXAAA,CAAA,MAAG,CAAC,kBAAkB,IAAI,uXAAA,CAAA,MAAG,CAAC,WAAW,IAAI;IAC9E,IAAI,WAAW,gBAAgB;QAC7B,IAAI,uXAAA,CAAA,eAAY,EAAE;YAChB,OAAO,KAAK,CACV;QAEJ;IACF;IACA,UAAU;QACR,GAAG,OAAO;QACV;QACA,SAAS,UAAU,IAAI,IAAI,SAAS,MAAM,GAAG;QAC7C,UAAU,QAAQ,QAAQ,IAAI;QAC9B,SAAS,QAAQ,MAAM,CAAC;IAC1B;IACA,CAAA,GAAA,yXAAA,CAAA,yBAAsB,AAAD,EAAE,SAAS;IAChC,MAAM,UAAU,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE;IAC3B,MAAM,SAAS,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;IAC7B,MAAM,YAAY,OAAO,OAAO,CAC9B,QAAQ,eAAe,IAAI,CAAC,GAC5B,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO;QAClB,IAAI,UAAU,MAAM;YAClB,OAAO;QACT;QACA,IAAI,OAAO,OAAO,KAAK,OAAO;YAC5B,OAAO;QACT;QACA,IAAI,CAAC,OAAO,QAAQ,EAAE;YACpB,OAAO,IAAI,CACT,CAAC,gBAAgB,EAAE,IAAI,oCAAoC,CAAC;QAEhE;QACA,MAAM,WAAW,uYAAA,CAAA,kBAAe,CAAC,IAAI,CAAC;QACtC,SAAS,qBAAqB,GAAG,OAAO,qBAAqB;QAC7D,OAAO;IACT,GAAG,MAAM,CAAC,CAAC,IAAM,MAAM;IACvB,MAAM,iBAAiB,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE;QACrC,IAAI,OAAO,QAAQ,QAAQ,EAAE,eAAe,YAAY;YACtD,OAAO,QAAQ,QAAQ,CAAC,UAAU,CAAC;gBAAE;gBAAO;YAAK;QACnD;QACA,IAAI,OAAO,SAAS,UAAU,UAAU,eAAe,YAAY;YACjE,OAAO,QAAQ,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAAE;gBAAO;YAAK;QAC5D;QACA,OAAO,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE;IACpB;IACA,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,8UAAA,CAAA,kBAAe,AAAD,EAAE,SAAS;QACjD,SAAS,QAAQ,EAAE;QACnB,UAAU,OAAO,QAAQ,QAAQ,KAAK,aAAa,YAAY,CAAA,GAAA,iYAAA,CAAA,IAAqB,AAAD,EAAE,QAAQ,QAAQ,KAAK;IAC5G;IACA,IAAI,MAAM;QACR,SAAS,QAAQ,OAAO,IAAI;QAC5B,iBAAiB;QACjB;QACA;QACA,gBAAgB,kBAAkB;QAClC,SAAS,WAAW;QACpB,eAAe;YACb,WAAW,QAAQ,OAAO,EAAE,cAAc,KAAK,IAAI,QAAQ,OAAO,CAAC,SAAS,GAAG,KAAK,KAAK;YACzF,WAAW;YACX,WAAW,QAAQ,OAAO,EAAE,aAAa,KAAK,KAAK,KAAK;YACxD,SAAS;YACT,UAAU,QAAQ,OAAO,EAAE,aAAa,KAAK,IAAI,KAAK,KAAK,KAAK,QAAQ,OAAO,CAAC,QAAQ;QAC1F;QACA;QACA,WAAW;YACT,GAAG,QAAQ,SAAS;YACpB,SAAS,QAAQ,SAAS,EAAE,WAAW,uXAAA,CAAA,eAAY;YACnD,QAAQ,QAAQ,SAAS,EAAE,UAAU;YACrC,KAAK,QAAQ,SAAS,EAAE,OAAO;YAC/B,SAAS,QAAQ,SAAS,EAAE,WAAW,CAAC,QAAQ,gBAAgB,GAAG,sBAAsB,QAAQ;QACnG;QACA,aAAa;QACb;QACA,YAAY;QACZ,SAAS;QACT,kBAAkB,QAAQ,gBAAgB;QAC1C,UAAU;YACR,MAAM,QAAQ,gBAAgB,EAAE,UAAU,QAAQ,4XAAA,CAAA,eAAY;YAC9D,QAAQ,QAAQ,gBAAgB,EAAE,UAAU,UAAU,4XAAA,CAAA,iBAAc;YACpE,QAAQ;gBACN,mBAAmB,QAAQ,gBAAgB,EAAE,qBAAqB;gBAClE,mBAAmB,QAAQ,gBAAgB,EAAE,qBAAqB;YACpE;YACA,eAAA,iYAAA,CAAA,IAAa;QACf;QACA,eAAc,OAAO;YACnB,IAAI,CAAC,UAAU,GAAG;QACpB;QACA,YAAY;QACZ;QACA,iBAAiB,CAAA,GAAA,iYAAA,CAAA,IAAqB,AAAD,EAAE,SAAS;YAC9C;YACA;YACA,OAAO,QAAQ,aAAa,GAAG;gBAAC,QAAQ,aAAa;aAAC,GAAG,EAAE;QAAA;QAC7D,kBAAkB,CAAA,GAAA,iYAAA,CAAA,IAAkB,AAAD,EAAE;QACrC,MAAM;YACJ,IAAI,CAAC,QAAQ,QAAQ,IAAI,gBAAgB,QAAQ,QAAQ,EAAE;gBACzD,MAAM,IAAI,yXAAA,CAAA,kBAAe,CACvB;YAEJ;YACA,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,CAAA,GAAA,iYAAA,CAAA,IAAa,AAAD,EAAE;YAC9C,MAAM;QACR;QACA,kBAAkB;QAClB,eAAe,CAAC,CAAC,QAAQ,QAAQ,EAAE;QACnC,iBAAiB,QAAQ,QAAQ,EAAE,uBAAuB,KAAK,IAAI,QAAQ,QAAQ,CAAC,kBAAkB,GAAG,CAAA,GAAA,uXAAA,CAAA,SAAM,AAAD,MAAM,OAAO;IAC7H;IACA,MAAM,gBAAgB,cAAc;IACpC,IAAI;IACJ,IAAI,UAAU,gBAAgB;QAC5B,CAAC,EAAE,OAAO,EAAE,GAAG,MAAM,aAAa;IACpC,OAAO;QACL,CAAC,EAAE,OAAO,EAAE,GAAG,aAAa;IAC9B;IACA,OAAO;AACT;AACA,eAAe,cAAc,GAAG;IAC9B,IAAI,UAAU,IAAI,OAAO;IACzB,MAAM,UAAU,QAAQ,OAAO,IAAI,EAAE;IACrC,IAAI,UAAU;IACd,MAAM,UAAU,EAAE;IAClB,KAAK,MAAM,UAAU,QAAS;QAC5B,IAAI,OAAO,IAAI,EAAE;YACf,IAAI,cAAc,OAAO,IAAI,CAAC;YAC9B,IAAI;YACJ,IAAI,UAAU,cAAc;gBAC1B,SAAS,MAAM;YACjB,OAAO;gBACL,SAAS;YACX;YACA,IAAI,OAAO,WAAW,UAAU;gBAC9B,IAAI,OAAO,OAAO,EAAE;oBAClB,MAAM,EAAE,aAAa,EAAE,GAAG,UAAU,GAAG,OAAO,OAAO;oBACrD,IAAI,eAAe;wBACjB,QAAQ,IAAI,CAAC;oBACf;oBACA,UAAU,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE,SAAS;gBAC1B;gBACA,IAAI,OAAO,OAAO,EAAE;oBAClB,UAAU;wBACR,GAAG,OAAO;wBACV,GAAG,OAAO,OAAO;oBACnB;gBACF;YACF;QACF;IACF;IACA,QAAQ,IAAI,CAAC,QAAQ,aAAa;IAClC,QAAQ,eAAe,GAAG,CAAA,GAAA,iYAAA,CAAA,IAAqB,AAAD,EAAE,IAAI,OAAO,EAAE;QAC3D;QACA,QAAQ,IAAI,MAAM;QAClB,OAAO,QAAQ,MAAM,CAAC,CAAC,IAAM,MAAM,KAAK;QACxC,YAAY,IAAI,UAAU;IAC5B;IACA,QAAQ,OAAO,GAAG;IAClB,OAAO;QAAE;IAAQ;AACnB;AACA,SAAS,mBAAmB,OAAO;IACjC,MAAM,UAAU,EAAE;IAClB,IAAI,QAAQ,QAAQ,EAAE,uBAAuB;IAC7C,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO;IAChC,MAAM,UAAU,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE,QAAQ,OAAO,EAAE,QAAQ,QAAQ;IAC5D,IAAI,CAAC,SAAS;QACZ,OAAO,EAAE;IACX;IACA,MAAM,iBAAiB;QAAC,IAAI,IAAI,SAAS,MAAM;KAAC;IAChD,IAAI,QAAQ,cAAc,IAAI,MAAM,OAAO,CAAC,QAAQ,cAAc,GAAG;QACnE,eAAe,IAAI,IAAI,QAAQ,cAAc;IAC/C;IACA,MAAM,oBAAoB,uXAAA,CAAA,MAAG,CAAC,2BAA2B;IACzD,IAAI,mBAAmB;QACrB,eAAe,IAAI,IAAI,kBAAkB,KAAK,CAAC;IACjD;IACA,IAAI,eAAe,MAAM,CAAC,CAAC,IAAM,CAAC,GAAG,MAAM,EAAE;QAC3C,MAAM,IAAI,yXAAA,CAAA,kBAAe,CACvB;IAEJ;IACA,OAAO;AACT;AAEA,MAAM,aAAa,CAAC;IAClB,MAAM,cAAc,KAAK;IACzB,MAAM,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,yXAAA,CAAA,eAAY,AAAD,EAAE,aAAa;IAC1C,MAAM,aAAa,QAAQ,OAAO,EAAE,OAAO,CAAC,KAAK;QAC/C,IAAI,OAAO,YAAY,EAAE;YACvB,OAAO;gBACL,GAAG,GAAG;gBACN,GAAG,OAAO,YAAY;YACxB;QACF;QACA,OAAO;IACT,GAAG,CAAC;IACJ,OAAO;QACL,SAAS,OAAO;YACd,MAAM,MAAM,MAAM;YAClB,MAAM,WAAW,IAAI,OAAO,CAAC,QAAQ,IAAI;YACzC,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;gBACxB,MAAM,UAAU,CAAA,GAAA,iYAAA,CAAA,IAAU,AAAD,EAAE,KAAK,GAAG,UAAU;gBAC7C,IAAI,SAAS;oBACX,IAAI,OAAO,GAAG;oBACd,IAAI,OAAO,CAAC,OAAO,GAAG,CAAA,GAAA,iYAAA,CAAA,IAAS,AAAD,EAAE,IAAI,OAAO,KAAK,KAAK;gBACvD,OAAO;oBACL,MAAM,IAAI,yXAAA,CAAA,kBAAe,CACvB;gBAEJ;YACF;YACA,IAAI,cAAc,GAAG;mBAChB,QAAQ,cAAc,GAAG,MAAM,OAAO,CAAC,QAAQ,cAAc,IAAI,QAAQ,cAAc,GAAG,MAAM,QAAQ,cAAc,CAAC,WAAW,EAAE;gBACvI,IAAI,OAAO,CAAC,OAAO;aACpB;YACD,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,yXAAA,CAAA,SAAM,AAAD,EAAE,KAAK;YAChC,OAAO,QAAQ;QACjB;QACA;QACA;QACA,UAAU;QACV,QAAQ,CAAC;QACT,cAAc;YACZ,GAAG,UAAU;YACb,GAAG,yXAAA,CAAA,mBAAgB;QACrB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9086, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.D-2CmEwz.mjs"],"sourcesContent":["function capitalizeFirstLetter(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport { capitalizeFirstLetter as c };\n"],"names":[],"mappings":";;;AAAA,SAAS,sBAAsB,GAAG;IAChC,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC;AACjD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9097, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/index.mjs"],"sourcesContent":["export * from '@better-auth/core/env';\nexport * from '@better-auth/core';\nexport * from '@better-auth/core/oauth2';\nexport * from '@better-auth/core/error';\nexport * from '@better-auth/core/utils';\nexport { b as betterAuth } from './shared/better-auth.B_MIzgm3.mjs';\nexport { c as capitalizeFirstLetter } from './shared/better-auth.D-2CmEwz.mjs';\nexport { H as HIDE_METADATA, g as generateState, p as parseState } from './shared/better-auth.zbFvKBO6.mjs';\nexport { g as generateId } from './shared/better-auth.BUPPRXfK.mjs';\nexport { createTelemetry, getTelemetryAuthConfig } from '@better-auth/telemetry';\nexport { APIError } from 'better-call';\nimport './shared/better-auth.DEBtROF9.mjs';\nimport 'zod';\nimport '@better-auth/core/middleware';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport '@better-auth/core/db';\nimport 'kysely';\nimport './api/index.mjs';\nimport './shared/better-auth.D9_vQR83.mjs';\nimport './shared/better-auth.CW6D9eSx.mjs';\nimport './shared/better-auth.BKEtEpt0.mjs';\nimport './shared/better-auth.DR3R5wdU.mjs';\nimport './shared/better-auth.Ih8C76Vo.mjs';\nimport './shared/better-auth.Cwj9dt6i.mjs';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './shared/better-auth.B4Qoxdgc.mjs';\nimport './shared/better-auth.ClH5r3NH.mjs';\nimport 'defu';\nimport './crypto/index.mjs';\nimport './shared/better-auth.RLDtNcHN.mjs';\nimport './shared/better-auth.pQjeRkzN.mjs';\nimport './shared/better-auth.CBTS2OzX.mjs';\nimport './shared/better-auth.EBxKeVNZ.mjs';\nimport './shared/better-auth.BNpIwq4C.mjs';\nimport '@better-auth/core/social-providers';\nimport './shared/better-auth.YwDQhoPc.mjs';\nimport 'jose/errors';\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9238, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.msGOU0m9.mjs"],"sourcesContent":["const PROTO_POLLUTION_PATTERNS = {\n  proto: /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/,\n  constructor: /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/,\n  protoShort: /\"__proto__\"\\s*:/,\n  constructorShort: /\"constructor\"\\s*:/\n};\nconst JSON_SIGNATURE = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nconst SPECIAL_VALUES = {\n  true: true,\n  false: false,\n  null: null,\n  undefined: void 0,\n  nan: Number.NaN,\n  infinity: Number.POSITIVE_INFINITY,\n  \"-infinity\": Number.NEGATIVE_INFINITY\n};\nconst ISO_DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{1,7}))?(?:Z|([+-])(\\d{2}):(\\d{2}))$/;\nfunction isValidDate(date) {\n  return date instanceof Date && !isNaN(date.getTime());\n}\nfunction parseISODate(value) {\n  const match = ISO_DATE_REGEX.exec(value);\n  if (!match) return null;\n  const [\n    ,\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    ms,\n    offsetSign,\n    offsetHour,\n    offsetMinute\n  ] = match;\n  let date = new Date(\n    Date.UTC(\n      parseInt(year, 10),\n      parseInt(month, 10) - 1,\n      parseInt(day, 10),\n      parseInt(hour, 10),\n      parseInt(minute, 10),\n      parseInt(second, 10),\n      ms ? parseInt(ms.padEnd(3, \"0\"), 10) : 0\n    )\n  );\n  if (offsetSign) {\n    const offset = (parseInt(offsetHour, 10) * 60 + parseInt(offsetMinute, 10)) * (offsetSign === \"+\" ? -1 : 1);\n    date.setUTCMinutes(date.getUTCMinutes() + offset);\n  }\n  return isValidDate(date) ? date : null;\n}\nfunction betterJSONParse(value, options = {}) {\n  const {\n    strict = false,\n    warnings = false,\n    reviver,\n    parseDates = true\n  } = options;\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  const trimmed = value.trim();\n  if (trimmed.length > 0 && trimmed[0] === '\"' && trimmed.endsWith('\"') && !trimmed.slice(1, -1).includes('\"')) {\n    return trimmed.slice(1, -1);\n  }\n  const lowerValue = trimmed.toLowerCase();\n  if (lowerValue.length <= 9 && lowerValue in SPECIAL_VALUES) {\n    return SPECIAL_VALUES[lowerValue];\n  }\n  if (!JSON_SIGNATURE.test(trimmed)) {\n    if (strict) {\n      throw new SyntaxError(\"[better-json] Invalid JSON\");\n    }\n    return value;\n  }\n  const hasProtoPattern = Object.entries(PROTO_POLLUTION_PATTERNS).some(\n    ([key, pattern]) => {\n      const matches = pattern.test(trimmed);\n      if (matches && warnings) {\n        console.warn(\n          `[better-json] Detected potential prototype pollution attempt using ${key} pattern`\n        );\n      }\n      return matches;\n    }\n  );\n  if (hasProtoPattern && strict) {\n    throw new Error(\n      \"[better-json] Potential prototype pollution attempt detected\"\n    );\n  }\n  try {\n    const secureReviver = (key, value2) => {\n      if (key === \"__proto__\" || key === \"constructor\" && value2 && typeof value2 === \"object\" && \"prototype\" in value2) {\n        if (warnings) {\n          console.warn(\n            `[better-json] Dropping \"${key}\" key to prevent prototype pollution`\n          );\n        }\n        return void 0;\n      }\n      if (parseDates && typeof value2 === \"string\") {\n        const date = parseISODate(value2);\n        if (date) {\n          return date;\n        }\n      }\n      return reviver ? reviver(key, value2) : value2;\n    };\n    return JSON.parse(trimmed, secureReviver);\n  } catch (error) {\n    if (strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction parseJSON(value, options = { strict: true }) {\n  return betterJSONParse(value, options);\n}\n\nexport { parseJSON as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9335, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.ccXb5WNm.mjs"],"sourcesContent":["import { createAuthMiddleware } from '@better-auth/core/middleware';\nimport 'better-call';\nimport './better-auth.zbFvKBO6.mjs';\nimport { s as sessionMiddleware } from './better-auth.DEBtROF9.mjs';\nimport * as z from 'zod';\nimport '@better-auth/core/error';\nimport '@better-auth/core/env';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport '@better-auth/core/db';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './better-auth.B4Qoxdgc.mjs';\nimport 'kysely';\nimport { defineErrorCodes } from '@better-auth/core/utils';\nimport { g as generateId } from './better-auth.BUPPRXfK.mjs';\n\nconst orgMiddleware = createAuthMiddleware(async () => {\n  return {};\n});\nconst orgSessionMiddleware = createAuthMiddleware(\n  {\n    use: [sessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    return {\n      session\n    };\n  }\n);\n\nconst ORGANIZATION_ERROR_CODES = defineErrorCodes({\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_ORGANIZATION: \"You are not allowed to create a new organization\",\n  YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_ORGANIZATIONS: \"You have reached the maximum number of organizations\",\n  ORGANIZATION_ALREADY_EXISTS: \"Organization already exists\",\n  ORGANIZATION_NOT_FOUND: \"Organization not found\",\n  USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION: \"User is not a member of the organization\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_ORGANIZATION: \"You are not allowed to update this organization\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_ORGANIZATION: \"You are not allowed to delete this organization\",\n  NO_ACTIVE_ORGANIZATION: \"No active organization\",\n  USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION: \"User is already a member of this organization\",\n  MEMBER_NOT_FOUND: \"Member not found\",\n  ROLE_NOT_FOUND: \"Role not found\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_TEAM: \"You are not allowed to create a new team\",\n  TEAM_ALREADY_EXISTS: \"Team already exists\",\n  TEAM_NOT_FOUND: \"Team not found\",\n  YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER: \"You cannot leave the organization as the only owner\",\n  YOU_CANNOT_LEAVE_THE_ORGANIZATION_WITHOUT_AN_OWNER: \"You cannot leave the organization without an owner\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_MEMBER: \"You are not allowed to delete this member\",\n  YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION: \"You are not allowed to invite users to this organization\",\n  USER_IS_ALREADY_INVITED_TO_THIS_ORGANIZATION: \"User is already invited to this organization\",\n  INVITATION_NOT_FOUND: \"Invitation not found\",\n  YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION: \"You are not the recipient of the invitation\",\n  EMAIL_VERIFICATION_REQUIRED_BEFORE_ACCEPTING_OR_REJECTING_INVITATION: \"Email verification required before accepting or rejecting invitation\",\n  YOU_ARE_NOT_ALLOWED_TO_CANCEL_THIS_INVITATION: \"You are not allowed to cancel this invitation\",\n  INVITER_IS_NO_LONGER_A_MEMBER_OF_THE_ORGANIZATION: \"Inviter is no longer a member of the organization\",\n  YOU_ARE_NOT_ALLOWED_TO_INVITE_USER_WITH_THIS_ROLE: \"You are not allowed to invite a user with this role\",\n  FAILED_TO_RETRIEVE_INVITATION: \"Failed to retrieve invitation\",\n  YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_TEAMS: \"You have reached the maximum number of teams\",\n  UNABLE_TO_REMOVE_LAST_TEAM: \"Unable to remove last team\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER: \"You are not allowed to update this member\",\n  ORGANIZATION_MEMBERSHIP_LIMIT_REACHED: \"Organization membership limit reached\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_TEAMS_IN_THIS_ORGANIZATION: \"You are not allowed to create teams in this organization\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_TEAMS_IN_THIS_ORGANIZATION: \"You are not allowed to delete teams in this organization\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM: \"You are not allowed to update this team\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_TEAM: \"You are not allowed to delete this team\",\n  INVITATION_LIMIT_REACHED: \"Invitation limit reached\",\n  TEAM_MEMBER_LIMIT_REACHED: \"Team member limit reached\",\n  USER_IS_NOT_A_MEMBER_OF_THE_TEAM: \"User is not a member of the team\",\n  YOU_CAN_NOT_ACCESS_THE_MEMBERS_OF_THIS_TEAM: \"You are not allowed to list the members of this team\",\n  YOU_DO_NOT_HAVE_AN_ACTIVE_TEAM: \"You do not have an active team\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_TEAM_MEMBER: \"You are not allowed to create a new member\",\n  YOU_ARE_NOT_ALLOWED_TO_REMOVE_A_TEAM_MEMBER: \"You are not allowed to remove a team member\",\n  YOU_ARE_NOT_ALLOWED_TO_ACCESS_THIS_ORGANIZATION: \"You are not allowed to access this organization as an owner\",\n  YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION: \"You are not a member of this organization\",\n  MISSING_AC_INSTANCE: \"Dynamic Access Control requires a pre-defined ac instance on the server auth plugin. Read server logs for more information\",\n  YOU_MUST_BE_IN_AN_ORGANIZATION_TO_CREATE_A_ROLE: \"You must be in an organization to create a role\",\n  YOU_ARE_NOT_ALLOWED_TO_CREATE_A_ROLE: \"You are not allowed to create a role\",\n  YOU_ARE_NOT_ALLOWED_TO_UPDATE_A_ROLE: \"You are not allowed to update a role\",\n  YOU_ARE_NOT_ALLOWED_TO_DELETE_A_ROLE: \"You are not allowed to delete a role\",\n  YOU_ARE_NOT_ALLOWED_TO_READ_A_ROLE: \"You are not allowed to read a role\",\n  YOU_ARE_NOT_ALLOWED_TO_LIST_A_ROLE: \"You are not allowed to list a role\",\n  YOU_ARE_NOT_ALLOWED_TO_GET_A_ROLE: \"You are not allowed to get a role\",\n  TOO_MANY_ROLES: \"This organization has too many roles\",\n  INVALID_RESOURCE: \"The provided permission includes an invalid resource\",\n  ROLE_NAME_IS_ALREADY_TAKEN: \"That role name is already taken\",\n  CANNOT_DELETE_A_PRE_DEFINED_ROLE: \"Cannot delete a pre-defined role\"\n});\n\nconst role = z.string();\nconst invitationStatus = z.enum([\"pending\", \"accepted\", \"rejected\", \"canceled\"]).default(\"pending\");\nz.object({\n  id: z.string().default(generateId),\n  name: z.string(),\n  slug: z.string(),\n  logo: z.string().nullish().optional(),\n  metadata: z.record(z.string(), z.unknown()).or(z.string().transform((v) => JSON.parse(v))).optional(),\n  createdAt: z.date()\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  userId: z.coerce.string(),\n  role,\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  email: z.string(),\n  role,\n  status: invitationStatus,\n  teamId: z.string().nullish(),\n  inviterId: z.string(),\n  expiresAt: z.date()\n});\nconst teamSchema = z.object({\n  id: z.string().default(generateId),\n  name: z.string().min(1),\n  organizationId: z.string(),\n  createdAt: z.date(),\n  updatedAt: z.date().optional()\n});\nz.object({\n  id: z.string().default(generateId),\n  teamId: z.string(),\n  userId: z.string(),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date())\n});\nz.object({\n  id: z.string().default(generateId),\n  organizationId: z.string(),\n  role: z.string(),\n  permission: z.record(z.string(), z.array(z.string())),\n  createdAt: z.date().default(() => /* @__PURE__ */ new Date()),\n  updatedAt: z.date().optional()\n});\nconst defaultRoles = [\"admin\", \"member\", \"owner\"];\nz.union([\n  z.enum(defaultRoles),\n  z.array(z.enum(defaultRoles))\n]);\n\nexport { ORGANIZATION_ERROR_CODES as O, orgSessionMiddleware as a, orgMiddleware as o, teamSchema as t };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9519, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.BxexnJiR.mjs"],"sourcesContent":["import * as z from 'zod';\n\nfunction toZodSchema({\n  fields,\n  isClientSide\n}) {\n  const zodFields = Object.keys(fields).reduce((acc, key) => {\n    const field = fields[key];\n    if (!field) {\n      return acc;\n    }\n    if (isClientSide && field.input === false) {\n      return acc;\n    }\n    let schema2;\n    if (field.type === \"json\") {\n      schema2 = z.json ? z.json() : z.any();\n    } else if (field.type === \"string[]\" || field.type === \"number[]\") {\n      schema2 = z.array(field.type === \"string[]\" ? z.string() : z.number());\n    } else if (Array.isArray(field.type)) {\n      schema2 = z.any();\n    } else {\n      schema2 = z[field.type]();\n    }\n    if (field?.required === false) {\n      schema2 = schema2.optional();\n    }\n    if (field?.returned === false) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: schema2\n    };\n  }, {});\n  const schema = z.object(zodFields);\n  return schema;\n}\n\nexport { toZodSchema as t };\n"],"names":[],"mappings":";;;AAAA;;AAEA,SAAS,YAAY,EACnB,MAAM,EACN,YAAY,EACb;IACC,MAAM,YAAY,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC,KAAK;QACjD,MAAM,QAAQ,MAAM,CAAC,IAAI;QACzB,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QACA,IAAI,gBAAgB,MAAM,KAAK,KAAK,OAAO;YACzC,OAAO;QACT;QACA,IAAI;QACJ,IAAI,MAAM,IAAI,KAAK,QAAQ;YACzB,UAAU,8KAAE,IAAI,GAAG,8KAAE,IAAI,KAAK,8KAAE,GAAG;QACrC,OAAO,IAAI,MAAM,IAAI,KAAK,cAAc,MAAM,IAAI,KAAK,YAAY;YACjE,UAAU,8KAAE,KAAK,CAAC,MAAM,IAAI,KAAK,aAAa,8KAAE,MAAM,KAAK,8KAAE,MAAM;QACrE,OAAO,IAAI,MAAM,OAAO,CAAC,MAAM,IAAI,GAAG;YACpC,UAAU,8KAAE,GAAG;QACjB,OAAO;YACL,UAAU,6KAAC,CAAC,MAAM,IAAI,CAAC;QACzB;QACA,IAAI,OAAO,aAAa,OAAO;YAC7B,UAAU,QAAQ,QAAQ;QAC5B;QACA,IAAI,OAAO,aAAa,OAAO;YAC7B,OAAO;QACT;QACA,OAAO;YACL,GAAG,GAAG;YACN,CAAC,IAAI,EAAE;QACT;IACF,GAAG,CAAC;IACJ,MAAM,SAAS,8KAAE,MAAM,CAAC;IACxB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9562, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.BLxPPg5G.mjs"],"sourcesContent":["import { BetterAuthError } from '@better-auth/core/error';\n\nfunction role(statements) {\n  return {\n    authorize(request, connector = \"AND\") {\n      let success = false;\n      for (const [requestedResource, requestedActions] of Object.entries(\n        request\n      )) {\n        const allowedActions = statements[requestedResource];\n        if (!allowedActions) {\n          return {\n            success: false,\n            error: `You are not allowed to access resource: ${requestedResource}`\n          };\n        }\n        if (Array.isArray(requestedActions)) {\n          success = requestedActions.every(\n            (requestedAction) => allowedActions.includes(requestedAction)\n          );\n        } else {\n          if (typeof requestedActions === \"object\") {\n            const actions = requestedActions;\n            if (actions.connector === \"OR\") {\n              success = actions.actions.some(\n                (requestedAction) => allowedActions.includes(requestedAction)\n              );\n            } else {\n              success = actions.actions.every(\n                (requestedAction) => allowedActions.includes(requestedAction)\n              );\n            }\n          } else {\n            throw new BetterAuthError(\"Invalid access control request\");\n          }\n        }\n        if (success && connector === \"OR\") {\n          return { success };\n        }\n        if (!success && connector === \"AND\") {\n          return {\n            success: false,\n            error: `unauthorized to access resource \"${requestedResource}\"`\n          };\n        }\n      }\n      if (success) {\n        return {\n          success\n        };\n      }\n      return {\n        success: false,\n        error: \"Not authorized\"\n      };\n    },\n    statements\n  };\n}\nfunction createAccessControl(s) {\n  return {\n    newRole(statements) {\n      return role(statements);\n    },\n    statements: s\n  };\n}\n\nexport { createAccessControl as c, role as r };\n"],"names":[],"mappings":";;;;AAAA;;AAEA,SAAS,KAAK,UAAU;IACtB,OAAO;QACL,WAAU,OAAO,EAAE,YAAY,KAAK;YAClC,IAAI,UAAU;YACd,KAAK,MAAM,CAAC,mBAAmB,iBAAiB,IAAI,OAAO,OAAO,CAChE,SACC;gBACD,MAAM,iBAAiB,UAAU,CAAC,kBAAkB;gBACpD,IAAI,CAAC,gBAAgB;oBACnB,OAAO;wBACL,SAAS;wBACT,OAAO,CAAC,wCAAwC,EAAE,mBAAmB;oBACvE;gBACF;gBACA,IAAI,MAAM,OAAO,CAAC,mBAAmB;oBACnC,UAAU,iBAAiB,KAAK,CAC9B,CAAC,kBAAoB,eAAe,QAAQ,CAAC;gBAEjD,OAAO;oBACL,IAAI,OAAO,qBAAqB,UAAU;wBACxC,MAAM,UAAU;wBAChB,IAAI,QAAQ,SAAS,KAAK,MAAM;4BAC9B,UAAU,QAAQ,OAAO,CAAC,IAAI,CAC5B,CAAC,kBAAoB,eAAe,QAAQ,CAAC;wBAEjD,OAAO;4BACL,UAAU,QAAQ,OAAO,CAAC,KAAK,CAC7B,CAAC,kBAAoB,eAAe,QAAQ,CAAC;wBAEjD;oBACF,OAAO;wBACL,MAAM,IAAI,yXAAA,CAAA,kBAAe,CAAC;oBAC5B;gBACF;gBACA,IAAI,WAAW,cAAc,MAAM;oBACjC,OAAO;wBAAE;oBAAQ;gBACnB;gBACA,IAAI,CAAC,WAAW,cAAc,OAAO;oBACnC,OAAO;wBACL,SAAS;wBACT,OAAO,CAAC,iCAAiC,EAAE,kBAAkB,CAAC,CAAC;oBACjE;gBACF;YACF;YACA,IAAI,SAAS;gBACX,OAAO;oBACL;gBACF;YACF;YACA,OAAO;gBACL,SAAS;gBACT,OAAO;YACT;QACF;QACA;IACF;AACF;AACA,SAAS,oBAAoB,CAAC;IAC5B,OAAO;QACL,SAAQ,UAAU;YAChB,OAAO,KAAK;QACd;QACA,YAAY;IACd;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9632, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.DevHHPLH.mjs"],"sourcesContent":["import { c as createAccessControl } from './better-auth.BLxPPg5G.mjs';\n\nconst defaultStatements = {\n  organization: [\"update\", \"delete\"],\n  member: [\"create\", \"update\", \"delete\"],\n  invitation: [\"create\", \"cancel\"],\n  team: [\"create\", \"update\", \"delete\"],\n  ac: [\"create\", \"read\", \"update\", \"delete\"]\n};\nconst defaultAc = createAccessControl(defaultStatements);\nconst adminAc = defaultAc.newRole({\n  organization: [\"update\"],\n  invitation: [\"create\", \"cancel\"],\n  member: [\"create\", \"update\", \"delete\"],\n  team: [\"create\", \"update\", \"delete\"],\n  ac: [\"create\", \"read\", \"update\", \"delete\"]\n});\nconst ownerAc = defaultAc.newRole({\n  organization: [\"update\", \"delete\"],\n  member: [\"create\", \"update\", \"delete\"],\n  invitation: [\"create\", \"cancel\"],\n  team: [\"create\", \"update\", \"delete\"],\n  ac: [\"create\", \"read\", \"update\", \"delete\"]\n});\nconst memberAc = defaultAc.newRole({\n  organization: [],\n  member: [],\n  invitation: [],\n  team: [],\n  ac: [\"read\"]\n  // Allow members to see all roles for their org.\n});\nconst defaultRoles = {\n  admin: adminAc,\n  owner: ownerAc,\n  member: memberAc\n};\n\nexport { defaultAc as a, adminAc as b, defaultRoles as c, defaultStatements as d, memberAc as m, ownerAc as o };\n"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,MAAM,oBAAoB;IACxB,cAAc;QAAC;QAAU;KAAS;IAClC,QAAQ;QAAC;QAAU;QAAU;KAAS;IACtC,YAAY;QAAC;QAAU;KAAS;IAChC,MAAM;QAAC;QAAU;QAAU;KAAS;IACpC,IAAI;QAAC;QAAU;QAAQ;QAAU;KAAS;AAC5C;AACA,MAAM,YAAY,CAAA,GAAA,iYAAA,CAAA,IAAmB,AAAD,EAAE;AACtC,MAAM,UAAU,UAAU,OAAO,CAAC;IAChC,cAAc;QAAC;KAAS;IACxB,YAAY;QAAC;QAAU;KAAS;IAChC,QAAQ;QAAC;QAAU;QAAU;KAAS;IACtC,MAAM;QAAC;QAAU;QAAU;KAAS;IACpC,IAAI;QAAC;QAAU;QAAQ;QAAU;KAAS;AAC5C;AACA,MAAM,UAAU,UAAU,OAAO,CAAC;IAChC,cAAc;QAAC;QAAU;KAAS;IAClC,QAAQ;QAAC;QAAU;QAAU;KAAS;IACtC,YAAY;QAAC;QAAU;KAAS;IAChC,MAAM;QAAC;QAAU;QAAU;KAAS;IACpC,IAAI;QAAC;QAAU;QAAQ;QAAU;KAAS;AAC5C;AACA,MAAM,WAAW,UAAU,OAAO,CAAC;IACjC,cAAc,EAAE;IAChB,QAAQ,EAAE;IACV,YAAY,EAAE;IACd,MAAM,EAAE;IACR,IAAI;QAAC;KAAO;AAEd;AACA,MAAM,eAAe;IACnB,OAAO;IACP,OAAO;IACP,QAAQ;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9739, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.DaEBQJp_.mjs"],"sourcesContent":["const hasPermissionFn = (input, acRoles) => {\n  if (!input.permissions && !input.permission) return false;\n  const roles = input.role.split(\",\");\n  const creatorRole = input.options.creatorRole || \"owner\";\n  const isCreator = roles.includes(creatorRole);\n  const allowCreatorsAllPermissions = input.allowCreatorAllPermissions || false;\n  if (isCreator && allowCreatorsAllPermissions) return true;\n  for (const role of roles) {\n    const _role = acRoles[role];\n    const result = _role?.authorize(input.permissions ?? input.permission);\n    if (result?.success) {\n      return true;\n    }\n  }\n  return false;\n};\nlet cacheAllRoles = /* @__PURE__ */ new Map();\n\nexport { cacheAllRoles as c, hasPermissionFn as h };\n"],"names":[],"mappings":";;;;AAAA,MAAM,kBAAkB,CAAC,OAAO;IAC9B,IAAI,CAAC,MAAM,WAAW,IAAI,CAAC,MAAM,UAAU,EAAE,OAAO;IACpD,MAAM,QAAQ,MAAM,IAAI,CAAC,KAAK,CAAC;IAC/B,MAAM,cAAc,MAAM,OAAO,CAAC,WAAW,IAAI;IACjD,MAAM,YAAY,MAAM,QAAQ,CAAC;IACjC,MAAM,8BAA8B,MAAM,0BAA0B,IAAI;IACxE,IAAI,aAAa,6BAA6B,OAAO;IACrD,KAAK,MAAM,QAAQ,MAAO;QACxB,MAAM,QAAQ,OAAO,CAAC,KAAK;QAC3B,MAAM,SAAS,OAAO,UAAU,MAAM,WAAW,IAAI,MAAM,UAAU;QACrE,IAAI,QAAQ,SAAS;YACnB,OAAO;QACT;IACF;IACA,OAAO;AACT;AACA,IAAI,gBAAgB,aAAa,GAAG,IAAI","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9765, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/shared/better-auth.uWoihDRP.mjs"],"sourcesContent":["import { APIError } from 'better-call';\nimport * as z from 'zod';\nimport { createAuthEndpoint } from '@better-auth/core/middleware';\nimport './better-auth.zbFvKBO6.mjs';\nimport { g as getSessionFromCtx, s as sessionMiddleware, h as requestOnlySessionMiddleware } from './better-auth.DEBtROF9.mjs';\nimport { BetterAuthError, BASE_ERROR_CODES } from '@better-auth/core/error';\nimport '@better-auth/core/env';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport '@better-auth/utils/binary';\nimport '@better-auth/core/db';\nimport '@better-auth/utils/random';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport './better-auth.B4Qoxdgc.mjs';\nimport 'kysely';\nimport { g as getDate } from './better-auth.CW6D9eSx.mjs';\nimport { p as parseJSON } from './better-auth.msGOU0m9.mjs';\nimport { o as orgMiddleware, a as orgSessionMiddleware, O as ORGANIZATION_ERROR_CODES, t as teamSchema } from './better-auth.ccXb5WNm.mjs';\nimport { s as setSessionCookie } from './better-auth.D9_vQR83.mjs';\nimport { t as toZodSchema } from './better-auth.BxexnJiR.mjs';\nimport { c as defaultRoles } from './better-auth.DevHHPLH.mjs';\nimport { c as cacheAllRoles, h as hasPermissionFn } from './better-auth.DaEBQJp_.mjs';\n\nconst shimContext = (originalObject, newContext) => {\n  const shimmedObj = {};\n  for (const [key, value] of Object.entries(originalObject)) {\n    shimmedObj[key] = (ctx) => {\n      return value({\n        ...ctx,\n        context: {\n          ...newContext,\n          ...ctx.context\n        }\n      });\n    };\n    shimmedObj[key].path = value.path;\n    shimmedObj[key].method = value.method;\n    shimmedObj[key].options = value.options;\n    shimmedObj[key].headers = value.headers;\n  }\n  return shimmedObj;\n};\n\nconst getOrgAdapter = (context, options) => {\n  const adapter = context.adapter;\n  return {\n    findOrganizationBySlug: async (slug) => {\n      const organization = await adapter.findOne({\n        model: \"organization\",\n        where: [\n          {\n            field: \"slug\",\n            value: slug\n          }\n        ]\n      });\n      return organization;\n    },\n    createOrganization: async (data) => {\n      const organization = await adapter.create({\n        model: \"organization\",\n        data: {\n          ...data.organization,\n          metadata: data.organization.metadata ? JSON.stringify(data.organization.metadata) : void 0\n        },\n        forceAllowId: true\n      });\n      return {\n        ...organization,\n        metadata: organization.metadata && typeof organization.metadata === \"string\" ? JSON.parse(organization.metadata) : void 0\n      };\n    },\n    findMemberByEmail: async (data) => {\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"email\",\n            value: data.email.toLowerCase()\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      const member = await adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: data.organizationId\n          },\n          {\n            field: \"userId\",\n            value: user.id\n          }\n        ]\n      });\n      if (!member) {\n        return null;\n      }\n      return {\n        ...member,\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          image: user.image\n        }\n      };\n    },\n    listMembers: async (data) => {\n      const members = await Promise.all([\n        adapter.findMany({\n          model: \"member\",\n          where: [\n            { field: \"organizationId\", value: data.organizationId },\n            ...data.filter?.field ? [\n              {\n                field: data.filter?.field,\n                value: data.filter?.value\n              }\n            ] : []\n          ],\n          limit: data.limit || options?.membershipLimit || 100,\n          offset: data.offset || 0,\n          sortBy: data.sortBy ? { field: data.sortBy, direction: data.sortOrder || \"asc\" } : void 0\n        }),\n        adapter.count({\n          model: \"member\",\n          where: [\n            { field: \"organizationId\", value: data.organizationId },\n            ...data.filter?.field ? [\n              {\n                field: data.filter?.field,\n                value: data.filter?.value\n              }\n            ] : []\n          ]\n        })\n      ]);\n      const users = await adapter.findMany({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: members[0].map((member) => member.userId),\n            operator: \"in\"\n          }\n        ]\n      });\n      return {\n        members: members[0].map((member) => {\n          const user = users.find((user2) => user2.id === member.userId);\n          if (!user) {\n            throw new BetterAuthError(\n              \"Unexpected error: User not found for member\"\n            );\n          }\n          return {\n            ...member,\n            user: {\n              id: user.id,\n              name: user.name,\n              email: user.email,\n              image: user.image\n            }\n          };\n        }),\n        total: members[1]\n      };\n    },\n    findMemberByOrgId: async (data) => {\n      const [member, user] = await Promise.all([\n        await adapter.findOne({\n          model: \"member\",\n          where: [\n            {\n              field: \"userId\",\n              value: data.userId\n            },\n            {\n              field: \"organizationId\",\n              value: data.organizationId\n            }\n          ]\n        }),\n        await adapter.findOne({\n          model: \"user\",\n          where: [\n            {\n              field: \"id\",\n              value: data.userId\n            }\n          ]\n        })\n      ]);\n      if (!user || !member) {\n        return null;\n      }\n      return {\n        ...member,\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          image: user.image\n        }\n      };\n    },\n    findMemberById: async (memberId) => {\n      const member = await adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"id\",\n            value: memberId\n          }\n        ]\n      });\n      if (!member) {\n        return null;\n      }\n      const user = await adapter.findOne({\n        model: \"user\",\n        where: [\n          {\n            field: \"id\",\n            value: member.userId\n          }\n        ]\n      });\n      if (!user) {\n        return null;\n      }\n      return {\n        ...member,\n        user: {\n          id: user.id,\n          name: user.name,\n          email: user.email,\n          image: user.image\n        }\n      };\n    },\n    createMember: async (data) => {\n      const member = await adapter.create({\n        model: \"member\",\n        data: {\n          ...data,\n          createdAt: /* @__PURE__ */ new Date()\n        }\n      });\n      return member;\n    },\n    updateMember: async (memberId, role) => {\n      const member = await adapter.update({\n        model: \"member\",\n        where: [\n          {\n            field: \"id\",\n            value: memberId\n          }\n        ],\n        update: {\n          role\n        }\n      });\n      return member;\n    },\n    deleteMember: async (memberId) => {\n      const member = await adapter.delete({\n        model: \"member\",\n        where: [\n          {\n            field: \"id\",\n            value: memberId\n          }\n        ]\n      });\n      return member;\n    },\n    updateOrganization: async (organizationId, data) => {\n      const organization = await adapter.update({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationId\n          }\n        ],\n        update: {\n          ...data,\n          metadata: typeof data.metadata === \"object\" ? JSON.stringify(data.metadata) : data.metadata\n        }\n      });\n      if (!organization) {\n        return null;\n      }\n      return {\n        ...organization,\n        metadata: organization.metadata ? parseJSON(organization.metadata) : void 0\n      };\n    },\n    deleteOrganization: async (organizationId) => {\n      await adapter.delete({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      await adapter.delete({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      await adapter.delete({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationId\n          }\n        ]\n      });\n      return organizationId;\n    },\n    setActiveOrganization: async (sessionToken, organizationId, ctx) => {\n      const session = await context.internalAdapter.updateSession(\n        sessionToken,\n        {\n          activeOrganizationId: organizationId\n        },\n        ctx\n      );\n      return session;\n    },\n    findOrganizationById: async (organizationId) => {\n      const organization = await adapter.findOne({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationId\n          }\n        ]\n      });\n      return organization;\n    },\n    checkMembership: async ({\n      userId,\n      organizationId\n    }) => {\n      const member = await adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          },\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      return member;\n    },\n    /**\n     * @requires db\n     */\n    findFullOrganization: async ({\n      organizationId,\n      isSlug,\n      includeTeams,\n      membersLimit\n    }) => {\n      const org = await adapter.findOne({\n        model: \"organization\",\n        where: [{ field: isSlug ? \"slug\" : \"id\", value: organizationId }]\n      });\n      if (!org) {\n        return null;\n      }\n      const [invitations, members, teams] = await Promise.all([\n        adapter.findMany({\n          model: \"invitation\",\n          where: [{ field: \"organizationId\", value: org.id }]\n        }),\n        adapter.findMany({\n          model: \"member\",\n          where: [{ field: \"organizationId\", value: org.id }],\n          limit: membersLimit ?? options?.membershipLimit ?? 100\n        }),\n        includeTeams ? adapter.findMany({\n          model: \"team\",\n          where: [{ field: \"organizationId\", value: org.id }]\n        }) : null\n      ]);\n      if (!org) return null;\n      const userIds = members.map((member) => member.userId);\n      const users = userIds.length > 0 ? await adapter.findMany({\n        model: \"user\",\n        where: [{ field: \"id\", value: userIds, operator: \"in\" }],\n        limit: options?.membershipLimit || 100\n      }) : [];\n      const userMap = new Map(users.map((user) => [user.id, user]));\n      const membersWithUsers = members.map((member) => {\n        const user = userMap.get(member.userId);\n        if (!user) {\n          throw new BetterAuthError(\n            \"Unexpected error: User not found for member\"\n          );\n        }\n        return {\n          ...member,\n          user: {\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            image: user.image\n          }\n        };\n      });\n      return {\n        ...org,\n        invitations,\n        members: membersWithUsers,\n        teams\n      };\n    },\n    listOrganizations: async (userId) => {\n      const members = await adapter.findMany({\n        model: \"member\",\n        where: [\n          {\n            field: \"userId\",\n            value: userId\n          }\n        ]\n      });\n      if (!members || members.length === 0) {\n        return [];\n      }\n      const organizationIds = members.map((member) => member.organizationId);\n      const organizations = await adapter.findMany({\n        model: \"organization\",\n        where: [\n          {\n            field: \"id\",\n            value: organizationIds,\n            operator: \"in\"\n          }\n        ]\n      });\n      return organizations;\n    },\n    createTeam: async (data) => {\n      const team = await adapter.create({\n        model: \"team\",\n        data\n      });\n      return team;\n    },\n    findTeamById: async ({\n      teamId,\n      organizationId,\n      includeTeamMembers\n    }) => {\n      const team = await adapter.findOne({\n        model: \"team\",\n        where: [\n          {\n            field: \"id\",\n            value: teamId\n          },\n          ...organizationId ? [\n            {\n              field: \"organizationId\",\n              value: organizationId\n            }\n          ] : []\n        ]\n      });\n      if (!team) {\n        return null;\n      }\n      let members = [];\n      if (includeTeamMembers) {\n        members = await adapter.findMany({\n          model: \"teamMember\",\n          where: [\n            {\n              field: \"teamId\",\n              value: teamId\n            }\n          ],\n          limit: options?.membershipLimit || 100\n        });\n        return {\n          ...team,\n          members\n        };\n      }\n      return team;\n    },\n    updateTeam: async (teamId, data) => {\n      if (\"id\" in data) data.id = void 0;\n      const team = await adapter.update({\n        model: \"team\",\n        where: [\n          {\n            field: \"id\",\n            value: teamId\n          }\n        ],\n        update: {\n          ...data\n        }\n      });\n      return team;\n    },\n    deleteTeam: async (teamId) => {\n      await adapter.deleteMany({\n        model: \"teamMember\",\n        where: [\n          {\n            field: \"teamId\",\n            value: teamId\n          }\n        ]\n      });\n      const team = await adapter.delete({\n        model: \"team\",\n        where: [\n          {\n            field: \"id\",\n            value: teamId\n          }\n        ]\n      });\n      return team;\n    },\n    listTeams: async (organizationId) => {\n      const teams = await adapter.findMany({\n        model: \"team\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      return teams;\n    },\n    createTeamInvitation: async ({\n      email,\n      role,\n      teamId,\n      organizationId,\n      inviterId,\n      expiresIn = 1e3 * 60 * 60 * 48\n      // Default expiration: 48 hours\n    }) => {\n      const expiresAt = getDate(expiresIn);\n      const invitation = await adapter.create({\n        model: \"invitation\",\n        data: {\n          email,\n          role,\n          organizationId,\n          teamId,\n          inviterId,\n          status: \"pending\",\n          expiresAt\n        }\n      });\n      return invitation;\n    },\n    setActiveTeam: async (sessionToken, teamId, ctx) => {\n      const session = await context.internalAdapter.updateSession(\n        sessionToken,\n        {\n          activeTeamId: teamId\n        },\n        ctx\n      );\n      return session;\n    },\n    listTeamMembers: async (data) => {\n      const members = await adapter.findMany({\n        model: \"teamMember\",\n        where: [\n          {\n            field: \"teamId\",\n            value: data.teamId\n          }\n        ]\n      });\n      return members;\n    },\n    countTeamMembers: async (data) => {\n      const count = await adapter.count({\n        model: \"teamMember\",\n        where: [{ field: \"teamId\", value: data.teamId }]\n      });\n      return count;\n    },\n    countMembers: async (data) => {\n      const count = await adapter.count({\n        model: \"member\",\n        where: [{ field: \"organizationId\", value: data.organizationId }]\n      });\n      return count;\n    },\n    listTeamsByUser: async (data) => {\n      const members = await adapter.findMany({\n        model: \"teamMember\",\n        where: [\n          {\n            field: \"userId\",\n            value: data.userId\n          }\n        ]\n      });\n      const teams = await adapter.findMany({\n        model: \"team\",\n        where: [\n          {\n            field: \"id\",\n            operator: \"in\",\n            value: members.map((m) => m.teamId)\n          }\n        ]\n      });\n      return teams;\n    },\n    findTeamMember: async (data) => {\n      const member = await adapter.findOne({\n        model: \"teamMember\",\n        where: [\n          {\n            field: \"teamId\",\n            value: data.teamId\n          },\n          {\n            field: \"userId\",\n            value: data.userId\n          }\n        ]\n      });\n      return member;\n    },\n    findOrCreateTeamMember: async (data) => {\n      const member = await adapter.findOne({\n        model: \"teamMember\",\n        where: [\n          {\n            field: \"teamId\",\n            value: data.teamId\n          },\n          {\n            field: \"userId\",\n            value: data.userId\n          }\n        ]\n      });\n      if (member) return member;\n      return await adapter.create({\n        model: \"teamMember\",\n        data: {\n          teamId: data.teamId,\n          userId: data.userId,\n          createdAt: /* @__PURE__ */ new Date()\n        }\n      });\n    },\n    removeTeamMember: async (data) => {\n      await adapter.delete({\n        model: \"teamMember\",\n        where: [\n          {\n            field: \"teamId\",\n            value: data.teamId\n          },\n          {\n            field: \"userId\",\n            value: data.userId\n          }\n        ]\n      });\n    },\n    findInvitationsByTeamId: async (teamId) => {\n      const invitations = await adapter.findMany({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"teamId\",\n            value: teamId\n          }\n        ]\n      });\n      return invitations;\n    },\n    listUserInvitations: async (email) => {\n      const invitations = await adapter.findMany({\n        model: \"invitation\",\n        where: [{ field: \"email\", value: email.toLowerCase() }]\n      });\n      return invitations;\n    },\n    createInvitation: async ({\n      invitation,\n      user\n    }) => {\n      const defaultExpiration = 60 * 60 * 48;\n      const expiresAt = getDate(\n        options?.invitationExpiresIn || defaultExpiration,\n        \"sec\"\n      );\n      const invite = await adapter.create({\n        model: \"invitation\",\n        data: {\n          status: \"pending\",\n          expiresAt,\n          inviterId: user.id,\n          ...invitation,\n          teamId: invitation.teamIds.length > 0 ? invitation.teamIds.join(\",\") : null\n        }\n      });\n      return invite;\n    },\n    findInvitationById: async (id) => {\n      const invitation = await adapter.findOne({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"id\",\n            value: id\n          }\n        ]\n      });\n      return invitation;\n    },\n    findPendingInvitation: async (data) => {\n      const invitation = await adapter.findMany({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"email\",\n            value: data.email.toLowerCase()\n          },\n          {\n            field: \"organizationId\",\n            value: data.organizationId\n          },\n          {\n            field: \"status\",\n            value: \"pending\"\n          }\n        ]\n      });\n      return invitation.filter(\n        (invite) => new Date(invite.expiresAt) > /* @__PURE__ */ new Date()\n      );\n    },\n    findPendingInvitations: async (data) => {\n      const invitations = await adapter.findMany({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: data.organizationId\n          },\n          {\n            field: \"status\",\n            value: \"pending\"\n          }\n        ]\n      });\n      return invitations.filter(\n        (invite) => new Date(invite.expiresAt) > /* @__PURE__ */ new Date()\n      );\n    },\n    listInvitations: async (data) => {\n      const invitations = await adapter.findMany({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: data.organizationId\n          }\n        ]\n      });\n      return invitations;\n    },\n    updateInvitation: async (data) => {\n      const invitation = await adapter.update({\n        model: \"invitation\",\n        where: [\n          {\n            field: \"id\",\n            value: data.invitationId\n          }\n        ],\n        update: {\n          status: data.status\n        }\n      });\n      return invitation;\n    }\n  };\n};\n\nconst hasPermission = async (input, ctx) => {\n  let acRoles = { ...input.options.roles || defaultRoles };\n  if (ctx && input.organizationId && input.options.dynamicAccessControl?.enabled && input.options.ac && !input.useMemoryCache) {\n    const roles = await ctx.context.adapter.findMany({\n      model: \"organizationRole\",\n      where: [\n        {\n          field: \"organizationId\",\n          value: input.organizationId\n        }\n      ]\n    });\n    for (const { role, permission: permissionsString } of roles) {\n      if (role in acRoles) continue;\n      const result = z.record(z.string(), z.array(z.string())).safeParse(JSON.parse(permissionsString));\n      if (!result.success) {\n        ctx.context.logger.error(\n          \"[hasPermission] Invalid permissions for role \" + role,\n          {\n            permissions: JSON.parse(permissionsString)\n          }\n        );\n        throw new APIError(\"INTERNAL_SERVER_ERROR\", {\n          message: \"Invalid permissions for role \" + role\n        });\n      }\n      acRoles[role] = input.options.ac.newRole(result.data);\n    }\n  }\n  if (input.useMemoryCache) {\n    acRoles = cacheAllRoles.get(input.organizationId) || acRoles;\n  }\n  cacheAllRoles.set(input.organizationId, acRoles);\n  return hasPermissionFn(input, acRoles);\n};\n\nconst createInvitation = (option) => {\n  const additionalFieldsSchema = toZodSchema({\n    fields: option?.schema?.invitation?.additionalFields || {},\n    isClientSide: true\n  });\n  const baseSchema = z.object({\n    email: z.string().meta({\n      description: \"The email address of the user to invite\"\n    }),\n    role: z.union([\n      z.string().meta({\n        description: \"The role to assign to the user\"\n      }),\n      z.array(\n        z.string().meta({\n          description: \"The roles to assign to the user\"\n        })\n      )\n    ]).meta({\n      description: 'The role(s) to assign to the user. It can be `admin`, `member`, or `guest`. Eg: \"member\"'\n    }),\n    organizationId: z.string().meta({\n      description: \"The organization ID to invite the user to\"\n    }).optional(),\n    resend: z.boolean().meta({\n      description: \"Resend the invitation email, if the user is already invited. Eg: true\"\n    }).optional(),\n    teamId: z.union([\n      z.string().meta({\n        description: \"The team ID to invite the user to\"\n      }).optional(),\n      z.array(z.string()).meta({\n        description: \"The team IDs to invite the user to\"\n      }).optional()\n    ])\n  });\n  return createAuthEndpoint(\n    \"/organization/invite-member\",\n    {\n      method: \"POST\",\n      use: [orgMiddleware, orgSessionMiddleware],\n      body: z.object({\n        ...baseSchema.shape,\n        ...additionalFieldsSchema.shape\n      }),\n      metadata: {\n        $Infer: {\n          body: {}\n        },\n        openapi: {\n          description: \"Invite a user to an organization\",\n          responses: {\n            \"200\": {\n              description: \"Success\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\"\n                      },\n                      email: {\n                        type: \"string\"\n                      },\n                      role: {\n                        type: \"string\"\n                      },\n                      organizationId: {\n                        type: \"string\"\n                      },\n                      inviterId: {\n                        type: \"string\"\n                      },\n                      status: {\n                        type: \"string\"\n                      },\n                      expiresAt: {\n                        type: \"string\"\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"email\",\n                      \"role\",\n                      \"organizationId\",\n                      \"inviterId\",\n                      \"status\",\n                      \"expiresAt\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const session = ctx.context.session;\n      const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n      if (!organizationId) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      const adapter = getOrgAdapter(ctx.context, option);\n      const member = await adapter.findMemberByOrgId({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!member) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n        });\n      }\n      const canInvite = await hasPermission(\n        {\n          role: member.role,\n          options: ctx.context.orgOptions,\n          permissions: {\n            invitation: [\"create\"]\n          },\n          organizationId\n        },\n        ctx\n      );\n      if (!canInvite) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION\n        });\n      }\n      const creatorRole = ctx.context.orgOptions.creatorRole || \"owner\";\n      const roles = parseRoles(ctx.body.role);\n      if (member.role !== creatorRole && roles.split(\",\").includes(creatorRole)) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_INVITE_USER_WITH_THIS_ROLE\n        });\n      }\n      const alreadyMember = await adapter.findMemberByEmail({\n        email: ctx.body.email,\n        organizationId\n      });\n      if (alreadyMember) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION\n        });\n      }\n      const alreadyInvited = await adapter.findPendingInvitation({\n        email: ctx.body.email,\n        organizationId\n      });\n      if (alreadyInvited.length && !ctx.body.resend) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_ALREADY_INVITED_TO_THIS_ORGANIZATION\n        });\n      }\n      const organization = await adapter.findOrganizationById(organizationId);\n      if (!organization) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      if (alreadyInvited.length && ctx.body.resend) {\n        const existingInvitation = alreadyInvited[0];\n        const defaultExpiration = 60 * 60 * 48;\n        const newExpiresAt = getDate(\n          ctx.context.orgOptions.invitationExpiresIn || defaultExpiration,\n          \"sec\"\n        );\n        await ctx.context.adapter.update({\n          model: \"invitation\",\n          where: [\n            {\n              field: \"id\",\n              value: existingInvitation.id\n            }\n          ],\n          update: {\n            expiresAt: newExpiresAt\n          }\n        });\n        const updatedInvitation = {\n          ...existingInvitation,\n          expiresAt: newExpiresAt\n        };\n        await ctx.context.orgOptions.sendInvitationEmail?.(\n          {\n            id: updatedInvitation.id,\n            role: updatedInvitation.role,\n            email: updatedInvitation.email.toLowerCase(),\n            organization,\n            inviter: {\n              ...member,\n              user: session.user\n            },\n            invitation: updatedInvitation\n          },\n          ctx.request\n        );\n        return ctx.json(updatedInvitation);\n      }\n      if (alreadyInvited.length && ctx.context.orgOptions.cancelPendingInvitationsOnReInvite) {\n        await adapter.updateInvitation({\n          invitationId: alreadyInvited[0].id,\n          status: \"canceled\"\n        });\n      }\n      const invitationLimit = typeof ctx.context.orgOptions.invitationLimit === \"function\" ? await ctx.context.orgOptions.invitationLimit(\n        {\n          user: session.user,\n          organization,\n          member\n        },\n        ctx.context\n      ) : ctx.context.orgOptions.invitationLimit ?? 100;\n      const pendingInvitations = await adapter.findPendingInvitations({\n        organizationId\n      });\n      if (pendingInvitations.length >= invitationLimit) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.INVITATION_LIMIT_REACHED\n        });\n      }\n      if (ctx.context.orgOptions.teams && ctx.context.orgOptions.teams.enabled && typeof ctx.context.orgOptions.teams.maximumMembersPerTeam !== \"undefined\" && \"teamId\" in ctx.body && ctx.body.teamId) {\n        const teamIds2 = typeof ctx.body.teamId === \"string\" ? [ctx.body.teamId] : ctx.body.teamId;\n        for (const teamId of teamIds2) {\n          const team = await adapter.findTeamById({\n            teamId,\n            organizationId,\n            includeTeamMembers: true\n          });\n          if (!team) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n            });\n          }\n          const maximumMembersPerTeam = typeof ctx.context.orgOptions.teams.maximumMembersPerTeam === \"function\" ? await ctx.context.orgOptions.teams.maximumMembersPerTeam({\n            teamId,\n            session,\n            organizationId\n          }) : ctx.context.orgOptions.teams.maximumMembersPerTeam;\n          if (team.members.length >= maximumMembersPerTeam) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ORGANIZATION_ERROR_CODES.TEAM_MEMBER_LIMIT_REACHED\n            });\n          }\n        }\n      }\n      const teamIds = \"teamId\" in ctx.body ? typeof ctx.body.teamId === \"string\" ? [ctx.body.teamId] : ctx.body.teamId ?? [] : [];\n      const {\n        email: _,\n        role: __,\n        organizationId: ___,\n        resend: ____,\n        ...additionalFields\n      } = ctx.body;\n      let invitationData = {\n        role: roles,\n        email: ctx.body.email.toLowerCase(),\n        organizationId,\n        teamIds,\n        ...additionalFields ? additionalFields : {}\n      };\n      if (option?.organizationHooks?.beforeCreateInvitation) {\n        const response = await option?.organizationHooks.beforeCreateInvitation(\n          {\n            invitation: {\n              ...invitationData,\n              inviterId: session.user.id,\n              teamId: teamIds.length > 0 ? teamIds[0] : void 0\n            },\n            inviter: session.user,\n            organization\n          }\n        );\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          invitationData = {\n            ...invitationData,\n            ...response.data\n          };\n        }\n      }\n      const invitation = await adapter.createInvitation({\n        invitation: invitationData,\n        user: session.user\n      });\n      await ctx.context.orgOptions.sendInvitationEmail?.(\n        {\n          id: invitation.id,\n          role: invitation.role,\n          email: invitation.email.toLowerCase(),\n          organization,\n          inviter: {\n            ...member,\n            user: session.user\n          },\n          //@ts-expect-error\n          invitation\n        },\n        ctx.request\n      );\n      if (option?.organizationHooks?.afterCreateInvitation) {\n        await option?.organizationHooks.afterCreateInvitation({\n          invitation,\n          inviter: session.user,\n          organization\n        });\n      }\n      return ctx.json(invitation);\n    }\n  );\n};\nconst acceptInvitation = (options) => createAuthEndpoint(\n  \"/organization/accept-invitation\",\n  {\n    method: \"POST\",\n    body: z.object({\n      invitationId: z.string().meta({\n        description: \"The ID of the invitation to accept\"\n      })\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Accept an invitation to an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    invitation: {\n                      type: \"object\"\n                    },\n                    member: {\n                      type: \"object\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, options);\n    const invitation = await adapter.findInvitationById(\n      ctx.body.invitationId\n    );\n    if (!invitation || invitation.expiresAt < /* @__PURE__ */ new Date() || invitation.status !== \"pending\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.INVITATION_NOT_FOUND\n      });\n    }\n    if (invitation.email.toLowerCase() !== session.user.email.toLowerCase()) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION\n      });\n    }\n    if (ctx.context.orgOptions.requireEmailVerificationOnInvitation && !session.user.emailVerified) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.EMAIL_VERIFICATION_REQUIRED_BEFORE_ACCEPTING_OR_REJECTING_INVITATION\n      });\n    }\n    const membershipLimit = ctx.context.orgOptions?.membershipLimit || 100;\n    const membersCount = await adapter.countMembers({\n      organizationId: invitation.organizationId\n    });\n    if (membersCount >= membershipLimit) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_MEMBERSHIP_LIMIT_REACHED\n      });\n    }\n    const organization = await adapter.findOrganizationById(\n      invitation.organizationId\n    );\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    if (options?.organizationHooks?.beforeAcceptInvitation) {\n      await options?.organizationHooks.beforeAcceptInvitation({\n        invitation,\n        user: session.user,\n        organization\n      });\n    }\n    const acceptedI = await adapter.updateInvitation({\n      invitationId: ctx.body.invitationId,\n      status: \"accepted\"\n    });\n    if (!acceptedI) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.FAILED_TO_RETRIEVE_INVITATION\n      });\n    }\n    if (ctx.context.orgOptions.teams && ctx.context.orgOptions.teams.enabled && \"teamId\" in acceptedI && acceptedI.teamId) {\n      const teamIds = acceptedI.teamId.split(\",\");\n      const onlyOne = teamIds.length === 1;\n      for (const teamId of teamIds) {\n        await adapter.findOrCreateTeamMember({\n          teamId,\n          userId: session.user.id\n        });\n        if (typeof ctx.context.orgOptions.teams.maximumMembersPerTeam !== \"undefined\") {\n          const members = await adapter.countTeamMembers({ teamId });\n          const maximumMembersPerTeam = typeof ctx.context.orgOptions.teams.maximumMembersPerTeam === \"function\" ? await ctx.context.orgOptions.teams.maximumMembersPerTeam({\n            teamId,\n            session,\n            organizationId: invitation.organizationId\n          }) : ctx.context.orgOptions.teams.maximumMembersPerTeam;\n          if (members >= maximumMembersPerTeam) {\n            throw new APIError(\"FORBIDDEN\", {\n              message: ORGANIZATION_ERROR_CODES.TEAM_MEMBER_LIMIT_REACHED\n            });\n          }\n        }\n      }\n      if (onlyOne) {\n        const teamId = teamIds[0];\n        const updatedSession = await adapter.setActiveTeam(\n          session.session.token,\n          teamId,\n          ctx\n        );\n        await setSessionCookie(ctx, {\n          session: updatedSession,\n          user: session.user\n        });\n      }\n    }\n    const member = await adapter.createMember({\n      organizationId: invitation.organizationId,\n      userId: session.user.id,\n      role: invitation.role,\n      createdAt: /* @__PURE__ */ new Date()\n    });\n    await adapter.setActiveOrganization(\n      session.session.token,\n      invitation.organizationId,\n      ctx\n    );\n    if (!acceptedI) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.INVITATION_NOT_FOUND\n        }\n      });\n    }\n    if (options?.organizationHooks?.afterAcceptInvitation) {\n      await options?.organizationHooks.afterAcceptInvitation({\n        invitation: acceptedI,\n        member,\n        user: session.user,\n        organization\n      });\n    }\n    return ctx.json({\n      invitation: acceptedI,\n      member\n    });\n  }\n);\nconst rejectInvitation = (options) => createAuthEndpoint(\n  \"/organization/reject-invitation\",\n  {\n    method: \"POST\",\n    body: z.object({\n      invitationId: z.string().meta({\n        description: \"The ID of the invitation to reject\"\n      })\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Reject an invitation to an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    invitation: {\n                      type: \"object\"\n                    },\n                    member: {\n                      type: \"null\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const invitation = await adapter.findInvitationById(\n      ctx.body.invitationId\n    );\n    if (!invitation || invitation.expiresAt < /* @__PURE__ */ new Date() || invitation.status !== \"pending\") {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Invitation not found!\"\n      });\n    }\n    if (invitation.email.toLowerCase() !== session.user.email.toLowerCase()) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION\n      });\n    }\n    if (ctx.context.orgOptions.requireEmailVerificationOnInvitation && !session.user.emailVerified) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.EMAIL_VERIFICATION_REQUIRED_BEFORE_ACCEPTING_OR_REJECTING_INVITATION\n      });\n    }\n    const organization = await adapter.findOrganizationById(\n      invitation.organizationId\n    );\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    if (options?.organizationHooks?.beforeRejectInvitation) {\n      await options?.organizationHooks.beforeRejectInvitation({\n        invitation,\n        user: session.user,\n        organization\n      });\n    }\n    const rejectedI = await adapter.updateInvitation({\n      invitationId: ctx.body.invitationId,\n      status: \"rejected\"\n    });\n    if (options?.organizationHooks?.afterRejectInvitation) {\n      await options?.organizationHooks.afterRejectInvitation({\n        invitation: rejectedI || invitation,\n        user: session.user,\n        organization\n      });\n    }\n    return ctx.json({\n      invitation: rejectedI,\n      member: null\n    });\n  }\n);\nconst cancelInvitation = (options) => createAuthEndpoint(\n  \"/organization/cancel-invitation\",\n  {\n    method: \"POST\",\n    body: z.object({\n      invitationId: z.string().meta({\n        description: \"The ID of the invitation to cancel\"\n      })\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    openapi: {\n      description: \"Cancel an invitation to an organization\",\n      responses: {\n        \"200\": {\n          description: \"Success\",\n          content: {\n            \"application/json\": {\n              schema: {\n                type: \"object\",\n                properties: {\n                  invitation: {\n                    type: \"object\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, options);\n    const invitation = await adapter.findInvitationById(\n      ctx.body.invitationId\n    );\n    if (!invitation) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.INVITATION_NOT_FOUND\n      });\n    }\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: invitation.organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const canCancel = await hasPermission(\n      {\n        role: member.role,\n        options: ctx.context.orgOptions,\n        permissions: {\n          invitation: [\"cancel\"]\n        },\n        organizationId: invitation.organizationId\n      },\n      ctx\n    );\n    if (!canCancel) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CANCEL_THIS_INVITATION\n      });\n    }\n    const organization = await adapter.findOrganizationById(\n      invitation.organizationId\n    );\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    if (options?.organizationHooks?.beforeCancelInvitation) {\n      await options?.organizationHooks.beforeCancelInvitation({\n        invitation,\n        cancelledBy: session.user,\n        organization\n      });\n    }\n    const canceledI = await adapter.updateInvitation({\n      invitationId: ctx.body.invitationId,\n      status: \"canceled\"\n    });\n    if (options?.organizationHooks?.afterCancelInvitation) {\n      await options?.organizationHooks.afterCancelInvitation({\n        invitation: canceledI || invitation,\n        cancelledBy: session.user,\n        organization\n      });\n    }\n    return ctx.json(canceledI);\n  }\n);\nconst getInvitation = (options) => createAuthEndpoint(\n  \"/organization/get-invitation\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware],\n    requireHeaders: true,\n    query: z.object({\n      id: z.string().meta({\n        description: \"The ID of the invitation to get\"\n      })\n    }),\n    metadata: {\n      openapi: {\n        description: \"Get an invitation by ID\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    id: {\n                      type: \"string\"\n                    },\n                    email: {\n                      type: \"string\"\n                    },\n                    role: {\n                      type: \"string\"\n                    },\n                    organizationId: {\n                      type: \"string\"\n                    },\n                    inviterId: {\n                      type: \"string\"\n                    },\n                    status: {\n                      type: \"string\"\n                    },\n                    expiresAt: {\n                      type: \"string\"\n                    },\n                    organizationName: {\n                      type: \"string\"\n                    },\n                    organizationSlug: {\n                      type: \"string\"\n                    },\n                    inviterEmail: {\n                      type: \"string\"\n                    }\n                  },\n                  required: [\n                    \"id\",\n                    \"email\",\n                    \"role\",\n                    \"organizationId\",\n                    \"inviterId\",\n                    \"status\",\n                    \"expiresAt\",\n                    \"organizationName\",\n                    \"organizationSlug\",\n                    \"inviterEmail\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: \"Not authenticated\"\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const invitation = await adapter.findInvitationById(ctx.query.id);\n    if (!invitation || invitation.status !== \"pending\" || invitation.expiresAt < /* @__PURE__ */ new Date()) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Invitation not found!\"\n      });\n    }\n    if (invitation.email.toLowerCase() !== session.user.email.toLowerCase()) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_THE_RECIPIENT_OF_THE_INVITATION\n      });\n    }\n    const organization = await adapter.findOrganizationById(\n      invitation.organizationId\n    );\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const member = await adapter.findMemberByOrgId({\n      userId: invitation.inviterId,\n      organizationId: invitation.organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.INVITER_IS_NO_LONGER_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    return ctx.json({\n      ...invitation,\n      organizationName: organization.name,\n      organizationSlug: organization.slug,\n      inviterEmail: member.user.email\n    });\n  }\n);\nconst listInvitations = (options) => createAuthEndpoint(\n  \"/organization/list-invitations\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware, orgSessionMiddleware],\n    query: z.object({\n      organizationId: z.string().meta({\n        description: \"The ID of the organization to list invitations for\"\n      }).optional()\n    }).optional()\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (!session) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: \"Not authenticated\"\n      });\n    }\n    const orgId = ctx.query?.organizationId || session.session.activeOrganizationId;\n    if (!orgId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Organization ID is required\"\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const isMember = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: orgId\n    });\n    if (!isMember) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: \"You are not a member of this organization\"\n      });\n    }\n    const invitations = await adapter.listInvitations({\n      organizationId: orgId\n    });\n    return ctx.json(invitations);\n  }\n);\nconst listUserInvitations = (options) => createAuthEndpoint(\n  \"/organization/list-user-invitations\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware],\n    query: z.object({\n      email: z.string().meta({\n        description: \"The email of the user to list invitations for. This only works for server side API calls.\"\n      }).optional()\n    }).optional()\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    if (ctx.request && ctx.query?.email) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"User email cannot be passed for client side API calls.\"\n      });\n    }\n    const userEmail = session?.user.email || ctx.query?.email;\n    if (!userEmail) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"Missing session headers, or email query parameter.\"\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const invitations = await adapter.listUserInvitations(userEmail);\n    return ctx.json(invitations);\n  }\n);\n\nconst addMember = (option) => {\n  const additionalFieldsSchema = toZodSchema({\n    fields: option?.schema?.member?.additionalFields || {},\n    isClientSide: true\n  });\n  const baseSchema = z.object({\n    userId: z.coerce.string().meta({\n      description: 'The user Id which represents the user to be added as a member. If `null` is provided, then it\\'s expected to provide session headers. Eg: \"user-id\"'\n    }),\n    role: z.union([z.string(), z.array(z.string())]).meta({\n      description: 'The role(s) to assign to the new member. Eg: [\"admin\", \"sale\"]'\n    }),\n    organizationId: z.string().meta({\n      description: `An optional organization ID to pass. If not provided, will default to the user's active organization. Eg: \"org-id\"`\n    }).optional(),\n    teamId: z.string().meta({\n      description: 'An optional team ID to add the member to. Eg: \"team-id\"'\n    }).optional()\n  });\n  return createAuthEndpoint(\n    \"/organization/add-member\",\n    {\n      method: \"POST\",\n      body: z.object({\n        ...baseSchema.shape,\n        ...additionalFieldsSchema.shape\n      }),\n      use: [orgMiddleware],\n      metadata: {\n        SERVER_ONLY: true,\n        $Infer: {\n          body: {}\n        }\n      }\n    },\n    async (ctx) => {\n      const session = ctx.body.userId ? await getSessionFromCtx(ctx).catch((e) => null) : null;\n      const orgId = ctx.body.organizationId || session?.session.activeOrganizationId;\n      if (!orgId) {\n        return ctx.json(null, {\n          status: 400,\n          body: {\n            message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n          }\n        });\n      }\n      const teamId = \"teamId\" in ctx.body ? ctx.body.teamId : void 0;\n      if (teamId && !ctx.context.orgOptions.teams?.enabled) {\n        ctx.context.logger.error(\"Teams are not enabled\");\n        throw new APIError(\"BAD_REQUEST\", {\n          message: \"Teams are not enabled\"\n        });\n      }\n      const adapter = getOrgAdapter(ctx.context, option);\n      const user = await ctx.context.internalAdapter.findUserById(\n        ctx.body.userId\n      );\n      if (!user) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: BASE_ERROR_CODES.USER_NOT_FOUND\n        });\n      }\n      const alreadyMember = await adapter.findMemberByEmail({\n        email: user.email,\n        organizationId: orgId\n      });\n      if (alreadyMember) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_ALREADY_A_MEMBER_OF_THIS_ORGANIZATION\n        });\n      }\n      if (teamId) {\n        const team = await adapter.findTeamById({\n          teamId,\n          organizationId: orgId\n        });\n        if (!team || team.organizationId !== orgId) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n          });\n        }\n      }\n      const membershipLimit = ctx.context.orgOptions?.membershipLimit || 100;\n      const count = await adapter.countMembers({ organizationId: orgId });\n      if (count >= membershipLimit) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_MEMBERSHIP_LIMIT_REACHED\n        });\n      }\n      const {\n        role: _,\n        userId: __,\n        organizationId: ___,\n        ...additionalFields\n      } = ctx.body;\n      const organization = await adapter.findOrganizationById(orgId);\n      if (!organization) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      let memberData = {\n        organizationId: orgId,\n        userId: user.id,\n        role: parseRoles(ctx.body.role),\n        createdAt: /* @__PURE__ */ new Date(),\n        ...additionalFields ? additionalFields : {}\n      };\n      if (option?.organizationHooks?.beforeAddMember) {\n        const response = await option?.organizationHooks.beforeAddMember({\n          member: {\n            userId: user.id,\n            organizationId: orgId,\n            role: parseRoles(ctx.body.role),\n            ...additionalFields\n          },\n          user,\n          organization\n        });\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          memberData = {\n            ...memberData,\n            ...response.data\n          };\n        }\n      }\n      const createdMember = await adapter.createMember(memberData);\n      if (teamId) {\n        await adapter.findOrCreateTeamMember({\n          userId: user.id,\n          teamId\n        });\n      }\n      if (option?.organizationHooks?.afterAddMember) {\n        await option?.organizationHooks.afterAddMember({\n          member: createdMember,\n          user,\n          organization\n        });\n      }\n      return ctx.json(createdMember);\n    }\n  );\n};\nconst removeMember = (options) => createAuthEndpoint(\n  \"/organization/remove-member\",\n  {\n    method: \"POST\",\n    body: z.object({\n      memberIdOrEmail: z.string().meta({\n        description: \"The ID or email of the member to remove\"\n      }),\n      /**\n       * If not provided, the active organization will be used\n       */\n      organizationId: z.string().meta({\n        description: 'The ID of the organization to remove the member from. If not provided, the active organization will be used. Eg: \"org-id\"'\n      }).optional()\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Remove a member from an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    member: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\"\n                        },\n                        userId: {\n                          type: \"string\"\n                        },\n                        organizationId: {\n                          type: \"string\"\n                        },\n                        role: {\n                          type: \"string\"\n                        }\n                      },\n                      required: [\"id\", \"userId\", \"organizationId\", \"role\"]\n                    }\n                  },\n                  required: [\"member\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    let toBeRemovedMember = null;\n    if (ctx.body.memberIdOrEmail.includes(\"@\")) {\n      toBeRemovedMember = await adapter.findMemberByEmail({\n        email: ctx.body.memberIdOrEmail,\n        organizationId\n      });\n    } else {\n      toBeRemovedMember = await adapter.findMemberById(\n        ctx.body.memberIdOrEmail\n      );\n    }\n    if (!toBeRemovedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const roles = toBeRemovedMember.role.split(\",\");\n    const creatorRole = ctx.context.orgOptions?.creatorRole || \"owner\";\n    const isOwner = roles.includes(creatorRole);\n    if (isOwner) {\n      if (member.role !== creatorRole) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER\n        });\n      }\n      const { members } = await adapter.listMembers({\n        organizationId\n      });\n      const owners = members.filter((member2) => {\n        const roles2 = member2.role.split(\",\");\n        return roles2.includes(creatorRole);\n      });\n      if (owners.length <= 1) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER\n        });\n      }\n    }\n    const canDeleteMember = await hasPermission(\n      {\n        role: member.role,\n        options: ctx.context.orgOptions,\n        permissions: {\n          member: [\"delete\"]\n        },\n        organizationId\n      },\n      ctx\n    );\n    if (!canDeleteMember) {\n      throw new APIError(\"UNAUTHORIZED\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_MEMBER\n      });\n    }\n    if (toBeRemovedMember?.organizationId !== organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const organization = await adapter.findOrganizationById(organizationId);\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const userBeingRemoved = await ctx.context.internalAdapter.findUserById(\n      toBeRemovedMember.userId\n    );\n    if (!userBeingRemoved) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"User not found\"\n      });\n    }\n    if (options?.organizationHooks?.beforeRemoveMember) {\n      await options?.organizationHooks.beforeRemoveMember({\n        member: toBeRemovedMember,\n        user: userBeingRemoved,\n        organization\n      });\n    }\n    await adapter.deleteMember(toBeRemovedMember.id);\n    if (session.user.id === toBeRemovedMember.userId && session.session.activeOrganizationId === toBeRemovedMember.organizationId) {\n      await adapter.setActiveOrganization(session.session.token, null, ctx);\n    }\n    if (options?.organizationHooks?.afterRemoveMember) {\n      await options?.organizationHooks.afterRemoveMember({\n        member: toBeRemovedMember,\n        user: userBeingRemoved,\n        organization\n      });\n    }\n    return ctx.json({\n      member: toBeRemovedMember\n    });\n  }\n);\nconst updateMemberRole = (option) => createAuthEndpoint(\n  \"/organization/update-member-role\",\n  {\n    method: \"POST\",\n    body: z.object({\n      role: z.union([z.string(), z.array(z.string())]).meta({\n        description: 'The new role to be applied. This can be a string or array of strings representing the roles. Eg: [\"admin\", \"sale\"]'\n      }),\n      memberId: z.string().meta({\n        description: 'The member id to apply the role update to. Eg: \"member-id\"'\n      }),\n      organizationId: z.string().meta({\n        description: 'An optional organization ID which the member is a part of to apply the role update. If not provided, you must provide session headers to get the active organization. Eg: \"organization-id\"'\n      }).optional()\n    }),\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      $Infer: {\n        body: {}\n      },\n      openapi: {\n        description: \"Update the role of a member in an organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    member: {\n                      type: \"object\",\n                      properties: {\n                        id: {\n                          type: \"string\"\n                        },\n                        userId: {\n                          type: \"string\"\n                        },\n                        organizationId: {\n                          type: \"string\"\n                        },\n                        role: {\n                          type: \"string\"\n                        }\n                      },\n                      required: [\"id\", \"userId\", \"organizationId\", \"role\"]\n                    }\n                  },\n                  required: [\"member\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    if (!ctx.body.role) {\n      throw new APIError(\"BAD_REQUEST\");\n    }\n    const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const roleToSet = Array.isArray(ctx.body.role) ? ctx.body.role : ctx.body.role ? [ctx.body.role] : [];\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const toBeUpdatedMember = member.id !== ctx.body.memberId ? await adapter.findMemberById(ctx.body.memberId) : member;\n    if (!toBeUpdatedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const memberBelongsToOrganization = toBeUpdatedMember.organizationId === organizationId;\n    if (!memberBelongsToOrganization) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER\n      });\n    }\n    const creatorRole = ctx.context.orgOptions?.creatorRole || \"owner\";\n    const updatingMemberRoles = member.role.split(\",\");\n    const toBeUpdatedMemberRoles = toBeUpdatedMember.role.split(\",\");\n    const isUpdatingCreator = toBeUpdatedMemberRoles.includes(creatorRole);\n    const updaterIsCreator = updatingMemberRoles.includes(creatorRole);\n    const isSettingCreatorRole = roleToSet.includes(creatorRole);\n    const memberIsUpdatingThemselves = member.id === toBeUpdatedMember.id;\n    if (isUpdatingCreator && !updaterIsCreator || isSettingCreatorRole && !updaterIsCreator) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER\n      });\n    }\n    if (updaterIsCreator && memberIsUpdatingThemselves) {\n      const members = await ctx.context.adapter.findMany({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId\n          }\n        ]\n      });\n      const owners = members.filter((member2) => {\n        const roles = member2.role.split(\",\");\n        return roles.includes(creatorRole);\n      });\n      if (owners.length <= 1 && !isSettingCreatorRole) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_CANNOT_LEAVE_THE_ORGANIZATION_WITHOUT_AN_OWNER\n        });\n      }\n    }\n    const canUpdateMember = await hasPermission(\n      {\n        role: member.role,\n        options: ctx.context.orgOptions,\n        permissions: {\n          member: [\"update\"]\n        },\n        allowCreatorAllPermissions: true,\n        organizationId\n      },\n      ctx\n    );\n    if (!canUpdateMember) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_MEMBER\n      });\n    }\n    const organization = await adapter.findOrganizationById(organizationId);\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const userBeingUpdated = await ctx.context.internalAdapter.findUserById(\n      toBeUpdatedMember.userId\n    );\n    if (!userBeingUpdated) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"User not found\"\n      });\n    }\n    const previousRole = toBeUpdatedMember.role;\n    const newRole = parseRoles(ctx.body.role);\n    if (option?.organizationHooks?.beforeUpdateMemberRole) {\n      const response = await option?.organizationHooks.beforeUpdateMemberRole(\n        {\n          member: toBeUpdatedMember,\n          newRole,\n          user: userBeingUpdated,\n          organization\n        }\n      );\n      if (response && typeof response === \"object\" && \"data\" in response) {\n        const updatedMember2 = await adapter.updateMember(\n          ctx.body.memberId,\n          response.data.role || newRole\n        );\n        if (!updatedMember2) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n          });\n        }\n        if (option?.organizationHooks?.afterUpdateMemberRole) {\n          await option?.organizationHooks.afterUpdateMemberRole({\n            member: updatedMember2,\n            previousRole,\n            user: userBeingUpdated,\n            organization\n          });\n        }\n        return ctx.json(updatedMember2);\n      }\n    }\n    const updatedMember = await adapter.updateMember(\n      ctx.body.memberId,\n      newRole\n    );\n    if (!updatedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    if (option?.organizationHooks?.afterUpdateMemberRole) {\n      await option?.organizationHooks.afterUpdateMemberRole({\n        member: updatedMember,\n        previousRole,\n        user: userBeingUpdated,\n        organization\n      });\n    }\n    return ctx.json(updatedMember);\n  }\n);\nconst getActiveMember = (options) => createAuthEndpoint(\n  \"/organization/get-active-member\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware, orgSessionMiddleware],\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"Get the member details of the active organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    id: {\n                      type: \"string\"\n                    },\n                    userId: {\n                      type: \"string\"\n                    },\n                    organizationId: {\n                      type: \"string\"\n                    },\n                    role: {\n                      type: \"string\"\n                    }\n                  },\n                  required: [\"id\", \"userId\", \"organizationId\", \"role\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = session.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!member) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n        }\n      });\n    }\n    return ctx.json(member);\n  }\n);\nconst leaveOrganization = (options) => createAuthEndpoint(\n  \"/organization/leave\",\n  {\n    method: \"POST\",\n    body: z.object({\n      organizationId: z.string().meta({\n        description: 'The organization Id for the member to leave. Eg: \"organization-id\"'\n      })\n    }),\n    requireHeaders: true,\n    use: [sessionMiddleware, orgMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, options);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: ctx.body.organizationId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.MEMBER_NOT_FOUND\n      });\n    }\n    const creatorRole = ctx.context.orgOptions?.creatorRole || \"owner\";\n    const isOwnerLeaving = member.role.split(\",\").includes(creatorRole);\n    if (isOwnerLeaving) {\n      const members = await ctx.context.adapter.findMany({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: ctx.body.organizationId\n          }\n        ]\n      });\n      const owners = members.filter(\n        (member2) => member2.role.split(\",\").includes(creatorRole)\n      );\n      if (owners.length <= 1) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_CANNOT_LEAVE_THE_ORGANIZATION_AS_THE_ONLY_OWNER\n        });\n      }\n    }\n    await adapter.deleteMember(member.id);\n    if (session.session.activeOrganizationId === ctx.body.organizationId) {\n      await adapter.setActiveOrganization(session.session.token, null, ctx);\n    }\n    return ctx.json(member);\n  }\n);\nconst listMembers = (options) => createAuthEndpoint(\n  \"/organization/list-members\",\n  {\n    method: \"GET\",\n    query: z.object({\n      limit: z.string().meta({\n        description: \"The number of users to return\"\n      }).or(z.number()).optional(),\n      offset: z.string().meta({\n        description: \"The offset to start from\"\n      }).or(z.number()).optional(),\n      sortBy: z.string().meta({\n        description: \"The field to sort by\"\n      }).optional(),\n      sortDirection: z.enum([\"asc\", \"desc\"]).meta({\n        description: \"The direction to sort by\"\n      }).optional(),\n      filterField: z.string().meta({\n        description: \"The field to filter by\"\n      }).optional(),\n      filterValue: z.string().meta({\n        description: \"The value to filter by\"\n      }).or(z.number()).or(z.boolean()).optional(),\n      filterOperator: z.enum([\"eq\", \"ne\", \"lt\", \"lte\", \"gt\", \"gte\", \"contains\"]).meta({\n        description: \"The operator to use for the filter\"\n      }).optional(),\n      organizationId: z.string().meta({\n        description: `The organization ID to list members for. If not provided, will default to the user's active organization. Eg: \"organization-id\"`\n      }).optional()\n    }).optional(),\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.query?.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const isMember = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId\n    });\n    if (!isMember) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION\n      });\n    }\n    const { members, total } = await adapter.listMembers({\n      organizationId,\n      limit: ctx.query?.limit ? Number(ctx.query.limit) : void 0,\n      offset: ctx.query?.offset ? Number(ctx.query.offset) : void 0,\n      sortBy: ctx.query?.sortBy,\n      sortOrder: ctx.query?.sortDirection,\n      filter: ctx.query?.filterField ? {\n        field: ctx.query?.filterField,\n        operator: ctx.query.filterOperator,\n        value: ctx.query.filterValue\n      } : void 0\n    });\n    return ctx.json({\n      members,\n      total\n    });\n  }\n);\nconst getActiveMemberRole = (options) => createAuthEndpoint(\n  \"/organization/get-active-member-role\",\n  {\n    method: \"GET\",\n    query: z.object({\n      userId: z.string().meta({\n        description: \"The user ID to get the role for. If not provided, will default to the current user's\"\n      }).optional(),\n      organizationId: z.string().meta({\n        description: `The organization ID to list members for. If not provided, will default to the user's active organization. Eg: \"organization-id\"`\n      }).optional()\n    }).optional(),\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.query?.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const userId = ctx.query?.userId || session.user.id;\n    const adapter = getOrgAdapter(ctx.context, options);\n    const member = await adapter.findMemberByOrgId({\n      userId,\n      organizationId\n    });\n    if (!member) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION\n      });\n    }\n    return ctx.json({\n      role: member?.role\n    });\n  }\n);\n\nconst createOrganization = (options) => {\n  const additionalFieldsSchema = toZodSchema({\n    fields: options?.schema?.organization?.additionalFields || {},\n    isClientSide: true\n  });\n  const baseSchema = z.object({\n    name: z.string().min(1).meta({\n      description: \"The name of the organization\"\n    }),\n    slug: z.string().min(1).meta({\n      description: \"The slug of the organization\"\n    }),\n    userId: z.coerce.string().meta({\n      description: 'The user id of the organization creator. If not provided, the current user will be used. Should only be used by admins or when called by the server. server-only. Eg: \"user-id\"'\n    }).optional(),\n    logo: z.string().meta({\n      description: \"The logo of the organization\"\n    }).optional(),\n    metadata: z.record(z.string(), z.any()).meta({\n      description: \"The metadata of the organization\"\n    }).optional(),\n    keepCurrentActiveOrganization: z.boolean().meta({\n      description: \"Whether to keep the current active organization active after creating a new one. Eg: true\"\n    }).optional()\n  });\n  return createAuthEndpoint(\n    \"/organization/create\",\n    {\n      method: \"POST\",\n      body: z.object({\n        ...baseSchema.shape,\n        ...additionalFieldsSchema.shape\n      }),\n      use: [orgMiddleware],\n      metadata: {\n        $Infer: {\n          body: {}\n        },\n        openapi: {\n          description: \"Create an organization\",\n          responses: {\n            \"200\": {\n              description: \"Success\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    description: \"The organization that was created\",\n                    $ref: \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const session = await getSessionFromCtx(ctx);\n      if (!session && (ctx.request || ctx.headers)) {\n        throw new APIError(\"UNAUTHORIZED\");\n      }\n      let user = session?.user || null;\n      if (!user) {\n        if (!ctx.body.userId) {\n          throw new APIError(\"UNAUTHORIZED\");\n        }\n        user = await ctx.context.internalAdapter.findUserById(ctx.body.userId);\n      }\n      if (!user) {\n        return ctx.json(null, {\n          status: 401\n        });\n      }\n      const options2 = ctx.context.orgOptions;\n      const canCreateOrg = typeof options2?.allowUserToCreateOrganization === \"function\" ? await options2.allowUserToCreateOrganization(user) : options2?.allowUserToCreateOrganization === void 0 ? true : options2.allowUserToCreateOrganization;\n      if (!canCreateOrg) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_ORGANIZATION\n        });\n      }\n      const adapter = getOrgAdapter(ctx.context, options2);\n      const userOrganizations = await adapter.listOrganizations(user.id);\n      const hasReachedOrgLimit = typeof options2.organizationLimit === \"number\" ? userOrganizations.length >= options2.organizationLimit : typeof options2.organizationLimit === \"function\" ? await options2.organizationLimit(user) : false;\n      if (hasReachedOrgLimit) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_ORGANIZATIONS\n        });\n      }\n      const existingOrganization = await adapter.findOrganizationBySlug(\n        ctx.body.slug\n      );\n      if (existingOrganization) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_ALREADY_EXISTS\n        });\n      }\n      let {\n        keepCurrentActiveOrganization: _,\n        userId: __,\n        ...orgData\n      } = ctx.body;\n      if (options2.organizationCreation?.beforeCreate) {\n        const response = await options2.organizationCreation.beforeCreate(\n          {\n            organization: {\n              ...orgData,\n              createdAt: /* @__PURE__ */ new Date()\n            },\n            user\n          },\n          ctx.request\n        );\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          orgData = {\n            ...ctx.body,\n            ...response.data\n          };\n        }\n      }\n      if (options2?.organizationHooks?.beforeCreateOrganization) {\n        const response = await options2?.organizationHooks.beforeCreateOrganization({\n          organization: orgData,\n          user\n        });\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          orgData = {\n            ...ctx.body,\n            ...response.data\n          };\n        }\n      }\n      const organization = await adapter.createOrganization({\n        organization: {\n          ...orgData,\n          createdAt: /* @__PURE__ */ new Date()\n        }\n      });\n      let member;\n      let teamMember = null;\n      let data = {\n        userId: user.id,\n        organizationId: organization.id,\n        role: ctx.context.orgOptions.creatorRole || \"owner\"\n      };\n      if (options2?.organizationHooks?.beforeAddMember) {\n        const response = await options2?.organizationHooks.beforeAddMember({\n          member: {\n            userId: user.id,\n            organizationId: organization.id,\n            role: ctx.context.orgOptions.creatorRole || \"owner\"\n          },\n          user,\n          organization\n        });\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          data = {\n            ...data,\n            ...response.data\n          };\n        }\n      }\n      member = await adapter.createMember(data);\n      if (options2?.organizationHooks?.afterAddMember) {\n        await options2?.organizationHooks.afterAddMember({\n          member,\n          user,\n          organization\n        });\n      }\n      if (options2?.teams?.enabled && options2.teams.defaultTeam?.enabled !== false) {\n        let teamData = {\n          organizationId: organization.id,\n          name: `${organization.name}`,\n          createdAt: /* @__PURE__ */ new Date()\n        };\n        if (options2?.organizationHooks?.beforeCreateTeam) {\n          const response = await options2?.organizationHooks.beforeCreateTeam({\n            team: {\n              organizationId: organization.id,\n              name: `${organization.name}`\n            },\n            user,\n            organization\n          });\n          if (response && typeof response === \"object\" && \"data\" in response) {\n            teamData = {\n              ...teamData,\n              ...response.data\n            };\n          }\n        }\n        const defaultTeam = await options2.teams.defaultTeam?.customCreateDefaultTeam?.(\n          organization,\n          ctx.request\n        ) || await adapter.createTeam(teamData);\n        teamMember = await adapter.findOrCreateTeamMember({\n          teamId: defaultTeam.id,\n          userId: user.id\n        });\n        if (options2?.organizationHooks?.afterCreateTeam) {\n          await options2?.organizationHooks.afterCreateTeam({\n            team: defaultTeam,\n            user,\n            organization\n          });\n        }\n      }\n      if (options2.organizationCreation?.afterCreate) {\n        await options2.organizationCreation.afterCreate(\n          {\n            organization,\n            user,\n            member\n          },\n          ctx.request\n        );\n      }\n      if (options2?.organizationHooks?.afterCreateOrganization) {\n        await options2?.organizationHooks.afterCreateOrganization({\n          organization,\n          user,\n          member\n        });\n      }\n      if (ctx.context.session && !ctx.body.keepCurrentActiveOrganization) {\n        await adapter.setActiveOrganization(\n          ctx.context.session.session.token,\n          organization.id,\n          ctx\n        );\n      }\n      if (teamMember && ctx.context.session && !ctx.body.keepCurrentActiveOrganization) {\n        await adapter.setActiveTeam(\n          ctx.context.session.session.token,\n          teamMember.teamId,\n          ctx\n        );\n      }\n      return ctx.json({\n        ...organization,\n        metadata: organization.metadata && typeof organization.metadata === \"string\" ? JSON.parse(organization.metadata) : organization.metadata,\n        members: [member]\n      });\n    }\n  );\n};\nconst checkOrganizationSlug = (options) => createAuthEndpoint(\n  \"/organization/check-slug\",\n  {\n    method: \"POST\",\n    body: z.object({\n      slug: z.string().meta({\n        description: 'The organization slug to check. Eg: \"my-org\"'\n      })\n    }),\n    use: [requestOnlySessionMiddleware, orgMiddleware]\n  },\n  async (ctx) => {\n    const orgAdapter = getOrgAdapter(ctx.context, options);\n    const org = await orgAdapter.findOrganizationBySlug(ctx.body.slug);\n    if (!org) {\n      return ctx.json({\n        status: true\n      });\n    }\n    throw new APIError(\"BAD_REQUEST\", {\n      message: \"slug is taken\"\n    });\n  }\n);\nconst updateOrganization = (options) => {\n  const additionalFieldsSchema = toZodSchema({\n    fields: options?.schema?.organization?.additionalFields || {},\n    isClientSide: true\n  });\n  return createAuthEndpoint(\n    \"/organization/update\",\n    {\n      method: \"POST\",\n      body: z.object({\n        data: z.object({\n          ...additionalFieldsSchema.shape,\n          name: z.string().min(1).meta({\n            description: \"The name of the organization\"\n          }).optional(),\n          slug: z.string().min(1).meta({\n            description: \"The slug of the organization\"\n          }).optional(),\n          logo: z.string().meta({\n            description: \"The logo of the organization\"\n          }).optional(),\n          metadata: z.record(z.string(), z.any()).meta({\n            description: \"The metadata of the organization\"\n          }).optional()\n        }).partial(),\n        organizationId: z.string().meta({\n          description: 'The organization ID. Eg: \"org-id\"'\n        }).optional()\n      }),\n      requireHeaders: true,\n      use: [orgMiddleware],\n      metadata: {\n        $Infer: {\n          body: {}\n        },\n        openapi: {\n          description: \"Update an organization\",\n          responses: {\n            \"200\": {\n              description: \"Success\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    description: \"The updated organization\",\n                    $ref: \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const session = await ctx.context.getSession(ctx);\n      if (!session) {\n        throw new APIError(\"UNAUTHORIZED\", {\n          message: \"User not found\"\n        });\n      }\n      const organizationId = ctx.body.organizationId || session.session.activeOrganizationId;\n      if (!organizationId) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      const adapter = getOrgAdapter(ctx.context, options);\n      const member = await adapter.findMemberByOrgId({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!member) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n        });\n      }\n      const canUpdateOrg = await hasPermission(\n        {\n          permissions: {\n            organization: [\"update\"]\n          },\n          role: member.role,\n          options: ctx.context.orgOptions,\n          organizationId\n        },\n        ctx\n      );\n      if (!canUpdateOrg) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_ORGANIZATION\n        });\n      }\n      if (options?.organizationHooks?.beforeUpdateOrganization) {\n        const response = await options.organizationHooks.beforeUpdateOrganization({\n          organization: ctx.body.data,\n          user: session.user,\n          member\n        });\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          ctx.body.data = {\n            ...ctx.body.data,\n            ...response.data\n          };\n        }\n      }\n      const updatedOrg = await adapter.updateOrganization(\n        organizationId,\n        ctx.body.data\n      );\n      if (options?.organizationHooks?.afterUpdateOrganization) {\n        await options.organizationHooks.afterUpdateOrganization({\n          organization: updatedOrg,\n          user: session.user,\n          member\n        });\n      }\n      return ctx.json(updatedOrg);\n    }\n  );\n};\nconst deleteOrganization = (options) => {\n  return createAuthEndpoint(\n    \"/organization/delete\",\n    {\n      method: \"POST\",\n      body: z.object({\n        organizationId: z.string().meta({\n          description: \"The organization id to delete\"\n        })\n      }),\n      requireHeaders: true,\n      use: [orgMiddleware],\n      metadata: {\n        openapi: {\n          description: \"Delete an organization\",\n          responses: {\n            \"200\": {\n              description: \"Success\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"string\",\n                    description: \"The organization id that was deleted\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const disableOrganizationDeletion = ctx.context.orgOptions.organizationDeletion?.disabled || ctx.context.orgOptions.disableOrganizationDeletion;\n      if (disableOrganizationDeletion) {\n        if (ctx.context.orgOptions.organizationDeletion?.disabled) {\n          ctx.context.logger.info(\n            \"`organizationDeletion.disabled` is deprecated. Use `disableOrganizationDeletion` instead\"\n          );\n        }\n        throw new APIError(\"NOT_FOUND\", {\n          message: \"Organization deletion is disabled\"\n        });\n      }\n      const session = await ctx.context.getSession(ctx);\n      if (!session) {\n        throw new APIError(\"UNAUTHORIZED\", { status: 401 });\n      }\n      const organizationId = ctx.body.organizationId;\n      if (!organizationId) {\n        return ctx.json(null, {\n          status: 400,\n          body: {\n            message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n          }\n        });\n      }\n      const adapter = getOrgAdapter(ctx.context, options);\n      const member = await adapter.findMemberByOrgId({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!member) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n        });\n      }\n      const canDeleteOrg = await hasPermission(\n        {\n          role: member.role,\n          permissions: {\n            organization: [\"delete\"]\n          },\n          organizationId,\n          options: ctx.context.orgOptions\n        },\n        ctx\n      );\n      if (!canDeleteOrg) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_ORGANIZATION\n        });\n      }\n      if (organizationId === session.session.activeOrganizationId) {\n        await adapter.setActiveOrganization(session.session.token, null, ctx);\n      }\n      const org = await adapter.findOrganizationById(organizationId);\n      if (!org) {\n        throw new APIError(\"BAD_REQUEST\");\n      }\n      if (options?.organizationHooks?.beforeDeleteOrganization) {\n        await options.organizationHooks.beforeDeleteOrganization({\n          organization: org,\n          user: session.user\n        });\n      }\n      await adapter.deleteOrganization(organizationId);\n      if (options?.organizationHooks?.afterDeleteOrganization) {\n        await options.organizationHooks.afterDeleteOrganization({\n          organization: org,\n          user: session.user\n        });\n      }\n      return ctx.json(org);\n    }\n  );\n};\nconst getFullOrganization = (options) => createAuthEndpoint(\n  \"/organization/get-full-organization\",\n  {\n    method: \"GET\",\n    query: z.optional(\n      z.object({\n        organizationId: z.string().meta({\n          description: \"The organization id to get\"\n        }).optional(),\n        organizationSlug: z.string().meta({\n          description: \"The organization slug to get\"\n        }).optional(),\n        membersLimit: z.number().or(z.string().transform((val) => parseInt(val))).meta({\n          description: \"The limit of members to get. By default, it uses the membershipLimit option which defaults to 100.\"\n        }).optional()\n      })\n    ),\n    requireHeaders: true,\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Get the full organization\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  description: \"The organization\",\n                  $ref: \"#/components/schemas/Organization\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.query?.organizationSlug || ctx.query?.organizationId || session.session.activeOrganizationId;\n    if (!organizationId) {\n      ctx.context.logger.info(\"No active organization found, returning null\");\n      return ctx.json(null, {\n        status: 200\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const organization = await adapter.findFullOrganization({\n      organizationId,\n      isSlug: !!ctx.query?.organizationSlug,\n      includeTeams: ctx.context.orgOptions.teams?.enabled,\n      membersLimit: ctx.query?.membersLimit\n    });\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const isMember = await adapter.checkMembership({\n      userId: session.user.id,\n      organizationId: organization.id\n    });\n    if (!isMember) {\n      await adapter.setActiveOrganization(session.session.token, null, ctx);\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    return ctx.json(organization);\n  }\n);\nconst setActiveOrganization = (options) => {\n  return createAuthEndpoint(\n    \"/organization/set-active\",\n    {\n      method: \"POST\",\n      body: z.object({\n        organizationId: z.string().meta({\n          description: 'The organization id to set as active. It can be null to unset the active organization. Eg: \"org-id\"'\n        }).nullable().optional(),\n        organizationSlug: z.string().meta({\n          description: 'The organization slug to set as active. It can be null to unset the active organization if organizationId is not provided. Eg: \"org-slug\"'\n        }).optional()\n      }),\n      use: [orgSessionMiddleware, orgMiddleware],\n      metadata: {\n        openapi: {\n          description: \"Set the active organization\",\n          responses: {\n            \"200\": {\n              description: \"Success\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    description: \"The organization\",\n                    $ref: \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const adapter = getOrgAdapter(ctx.context, options);\n      const session = ctx.context.session;\n      let organizationId = ctx.body.organizationId;\n      let organizationSlug = ctx.body.organizationSlug;\n      if (organizationId === null) {\n        const sessionOrgId = session.session.activeOrganizationId;\n        if (!sessionOrgId) {\n          return ctx.json(null);\n        }\n        const updatedSession2 = await adapter.setActiveOrganization(\n          session.session.token,\n          null,\n          ctx\n        );\n        await setSessionCookie(ctx, {\n          session: updatedSession2,\n          user: session.user\n        });\n        return ctx.json(null);\n      }\n      if (!organizationId && !organizationSlug) {\n        const sessionOrgId = session.session.activeOrganizationId;\n        if (!sessionOrgId) {\n          return ctx.json(null);\n        }\n        organizationId = sessionOrgId;\n      }\n      if (organizationSlug && !organizationId) {\n        const organization2 = await adapter.findOrganizationBySlug(organizationSlug);\n        if (!organization2) {\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n          });\n        }\n        organizationId = organization2.id;\n      }\n      if (!organizationId) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      const isMember = await adapter.checkMembership({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!isMember) {\n        await adapter.setActiveOrganization(session.session.token, null, ctx);\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n        });\n      }\n      let organization = await adapter.findOrganizationById(organizationId);\n      if (!organization) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      const updatedSession = await adapter.setActiveOrganization(\n        session.session.token,\n        organization.id,\n        ctx\n      );\n      await setSessionCookie(ctx, {\n        session: updatedSession,\n        user: session.user\n      });\n      return ctx.json(organization);\n    }\n  );\n};\nconst listOrganizations = (options) => createAuthEndpoint(\n  \"/organization/list\",\n  {\n    method: \"GET\",\n    use: [orgMiddleware, orgSessionMiddleware],\n    metadata: {\n      openapi: {\n        description: \"List all organizations\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    $ref: \"#/components/schemas/Organization\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const adapter = getOrgAdapter(ctx.context, options);\n    const organizations = await adapter.listOrganizations(\n      ctx.context.session.user.id\n    );\n    return ctx.json(organizations);\n  }\n);\n\nconst createTeam = (options) => {\n  const additionalFieldsSchema = toZodSchema({\n    fields: options?.schema?.team?.additionalFields ?? {},\n    isClientSide: true\n  });\n  const baseSchema = z.object({\n    name: z.string().meta({\n      description: 'The name of the team. Eg: \"my-team\"'\n    }),\n    organizationId: z.string().meta({\n      description: 'The organization ID which the team will be created in. Defaults to the active organization. Eg: \"organization-id\"'\n    }).optional()\n  });\n  return createAuthEndpoint(\n    \"/organization/create-team\",\n    {\n      method: \"POST\",\n      body: z.object({\n        ...baseSchema.shape,\n        ...additionalFieldsSchema.shape\n      }),\n      use: [orgMiddleware],\n      metadata: {\n        $Infer: {\n          body: {}\n        },\n        openapi: {\n          description: \"Create a new team within an organization\",\n          responses: {\n            \"200\": {\n              description: \"Team created successfully\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\",\n                        description: \"Unique identifier of the created team\"\n                      },\n                      name: {\n                        type: \"string\",\n                        description: \"Name of the team\"\n                      },\n                      organizationId: {\n                        type: \"string\",\n                        description: \"ID of the organization the team belongs to\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Timestamp when the team was created\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Timestamp when the team was last updated\"\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"name\",\n                      \"organizationId\",\n                      \"createdAt\",\n                      \"updatedAt\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const session = await getSessionFromCtx(ctx);\n      const organizationId = ctx.body.organizationId || session?.session.activeOrganizationId;\n      if (!session && (ctx.request || ctx.headers)) {\n        throw new APIError(\"UNAUTHORIZED\");\n      }\n      if (!organizationId) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        });\n      }\n      const adapter = getOrgAdapter(ctx.context, options);\n      if (session) {\n        const member = await adapter.findMemberByOrgId({\n          userId: session.user.id,\n          organizationId\n        });\n        if (!member) {\n          throw new APIError(\"FORBIDDEN\", {\n            message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_INVITE_USERS_TO_THIS_ORGANIZATION\n          });\n        }\n        const canCreate = await hasPermission(\n          {\n            role: member.role,\n            options: ctx.context.orgOptions,\n            permissions: {\n              team: [\"create\"]\n            },\n            organizationId\n          },\n          ctx\n        );\n        if (!canCreate) {\n          throw new APIError(\"FORBIDDEN\", {\n            message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_TEAMS_IN_THIS_ORGANIZATION\n          });\n        }\n      }\n      const existingTeams = await adapter.listTeams(organizationId);\n      const maximum = typeof ctx.context.orgOptions.teams?.maximumTeams === \"function\" ? await ctx.context.orgOptions.teams?.maximumTeams(\n        {\n          organizationId,\n          session\n        },\n        ctx.request\n      ) : ctx.context.orgOptions.teams?.maximumTeams;\n      const maxTeamsReached = maximum ? existingTeams.length >= maximum : false;\n      if (maxTeamsReached) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_HAVE_REACHED_THE_MAXIMUM_NUMBER_OF_TEAMS\n        });\n      }\n      const { name, organizationId: _, ...additionalFields } = ctx.body;\n      const organization = await adapter.findOrganizationById(organizationId);\n      if (!organization) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      let teamData = {\n        name,\n        organizationId,\n        createdAt: /* @__PURE__ */ new Date(),\n        updatedAt: /* @__PURE__ */ new Date(),\n        ...additionalFields\n      };\n      if (options?.organizationHooks?.beforeCreateTeam) {\n        const response = await options?.organizationHooks.beforeCreateTeam({\n          team: {\n            name,\n            organizationId,\n            ...additionalFields\n          },\n          user: session?.user,\n          organization\n        });\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          teamData = {\n            ...teamData,\n            ...response.data\n          };\n        }\n      }\n      const createdTeam = await adapter.createTeam(teamData);\n      if (options?.organizationHooks?.afterCreateTeam) {\n        await options?.organizationHooks.afterCreateTeam({\n          team: createdTeam,\n          user: session?.user,\n          organization\n        });\n      }\n      return ctx.json(createdTeam);\n    }\n  );\n};\nconst removeTeam = (options) => createAuthEndpoint(\n  \"/organization/remove-team\",\n  {\n    method: \"POST\",\n    body: z.object({\n      teamId: z.string().meta({\n        description: `The team ID of the team to remove. Eg: \"team-id\"`\n      }),\n      organizationId: z.string().meta({\n        description: `The organization ID which the team falls under. If not provided, it will default to the user's active organization. Eg: \"organization-id\"`\n      }).optional()\n    }),\n    use: [orgMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Remove a team from an organization\",\n        responses: {\n          \"200\": {\n            description: \"Team removed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    message: {\n                      type: \"string\",\n                      description: \"Confirmation message indicating successful removal\",\n                      enum: [\"Team removed successfully.\"]\n                    }\n                  },\n                  required: [\"message\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const session = await getSessionFromCtx(ctx);\n    const organizationId = ctx.body.organizationId || session?.session.activeOrganizationId;\n    if (!organizationId) {\n      return ctx.json(null, {\n        status: 400,\n        body: {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        }\n      });\n    }\n    if (!session && (ctx.request || ctx.headers)) {\n      throw new APIError(\"UNAUTHORIZED\");\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    if (session) {\n      const member = await adapter.findMemberByOrgId({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!member || session.session?.activeTeamId === ctx.body.teamId) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_THIS_TEAM\n        });\n      }\n      const canRemove = await hasPermission(\n        {\n          role: member.role,\n          options: ctx.context.orgOptions,\n          permissions: {\n            team: [\"delete\"]\n          },\n          organizationId\n        },\n        ctx\n      );\n      if (!canRemove) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_TEAMS_IN_THIS_ORGANIZATION\n        });\n      }\n    }\n    const team = await adapter.findTeamById({\n      teamId: ctx.body.teamId,\n      organizationId\n    });\n    if (!team || team.organizationId !== organizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n      });\n    }\n    if (!ctx.context.orgOptions.teams?.allowRemovingAllTeams) {\n      const teams = await adapter.listTeams(organizationId);\n      if (teams.length <= 1) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.UNABLE_TO_REMOVE_LAST_TEAM\n        });\n      }\n    }\n    const organization = await adapter.findOrganizationById(organizationId);\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    if (options?.organizationHooks?.beforeDeleteTeam) {\n      await options?.organizationHooks.beforeDeleteTeam({\n        team,\n        user: session?.user,\n        organization\n      });\n    }\n    await adapter.deleteTeam(team.id);\n    if (options?.organizationHooks?.afterDeleteTeam) {\n      await options?.organizationHooks.afterDeleteTeam({\n        team,\n        user: session?.user,\n        organization\n      });\n    }\n    return ctx.json({ message: \"Team removed successfully.\" });\n  }\n);\nconst updateTeam = (options) => {\n  const additionalFieldsSchema = toZodSchema({\n    fields: options?.schema?.team?.additionalFields ?? {},\n    isClientSide: true\n  });\n  return createAuthEndpoint(\n    \"/organization/update-team\",\n    {\n      method: \"POST\",\n      body: z.object({\n        teamId: z.string().meta({\n          description: `The ID of the team to be updated. Eg: \"team-id\"`\n        }),\n        data: z.object({\n          ...teamSchema.shape,\n          ...additionalFieldsSchema.shape\n        }).partial()\n      }),\n      requireHeaders: true,\n      use: [orgMiddleware, orgSessionMiddleware],\n      metadata: {\n        $Infer: { body: {} },\n        openapi: {\n          description: \"Update an existing team in an organization\",\n          responses: {\n            \"200\": {\n              description: \"Team updated successfully\",\n              content: {\n                \"application/json\": {\n                  schema: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\",\n                        description: \"Unique identifier of the updated team\"\n                      },\n                      name: {\n                        type: \"string\",\n                        description: \"Updated name of the team\"\n                      },\n                      organizationId: {\n                        type: \"string\",\n                        description: \"ID of the organization the team belongs to\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Timestamp when the team was created\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Timestamp when the team was last updated\"\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"name\",\n                      \"organizationId\",\n                      \"createdAt\",\n                      \"updatedAt\"\n                    ]\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    async (ctx) => {\n      const session = ctx.context.session;\n      const organizationId = ctx.body.data.organizationId || session.session.activeOrganizationId;\n      if (!organizationId) {\n        return ctx.json(null, {\n          status: 400,\n          body: {\n            message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n          }\n        });\n      }\n      const adapter = getOrgAdapter(ctx.context, options);\n      const member = await adapter.findMemberByOrgId({\n        userId: session.user.id,\n        organizationId\n      });\n      if (!member) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM\n        });\n      }\n      const canUpdate = await hasPermission(\n        {\n          role: member.role,\n          options: ctx.context.orgOptions,\n          permissions: {\n            team: [\"update\"]\n          },\n          organizationId\n        },\n        ctx\n      );\n      if (!canUpdate) {\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_THIS_TEAM\n        });\n      }\n      const team = await adapter.findTeamById({\n        teamId: ctx.body.teamId,\n        organizationId\n      });\n      if (!team || team.organizationId !== organizationId) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n        });\n      }\n      const { name, organizationId: __, ...additionalFields } = ctx.body.data;\n      const organization = await adapter.findOrganizationById(organizationId);\n      if (!organization) {\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n        });\n      }\n      const updates = {\n        name,\n        ...additionalFields\n      };\n      if (options?.organizationHooks?.beforeUpdateTeam) {\n        const response = await options?.organizationHooks.beforeUpdateTeam({\n          team,\n          updates,\n          user: session.user,\n          organization\n        });\n        if (response && typeof response === \"object\" && \"data\" in response) {\n          const modifiedUpdates = response.data;\n          const updatedTeam2 = await adapter.updateTeam(\n            team.id,\n            modifiedUpdates\n          );\n          if (options?.organizationHooks?.afterUpdateTeam) {\n            await options?.organizationHooks.afterUpdateTeam({\n              team: updatedTeam2,\n              user: session.user,\n              organization\n            });\n          }\n          return ctx.json(updatedTeam2);\n        }\n      }\n      const updatedTeam = await adapter.updateTeam(team.id, updates);\n      if (options?.organizationHooks?.afterUpdateTeam) {\n        await options?.organizationHooks.afterUpdateTeam({\n          team: updatedTeam,\n          user: session.user,\n          organization\n        });\n      }\n      return ctx.json(updatedTeam);\n    }\n  );\n};\nconst listOrganizationTeams = (options) => createAuthEndpoint(\n  \"/organization/list-teams\",\n  {\n    method: \"GET\",\n    query: z.optional(\n      z.object({\n        organizationId: z.string().meta({\n          description: `The organization ID which the teams are under to list. Defaults to the users active organization. Eg: \"organziation-id\"`\n        }).optional()\n      })\n    ),\n    requireHeaders: true,\n    metadata: {\n      openapi: {\n        description: \"List all teams in an organization\",\n        responses: {\n          \"200\": {\n            description: \"Teams retrieved successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    type: \"object\",\n                    properties: {\n                      id: {\n                        type: \"string\",\n                        description: \"Unique identifier of the team\"\n                      },\n                      name: {\n                        type: \"string\",\n                        description: \"Name of the team\"\n                      },\n                      organizationId: {\n                        type: \"string\",\n                        description: \"ID of the organization the team belongs to\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Timestamp when the team was created\"\n                      },\n                      updatedAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Timestamp when the team was last updated\"\n                      }\n                    },\n                    required: [\n                      \"id\",\n                      \"name\",\n                      \"organizationId\",\n                      \"createdAt\",\n                      \"updatedAt\"\n                    ]\n                  },\n                  description: \"Array of team objects within the organization\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const organizationId = ctx.query?.organizationId || session?.session.activeOrganizationId;\n    if (!organizationId) {\n      throw ctx.error(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const adapter = getOrgAdapter(ctx.context, options);\n    const member = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: organizationId || \"\"\n    });\n    if (!member) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_ACCESS_THIS_ORGANIZATION\n      });\n    }\n    const teams = await adapter.listTeams(organizationId);\n    return ctx.json(teams);\n  }\n);\nconst setActiveTeam = (options) => createAuthEndpoint(\n  \"/organization/set-active-team\",\n  {\n    method: \"POST\",\n    body: z.object({\n      teamId: z.string().meta({\n        description: \"The team id to set as active. It can be null to unset the active team\"\n      }).nullable().optional()\n    }),\n    use: [orgSessionMiddleware, orgMiddleware],\n    metadata: {\n      openapi: {\n        description: \"Set the active team\",\n        responses: {\n          \"200\": {\n            description: \"Success\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  description: \"The team\",\n                  $ref: \"#/components/schemas/Team\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  async (ctx) => {\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const session = ctx.context.session;\n    if (ctx.body.teamId === null) {\n      const sessionTeamId = session.session.activeTeamId;\n      if (!sessionTeamId) {\n        return ctx.json(null);\n      }\n      const updatedSession2 = await adapter.setActiveTeam(\n        session.session.token,\n        null,\n        ctx\n      );\n      await setSessionCookie(ctx, {\n        session: updatedSession2,\n        user: session.user\n      });\n      return ctx.json(null);\n    }\n    let teamId;\n    if (!ctx.body.teamId) {\n      const sessionTeamId = session.session.activeTeamId;\n      if (!sessionTeamId) {\n        return ctx.json(null);\n      } else {\n        teamId = sessionTeamId;\n      }\n    } else {\n      teamId = ctx.body.teamId;\n    }\n    const team = await adapter.findTeamById({ teamId });\n    if (!team) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n      });\n    }\n    const member = await adapter.findTeamMember({\n      teamId,\n      userId: session.user.id\n    });\n    if (!member) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_TEAM\n      });\n    }\n    const updatedSession = await adapter.setActiveTeam(\n      session.session.token,\n      team.id,\n      ctx\n    );\n    await setSessionCookie(ctx, {\n      session: updatedSession,\n      user: session.user\n    });\n    return ctx.json(team);\n  }\n);\nconst listUserTeams = (options) => createAuthEndpoint(\n  \"/organization/list-user-teams\",\n  {\n    method: \"GET\",\n    metadata: {\n      openapi: {\n        description: \"List all teams that the current user is a part of.\",\n        responses: {\n          \"200\": {\n            description: \"Teams retrieved successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    type: \"object\",\n                    description: \"The team\",\n                    $ref: \"#/components/schemas/Team\"\n                  },\n                  description: \"Array of team objects within the organization\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    const teams = await adapter.listTeamsByUser({\n      userId: session.user.id\n    });\n    return ctx.json(teams);\n  }\n);\nconst listTeamMembers = (options) => createAuthEndpoint(\n  \"/organization/list-team-members\",\n  {\n    method: \"GET\",\n    query: z.optional(\n      z.object({\n        teamId: z.string().optional().meta({\n          description: \"The team whose members we should return. If this is not provided the members of the current active team get returned.\"\n        })\n      })\n    ),\n    metadata: {\n      openapi: {\n        description: \"List the members of the given team.\",\n        responses: {\n          \"200\": {\n            description: \"Teams retrieved successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"array\",\n                  items: {\n                    type: \"object\",\n                    description: \"The team member\",\n                    properties: {\n                      id: {\n                        type: \"string\",\n                        description: \"Unique identifier of the team member\"\n                      },\n                      userId: {\n                        type: \"string\",\n                        description: \"The user ID of the team member\"\n                      },\n                      teamId: {\n                        type: \"string\",\n                        description: \"The team ID of the team the team member is in\"\n                      },\n                      createdAt: {\n                        type: \"string\",\n                        format: \"date-time\",\n                        description: \"Timestamp when the team member was created\"\n                      }\n                    },\n                    required: [\"id\", \"userId\", \"teamId\", \"createdAt\"]\n                  },\n                  description: \"Array of team member objects within the team\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    let teamId = ctx.query?.teamId || session?.session.activeTeamId;\n    if (!teamId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_DO_NOT_HAVE_AN_ACTIVE_TEAM\n      });\n    }\n    const member = await adapter.findTeamMember({\n      userId: session.user.id,\n      teamId\n    });\n    if (!member) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_TEAM\n      });\n    }\n    const members = await adapter.listTeamMembers({\n      teamId\n    });\n    return ctx.json(members);\n  }\n);\nconst addTeamMember = (options) => createAuthEndpoint(\n  \"/organization/add-team-member\",\n  {\n    method: \"POST\",\n    body: z.object({\n      teamId: z.string().meta({\n        description: \"The team the user should be a member of.\"\n      }),\n      userId: z.coerce.string().meta({\n        description: \"The user Id which represents the user to be added as a member.\"\n      })\n    }),\n    metadata: {\n      openapi: {\n        description: \"The newly created member\",\n        responses: {\n          \"200\": {\n            description: \"Team member created successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  description: \"The team member\",\n                  properties: {\n                    id: {\n                      type: \"string\",\n                      description: \"Unique identifier of the team member\"\n                    },\n                    userId: {\n                      type: \"string\",\n                      description: \"The user ID of the team member\"\n                    },\n                    teamId: {\n                      type: \"string\",\n                      description: \"The team ID of the team the team member is in\"\n                    },\n                    createdAt: {\n                      type: \"string\",\n                      format: \"date-time\",\n                      description: \"Timestamp when the team member was created\"\n                    }\n                  },\n                  required: [\"id\", \"userId\", \"teamId\", \"createdAt\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    if (!session.session.activeOrganizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const currentMember = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: session.session.activeOrganizationId\n    });\n    if (!currentMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    const canUpdateMember = await hasPermission(\n      {\n        role: currentMember.role,\n        options: ctx.context.orgOptions,\n        permissions: {\n          member: [\"update\"]\n        },\n        organizationId: session.session.activeOrganizationId\n      },\n      ctx\n    );\n    if (!canUpdateMember) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_A_NEW_TEAM_MEMBER\n      });\n    }\n    const toBeAddedMember = await adapter.findMemberByOrgId({\n      userId: ctx.body.userId,\n      organizationId: session.session.activeOrganizationId\n    });\n    if (!toBeAddedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    const team = await adapter.findTeamById({\n      teamId: ctx.body.teamId,\n      organizationId: session.session.activeOrganizationId\n    });\n    if (!team) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n      });\n    }\n    const organization = await adapter.findOrganizationById(\n      session.session.activeOrganizationId\n    );\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const userBeingAdded = await ctx.context.internalAdapter.findUserById(\n      ctx.body.userId\n    );\n    if (!userBeingAdded) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"User not found\"\n      });\n    }\n    if (options?.organizationHooks?.beforeAddTeamMember) {\n      await options?.organizationHooks.beforeAddTeamMember({\n        teamMember: {\n          teamId: ctx.body.teamId,\n          userId: ctx.body.userId\n        },\n        team,\n        user: userBeingAdded,\n        organization\n      });\n    }\n    const teamMember = await adapter.findOrCreateTeamMember({\n      teamId: ctx.body.teamId,\n      userId: ctx.body.userId\n    });\n    if (options?.organizationHooks?.afterAddTeamMember) {\n      await options?.organizationHooks.afterAddTeamMember({\n        teamMember,\n        team,\n        user: userBeingAdded,\n        organization\n      });\n    }\n    return ctx.json(teamMember);\n  }\n);\nconst removeTeamMember = (options) => createAuthEndpoint(\n  \"/organization/remove-team-member\",\n  {\n    method: \"POST\",\n    body: z.object({\n      teamId: z.string().meta({\n        description: \"The team the user should be removed from.\"\n      }),\n      userId: z.coerce.string().meta({\n        description: \"The user which should be removed from the team.\"\n      })\n    }),\n    metadata: {\n      openapi: {\n        description: \"Remove a member from a team\",\n        responses: {\n          \"200\": {\n            description: \"Team member removed successfully\",\n            content: {\n              \"application/json\": {\n                schema: {\n                  type: \"object\",\n                  properties: {\n                    message: {\n                      type: \"string\",\n                      description: \"Confirmation message indicating successful removal\",\n                      enum: [\"Team member removed successfully.\"]\n                    }\n                  },\n                  required: [\"message\"]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    use: [orgMiddleware, orgSessionMiddleware]\n  },\n  async (ctx) => {\n    const session = ctx.context.session;\n    const adapter = getOrgAdapter(ctx.context, ctx.context.orgOptions);\n    if (!session.session.activeOrganizationId) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n      });\n    }\n    const currentMember = await adapter.findMemberByOrgId({\n      userId: session.user.id,\n      organizationId: session.session.activeOrganizationId\n    });\n    if (!currentMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    const canDeleteMember = await hasPermission(\n      {\n        role: currentMember.role,\n        options: ctx.context.orgOptions,\n        permissions: {\n          member: [\"delete\"]\n        },\n        organizationId: session.session.activeOrganizationId\n      },\n      ctx\n    );\n    if (!canDeleteMember) {\n      throw new APIError(\"FORBIDDEN\", {\n        message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_REMOVE_A_TEAM_MEMBER\n      });\n    }\n    const toBeAddedMember = await adapter.findMemberByOrgId({\n      userId: ctx.body.userId,\n      organizationId: session.session.activeOrganizationId\n    });\n    if (!toBeAddedMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n      });\n    }\n    const team = await adapter.findTeamById({\n      teamId: ctx.body.teamId,\n      organizationId: session.session.activeOrganizationId\n    });\n    if (!team) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.TEAM_NOT_FOUND\n      });\n    }\n    const organization = await adapter.findOrganizationById(\n      session.session.activeOrganizationId\n    );\n    if (!organization) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.ORGANIZATION_NOT_FOUND\n      });\n    }\n    const userBeingRemoved = await ctx.context.internalAdapter.findUserById(\n      ctx.body.userId\n    );\n    if (!userBeingRemoved) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: \"User not found\"\n      });\n    }\n    const teamMember = await adapter.findTeamMember({\n      teamId: ctx.body.teamId,\n      userId: ctx.body.userId\n    });\n    if (!teamMember) {\n      throw new APIError(\"BAD_REQUEST\", {\n        message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_TEAM\n      });\n    }\n    if (options?.organizationHooks?.beforeRemoveTeamMember) {\n      await options?.organizationHooks.beforeRemoveTeamMember({\n        teamMember,\n        team,\n        user: userBeingRemoved,\n        organization\n      });\n    }\n    await adapter.removeTeamMember({\n      teamId: ctx.body.teamId,\n      userId: ctx.body.userId\n    });\n    if (options?.organizationHooks?.afterRemoveTeamMember) {\n      await options?.organizationHooks.afterRemoveTeamMember({\n        teamMember,\n        team,\n        user: userBeingRemoved,\n        organization\n      });\n    }\n    return ctx.json({ message: \"Team member removed successfully.\" });\n  }\n);\n\nconst normalizeRoleName = (role) => role.toLowerCase();\nconst DEFAULT_MAXIMUM_ROLES_PER_ORGANIZATION = Number.POSITIVE_INFINITY;\nconst getAdditionalFields = (options, shouldBePartial = false) => {\n  let additionalFields = options?.schema?.organizationRole?.additionalFields || {};\n  if (shouldBePartial) {\n    for (const key in additionalFields) {\n      additionalFields[key].required = false;\n    }\n  }\n  const additionalFieldsSchema = toZodSchema({\n    fields: additionalFields,\n    isClientSide: true\n  });\n  return {\n    additionalFieldsSchema,\n    $AdditionalFields: {},\n    $ReturnAdditionalFields: {}\n  };\n};\nconst createOrgRole = (options) => {\n  const { additionalFieldsSchema} = getAdditionalFields(options, false);\n  return createAuthEndpoint(\n    \"/organization/create-role\",\n    {\n      method: \"POST\",\n      body: z.object({\n        organizationId: z.string().optional().meta({\n          description: \"The id of the organization to create the role in. If not provided, the user's active organization will be used.\"\n        }),\n        role: z.string().meta({\n          description: \"The name of the role to create\"\n        }),\n        permission: z.record(z.string(), z.array(z.string())).meta({\n          description: \"The permission to assign to the role\"\n        }),\n        additionalFields: z.object({ ...additionalFieldsSchema.shape }).optional()\n      }),\n      metadata: {\n        $Infer: {\n          body: {}\n        }\n      },\n      requireHeaders: true,\n      use: [orgSessionMiddleware]\n    },\n    async (ctx) => {\n      const { session, user } = ctx.context.session;\n      let roleName = ctx.body.role;\n      const permission = ctx.body.permission;\n      const additionalFields = ctx.body.additionalFields;\n      const ac = options.ac;\n      if (!ac) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The organization plugin is missing a pre-defined ac instance.`,\n          `\nPlease refer to the documentation here: https://better-auth.com/docs/plugins/organization#dynamic-access-control`\n        );\n        throw new APIError(\"NOT_IMPLEMENTED\", {\n          message: ORGANIZATION_ERROR_CODES.MISSING_AC_INSTANCE\n        });\n      }\n      const organizationId = ctx.body.organizationId ?? session.activeOrganizationId;\n      if (!organizationId) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The session is missing an active organization id to create a role. Either set an active org id, or pass an organizationId in the request body.`\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_MUST_BE_IN_AN_ORGANIZATION_TO_CREATE_A_ROLE\n        });\n      }\n      roleName = normalizeRoleName(roleName);\n      await checkIfRoleNameIsTakenByPreDefinedRole({\n        role: roleName,\n        organizationId,\n        options,\n        ctx\n      });\n      const member = await ctx.context.adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          {\n            field: \"userId\",\n            value: user.id,\n            operator: \"eq\",\n            connector: \"AND\"\n          }\n        ]\n      });\n      if (!member) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not a member of the organization to create a role.`,\n          {\n            userId: user.id,\n            organizationId\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION\n        });\n      }\n      const canCreateRole = await hasPermission(\n        {\n          options,\n          organizationId,\n          permissions: {\n            ac: [\"create\"]\n          },\n          role: member.role\n        },\n        ctx\n      );\n      if (!canCreateRole) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not permitted to create a role. If this is unexpected, please make sure the role associated to that member has the \"ac\" resource with the \"create\" permission.`,\n          {\n            userId: user.id,\n            organizationId,\n            role: member.role\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_A_ROLE\n        });\n      }\n      const maximumRolesPerOrganization = typeof options.dynamicAccessControl?.maximumRolesPerOrganization === \"function\" ? await options.dynamicAccessControl.maximumRolesPerOrganization(\n        organizationId\n      ) : options.dynamicAccessControl?.maximumRolesPerOrganization ?? DEFAULT_MAXIMUM_ROLES_PER_ORGANIZATION;\n      const rolesInDB = await ctx.context.adapter.count({\n        model: \"organizationRole\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          }\n        ]\n      });\n      if (rolesInDB >= maximumRolesPerOrganization) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] Failed to create a new role, the organization has too many roles. Maximum allowed roles is ${maximumRolesPerOrganization}.`,\n          {\n            organizationId,\n            maximumRolesPerOrganization,\n            rolesInDB\n          }\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.TOO_MANY_ROLES\n        });\n      }\n      await checkForInvalidResources({ ac, ctx, permission });\n      await checkIfMemberHasPermission({\n        ctx,\n        member,\n        options,\n        organizationId,\n        permissionRequired: permission,\n        user,\n        action: \"create\"\n      });\n      await checkIfRoleNameIsTakenByRoleInDB({\n        ctx,\n        organizationId,\n        role: roleName\n      });\n      const newRole = ac.newRole(permission);\n      const newRoleInDB = await ctx.context.adapter.create({\n        model: \"organizationRole\",\n        data: {\n          createdAt: /* @__PURE__ */ new Date(),\n          organizationId,\n          permission: JSON.stringify(permission),\n          role: roleName,\n          ...additionalFields\n        }\n      });\n      const data = {\n        ...newRoleInDB,\n        permission\n      };\n      return ctx.json({\n        success: true,\n        roleData: data,\n        statements: newRole.statements\n      });\n    }\n  );\n};\nconst deleteOrgRole = (options) => {\n  return createAuthEndpoint(\n    \"/organization/delete-role\",\n    {\n      method: \"POST\",\n      body: z.object({\n        organizationId: z.string().optional().meta({\n          description: \"The id of the organization to create the role in. If not provided, the user's active organization will be used.\"\n        })\n      }).and(\n        z.union([\n          z.object({\n            roleName: z.string().meta({\n              description: \"The name of the role to delete\"\n            })\n          }),\n          z.object({\n            roleId: z.string().meta({\n              description: \"The id of the role to delete\"\n            })\n          })\n        ])\n      ),\n      requireHeaders: true,\n      use: [orgSessionMiddleware],\n      metadata: {\n        $Infer: {\n          body: {}\n        }\n      }\n    },\n    async (ctx) => {\n      const { session, user } = ctx.context.session;\n      const organizationId = ctx.body.organizationId ?? session.activeOrganizationId;\n      if (!organizationId) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The session is missing an active organization id to delete a role. Either set an active org id, or pass an organizationId in the request body.`\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        });\n      }\n      const member = await ctx.context.adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          {\n            field: \"userId\",\n            value: user.id,\n            operator: \"eq\",\n            connector: \"AND\"\n          }\n        ]\n      });\n      if (!member) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not a member of the organization to delete a role.`,\n          {\n            userId: user.id,\n            organizationId\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION\n        });\n      }\n      const canDeleteRole = await hasPermission(\n        {\n          options,\n          organizationId,\n          permissions: {\n            ac: [\"delete\"]\n          },\n          role: member.role\n        },\n        ctx\n      );\n      if (!canDeleteRole) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not permitted to delete a role. If this is unexpected, please make sure the role associated to that member has the \"ac\" resource with the \"delete\" permission.`,\n          {\n            userId: user.id,\n            organizationId,\n            role: member.role\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_A_ROLE\n        });\n      }\n      if (\"roleName\" in ctx.body) {\n        const roleName = ctx.body.roleName;\n        const defaultRoles = options.roles ? Object.keys(options.roles) : [\"owner\", \"admin\", \"member\"];\n        if (defaultRoles.includes(roleName)) {\n          ctx.context.logger.error(\n            `[Dynamic Access Control] Cannot delete a pre-defined role.`,\n            {\n              roleName,\n              organizationId,\n              defaultRoles\n            }\n          );\n          throw new APIError(\"BAD_REQUEST\", {\n            message: ORGANIZATION_ERROR_CODES.CANNOT_DELETE_A_PRE_DEFINED_ROLE\n          });\n        }\n      }\n      let condition;\n      if (\"roleName\" in ctx.body) {\n        condition = {\n          field: \"role\",\n          value: ctx.body.roleName,\n          operator: \"eq\",\n          connector: \"AND\"\n        };\n      } else {\n        condition = {\n          field: \"id\",\n          value: ctx.body.roleId,\n          operator: \"eq\",\n          connector: \"AND\"\n        };\n      }\n      const existingRoleInDB = await ctx.context.adapter.findOne({\n        model: \"organizationRole\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          condition\n        ]\n      });\n      if (!existingRoleInDB) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The role name/id does not exist in the database.`,\n          {\n            ...\"roleName\" in ctx.body ? { roleName: ctx.body.roleName } : { roleId: ctx.body.roleId },\n            organizationId\n          }\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ROLE_NOT_FOUND\n        });\n      }\n      existingRoleInDB.permission = JSON.parse(\n        existingRoleInDB.permission\n      );\n      await ctx.context.adapter.delete({\n        model: \"organizationRole\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          condition\n        ]\n      });\n      return ctx.json({\n        success: true\n      });\n    }\n  );\n};\nconst listOrgRoles = (options) => {\n  getAdditionalFields(options, false);\n  return createAuthEndpoint(\n    \"/organization/list-roles\",\n    {\n      method: \"GET\",\n      use: [orgSessionMiddleware],\n      query: z.object({\n        organizationId: z.string().optional().meta({\n          description: \"The id of the organization to list roles for. If not provided, the user's active organization will be used.\"\n        })\n      }).optional(),\n      metadata: {\n        $Infer: {\n          query: {}\n        }\n      }\n    },\n    async (ctx) => {\n      const { session, user } = ctx.context.session;\n      const organizationId = ctx.query?.organizationId ?? session.activeOrganizationId;\n      if (!organizationId) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The session is missing an active organization id to list roles. Either set an active org id, or pass an organizationId in the request query.`\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        });\n      }\n      const member = await ctx.context.adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          {\n            field: \"userId\",\n            value: user.id,\n            operator: \"eq\",\n            connector: \"AND\"\n          }\n        ]\n      });\n      if (!member) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not a member of the organization to list roles.`,\n          {\n            userId: user.id,\n            organizationId\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION\n        });\n      }\n      const canListRoles = await hasPermission(\n        {\n          options,\n          organizationId,\n          permissions: {\n            ac: [\"read\"]\n          },\n          role: member.role\n        },\n        ctx\n      );\n      if (!canListRoles) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not permitted to list roles.`,\n          {\n            userId: user.id,\n            organizationId,\n            role: member.role\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_A_ROLE\n        });\n      }\n      let roles = await ctx.context.adapter.findMany({\n        model: \"organizationRole\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          }\n        ]\n      });\n      roles = roles.map((x) => ({\n        ...x,\n        permission: JSON.parse(x.permission)\n      }));\n      return ctx.json(roles);\n    }\n  );\n};\nconst getOrgRole = (options) => {\n  getAdditionalFields(options, false);\n  return createAuthEndpoint(\n    \"/organization/get-role\",\n    {\n      method: \"GET\",\n      use: [orgSessionMiddleware],\n      query: z.object({\n        organizationId: z.string().optional().meta({\n          description: \"The id of the organization to read a role for. If not provided, the user's active organization will be used.\"\n        })\n      }).and(\n        z.union([\n          z.object({\n            roleName: z.string().meta({\n              description: \"The name of the role to read\"\n            })\n          }),\n          z.object({\n            roleId: z.string().meta({\n              description: \"The id of the role to read\"\n            })\n          })\n        ])\n      ).optional(),\n      metadata: {\n        $Infer: {\n          query: {}\n        }\n      }\n    },\n    async (ctx) => {\n      const { session, user } = ctx.context.session;\n      const organizationId = ctx.query?.organizationId ?? session.activeOrganizationId;\n      if (!organizationId) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The session is missing an active organization id to read a role. Either set an active org id, or pass an organizationId in the request query.`\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        });\n      }\n      const member = await ctx.context.adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          {\n            field: \"userId\",\n            value: user.id,\n            operator: \"eq\",\n            connector: \"AND\"\n          }\n        ]\n      });\n      if (!member) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not a member of the organization to read a role.`,\n          {\n            userId: user.id,\n            organizationId\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION\n        });\n      }\n      const canListRoles = await hasPermission(\n        {\n          options,\n          organizationId,\n          permissions: {\n            ac: [\"read\"]\n          },\n          role: member.role\n        },\n        ctx\n      );\n      if (!canListRoles) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not permitted to read a role.`,\n          {\n            userId: user.id,\n            organizationId,\n            role: member.role\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_READ_A_ROLE\n        });\n      }\n      let condition;\n      if (\"roleName\" in ctx.query) {\n        condition = {\n          field: \"role\",\n          value: ctx.query.roleName,\n          operator: \"eq\",\n          connector: \"AND\"\n        };\n      } else {\n        condition = {\n          field: \"id\",\n          value: ctx.query.roleId,\n          operator: \"eq\",\n          connector: \"AND\"\n        };\n      }\n      let role = await ctx.context.adapter.findOne({\n        model: \"organizationRole\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          condition\n        ]\n      });\n      if (!role) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The role name/id does not exist in the database.`,\n          {\n            ...\"roleName\" in ctx.query ? { roleName: ctx.query.roleName } : { roleId: ctx.query.roleId },\n            organizationId\n          }\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ROLE_NOT_FOUND\n        });\n      }\n      role.permission = JSON.parse(role.permission);\n      return ctx.json(role);\n    }\n  );\n};\nconst updateOrgRole = (options) => {\n  const { additionalFieldsSchema} = getAdditionalFields(options, true);\n  return createAuthEndpoint(\n    \"/organization/update-role\",\n    {\n      method: \"POST\",\n      body: z.object({\n        organizationId: z.string().optional().meta({\n          description: \"The id of the organization to update the role in. If not provided, the user's active organization will be used.\"\n        }),\n        data: z.object({\n          permission: z.record(z.string(), z.array(z.string())).optional().meta({\n            description: \"The permission to update the role with\"\n          }),\n          roleName: z.string().optional().meta({\n            description: \"The name of the role to update\"\n          }),\n          ...additionalFieldsSchema.shape\n        })\n      }).and(\n        z.union([\n          z.object({\n            roleName: z.string().meta({\n              description: \"The name of the role to update\"\n            })\n          }),\n          z.object({\n            roleId: z.string().meta({\n              description: \"The id of the role to update\"\n            })\n          })\n        ])\n      ),\n      metadata: {\n        $Infer: {\n          body: {}\n        }\n      },\n      use: [orgSessionMiddleware]\n    },\n    async (ctx) => {\n      const { session, user } = ctx.context.session;\n      const ac = options.ac;\n      if (!ac) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The organization plugin is missing a pre-defined ac instance.`,\n          `\nPlease refer to the documentation here: https://better-auth.com/docs/plugins/organization#dynamic-access-control`\n        );\n        throw new APIError(\"NOT_IMPLEMENTED\", {\n          message: ORGANIZATION_ERROR_CODES.MISSING_AC_INSTANCE\n        });\n      }\n      const organizationId = ctx.body.organizationId ?? session.activeOrganizationId;\n      if (!organizationId) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The session is missing an active organization id to update a role. Either set an active org id, or pass an organizationId in the request body.`\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n        });\n      }\n      const member = await ctx.context.adapter.findOne({\n        model: \"member\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          {\n            field: \"userId\",\n            value: user.id,\n            operator: \"eq\",\n            connector: \"AND\"\n          }\n        ]\n      });\n      if (!member) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not a member of the organization to update a role.`,\n          {\n            userId: user.id,\n            organizationId\n          }\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_A_MEMBER_OF_THIS_ORGANIZATION\n        });\n      }\n      const canUpdateRole = await hasPermission(\n        {\n          options,\n          organizationId,\n          role: member.role,\n          permissions: {\n            ac: [\"update\"]\n          }\n        },\n        ctx\n      );\n      if (!canUpdateRole) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The user is not permitted to update a role.`\n        );\n        throw new APIError(\"FORBIDDEN\", {\n          message: ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_A_ROLE\n        });\n      }\n      let condition;\n      if (\"roleName\" in ctx.body) {\n        condition = {\n          field: \"role\",\n          value: ctx.body.roleName,\n          operator: \"eq\",\n          connector: \"AND\"\n        };\n      } else {\n        condition = {\n          field: \"id\",\n          value: ctx.body.roleId,\n          operator: \"eq\",\n          connector: \"AND\"\n        };\n      }\n      let role = await ctx.context.adapter.findOne({\n        model: \"organizationRole\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          condition\n        ]\n      });\n      if (!role) {\n        ctx.context.logger.error(\n          `[Dynamic Access Control] The role name/id does not exist in the database.`,\n          {\n            ...\"roleName\" in ctx.body ? { roleName: ctx.body.roleName } : { roleId: ctx.body.roleId },\n            organizationId\n          }\n        );\n        throw new APIError(\"BAD_REQUEST\", {\n          message: ORGANIZATION_ERROR_CODES.ROLE_NOT_FOUND\n        });\n      }\n      role.permission = role.permission ? JSON.parse(role.permission) : void 0;\n      const {\n        permission: _,\n        roleName: __,\n        ...additionalFields\n      } = ctx.body.data;\n      let updateData = {\n        ...additionalFields\n      };\n      if (ctx.body.data.permission) {\n        let newPermission = ctx.body.data.permission;\n        await checkForInvalidResources({ ac, ctx, permission: newPermission });\n        await checkIfMemberHasPermission({\n          ctx,\n          member,\n          options,\n          organizationId,\n          permissionRequired: newPermission,\n          user,\n          action: \"update\"\n        });\n        updateData.permission = newPermission;\n      }\n      if (ctx.body.data.roleName) {\n        let newRoleName = ctx.body.data.roleName;\n        newRoleName = normalizeRoleName(newRoleName);\n        await checkIfRoleNameIsTakenByPreDefinedRole({\n          role: newRoleName,\n          organizationId,\n          options,\n          ctx\n        });\n        await checkIfRoleNameIsTakenByRoleInDB({\n          role: newRoleName,\n          organizationId,\n          ctx\n        });\n        updateData.role = newRoleName;\n      }\n      const update = {\n        ...updateData,\n        ...updateData.permission ? { permission: JSON.stringify(updateData.permission) } : {}\n      };\n      await ctx.context.adapter.update({\n        model: \"organizationRole\",\n        where: [\n          {\n            field: \"organizationId\",\n            value: organizationId,\n            operator: \"eq\",\n            connector: \"AND\"\n          },\n          condition\n        ],\n        update\n      });\n      return ctx.json({\n        success: true,\n        roleData: {\n          ...role,\n          ...update,\n          permission: updateData.permission || role.permission || null\n        }\n      });\n    }\n  );\n};\nasync function checkForInvalidResources({\n  ac,\n  ctx,\n  permission\n}) {\n  const validResources = Object.keys(ac.statements);\n  const providedResources = Object.keys(permission);\n  const hasInvalidResource = providedResources.some(\n    (r) => !validResources.includes(r)\n  );\n  if (hasInvalidResource) {\n    ctx.context.logger.error(\n      `[Dynamic Access Control] The provided permission includes an invalid resource.`,\n      {\n        providedResources,\n        validResources\n      }\n    );\n    throw new APIError(\"BAD_REQUEST\", {\n      message: ORGANIZATION_ERROR_CODES.INVALID_RESOURCE\n    });\n  }\n}\nasync function checkIfMemberHasPermission({\n  ctx,\n  permissionRequired: permission,\n  options,\n  organizationId,\n  member,\n  user,\n  action\n}) {\n  const hasNecessaryPermissions = [];\n  const permissionEntries = Object.entries(permission);\n  for await (const [resource, permissions] of permissionEntries) {\n    for await (const perm of permissions) {\n      hasNecessaryPermissions.push({\n        resource: { [resource]: [perm] },\n        hasPermission: await hasPermission(\n          {\n            options,\n            organizationId,\n            permissions: { [resource]: [perm] },\n            useMemoryCache: true,\n            role: member.role\n          },\n          ctx\n        )\n      });\n    }\n  }\n  const missingPermissions = hasNecessaryPermissions.filter((x) => x.hasPermission === false).map((x) => {\n    const key = Object.keys(x.resource)[0];\n    return `${key}:${x.resource[key][0]}`;\n  });\n  if (missingPermissions.length > 0) {\n    ctx.context.logger.error(\n      `[Dynamic Access Control] The user is missing permissions nessesary to ${action} a role with those set of permissions.\n`,\n      {\n        userId: user.id,\n        organizationId,\n        role: member.role,\n        missingPermissions\n      }\n    );\n    let errorMessage;\n    if (action === \"create\")\n      errorMessage = ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_CREATE_A_ROLE;\n    else if (action === \"update\")\n      errorMessage = ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_UPDATE_A_ROLE;\n    else if (action === \"delete\")\n      errorMessage = ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_DELETE_A_ROLE;\n    else if (action === \"read\")\n      errorMessage = ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_READ_A_ROLE;\n    else if (action === \"list\")\n      errorMessage = ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_LIST_A_ROLE;\n    else\n      errorMessage = ORGANIZATION_ERROR_CODES.YOU_ARE_NOT_ALLOWED_TO_GET_A_ROLE;\n    throw new APIError(\"FORBIDDEN\", {\n      message: errorMessage,\n      missingPermissions\n    });\n  }\n}\nasync function checkIfRoleNameIsTakenByPreDefinedRole({\n  options,\n  organizationId,\n  role,\n  ctx\n}) {\n  const defaultRoles = options.roles ? Object.keys(options.roles) : [\"owner\", \"admin\", \"member\"];\n  if (defaultRoles.includes(role)) {\n    ctx.context.logger.error(\n      `[Dynamic Access Control] The role name \"${role}\" is already taken by a pre-defined role.`,\n      {\n        role,\n        organizationId,\n        defaultRoles\n      }\n    );\n    throw new APIError(\"BAD_REQUEST\", {\n      message: ORGANIZATION_ERROR_CODES.ROLE_NAME_IS_ALREADY_TAKEN\n    });\n  }\n}\nasync function checkIfRoleNameIsTakenByRoleInDB({\n  organizationId,\n  role,\n  ctx\n}) {\n  const existingRoleInDB = await ctx.context.adapter.findOne({\n    model: \"organizationRole\",\n    where: [\n      {\n        field: \"organizationId\",\n        value: organizationId,\n        operator: \"eq\",\n        connector: \"AND\"\n      },\n      {\n        field: \"role\",\n        value: role,\n        operator: \"eq\",\n        connector: \"AND\"\n      }\n    ]\n  });\n  if (existingRoleInDB) {\n    ctx.context.logger.error(\n      `[Dynamic Access Control] The role name \"${role}\" is already taken by a role in the database.`,\n      {\n        role,\n        organizationId\n      }\n    );\n    throw new APIError(\"BAD_REQUEST\", {\n      message: ORGANIZATION_ERROR_CODES.ROLE_NAME_IS_ALREADY_TAKEN\n    });\n  }\n}\n\nfunction parseRoles(roles) {\n  return Array.isArray(roles) ? roles.join(\",\") : roles;\n}\nconst organization = (options) => {\n  let endpoints = {\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/create`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.createOrganization`\n     *\n     * **client:**\n     * `authClient.organization.create`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-create)\n     */\n    createOrganization: createOrganization(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/update`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.updateOrganization`\n     *\n     * **client:**\n     * `authClient.organization.update`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-update)\n     */\n    updateOrganization: updateOrganization(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/delete`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.deleteOrganization`\n     *\n     * **client:**\n     * `authClient.organization.delete`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-delete)\n     */\n    deleteOrganization: deleteOrganization(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/set-active`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.setActiveOrganization`\n     *\n     * **client:**\n     * `authClient.organization.setActive`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-set-active)\n     */\n    setActiveOrganization: setActiveOrganization(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/get-full-organization`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.getFullOrganization`\n     *\n     * **client:**\n     * `authClient.organization.getFullOrganization`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-get-full-organization)\n     */\n    getFullOrganization: getFullOrganization(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/list`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.listOrganizations`\n     *\n     * **client:**\n     * `authClient.organization.list`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-list)\n     */\n    listOrganizations: listOrganizations(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/invite-member`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.createInvitation`\n     *\n     * **client:**\n     * `authClient.organization.inviteMember`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-invite-member)\n     */\n    createInvitation: createInvitation(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/cancel-invitation`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.cancelInvitation`\n     *\n     * **client:**\n     * `authClient.organization.cancelInvitation`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-cancel-invitation)\n     */\n    cancelInvitation: cancelInvitation(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/accept-invitation`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.acceptInvitation`\n     *\n     * **client:**\n     * `authClient.organization.acceptInvitation`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-accept-invitation)\n     */\n    acceptInvitation: acceptInvitation(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/get-invitation`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.getInvitation`\n     *\n     * **client:**\n     * `authClient.organization.getInvitation`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-get-invitation)\n     */\n    getInvitation: getInvitation(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/reject-invitation`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.rejectInvitation`\n     *\n     * **client:**\n     * `authClient.organization.rejectInvitation`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-reject-invitation)\n     */\n    rejectInvitation: rejectInvitation(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/list-invitations`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.listInvitations`\n     *\n     * **client:**\n     * `authClient.organization.listInvitations`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-list-invitations)\n     */\n    listInvitations: listInvitations(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/get-active-member`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.getActiveMember`\n     *\n     * **client:**\n     * `authClient.organization.getActiveMember`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-get-active-member)\n     */\n    getActiveMember: getActiveMember(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/check-slug`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.checkOrganizationSlug`\n     *\n     * **client:**\n     * `authClient.organization.checkSlug`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-check-slug)\n     */\n    checkOrganizationSlug: checkOrganizationSlug(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/add-member`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.addMember`\n     *\n     * **client:**\n     * `authClient.organization.addMember`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-add-member)\n     */\n    addMember: addMember(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/remove-member`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.removeMember`\n     *\n     * **client:**\n     * `authClient.organization.removeMember`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-remove-member)\n     */\n    removeMember: removeMember(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/update-member-role`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.updateMemberRole`\n     *\n     * **client:**\n     * `authClient.organization.updateMemberRole`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-update-member-role)\n     */\n    updateMemberRole: updateMemberRole(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/leave`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.leaveOrganization`\n     *\n     * **client:**\n     * `authClient.organization.leave`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-leave)\n     */\n    leaveOrganization: leaveOrganization(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/list-members`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.listMembers`\n     *\n     * **client:**\n     * `authClient.organization.listMembers`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-list-members)\n     */\n    listUserInvitations: listUserInvitations(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/list-members`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.listMembers`\n     *\n     * **client:**\n     * `authClient.organization.listMembers`\n     */\n    listMembers: listMembers(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/get-active-member-role`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.getActiveMemberRole`\n     *\n     * **client:**\n     * `authClient.organization.getActiveMemberRole`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-get-active-member-role)\n     */\n    getActiveMemberRole: getActiveMemberRole(options)\n  };\n  const teamSupport = options?.teams?.enabled;\n  const teamEndpoints = {\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/create-team`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.createTeam`\n     *\n     * **client:**\n     * `authClient.organization.createTeam`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-create-team)\n     */\n    createTeam: createTeam(options),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/list-teams`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.listOrganizationTeams`\n     *\n     * **client:**\n     * `authClient.organization.listTeams`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-list-teams)\n     */\n    listOrganizationTeams: listOrganizationTeams(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/remove-team`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.removeTeam`\n     *\n     * **client:**\n     * `authClient.organization.removeTeam`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-remove-team)\n     */\n    removeTeam: removeTeam(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/update-team`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.updateTeam`\n     *\n     * **client:**\n     * `authClient.organization.updateTeam`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-method-organization-update-team)\n     */\n    updateTeam: updateTeam(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/set-active-team`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.setActiveTeam`\n     *\n     * **client:**\n     * `authClient.organization.setActiveTeam`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-set-active-team)\n     */\n    setActiveTeam: setActiveTeam(),\n    /**\n     * ### Endpoint\n     *\n     * GET `/organization/list-user-teams`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.listUserTeams`\n     *\n     * **client:**\n     * `authClient.organization.listUserTeams`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-set-active-team)\n     */\n    listUserTeams: listUserTeams(),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/list-team-members`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.listTeamMembers`\n     *\n     * **client:**\n     * `authClient.organization.listTeamMembers`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-set-active-team)\n     */\n    listTeamMembers: listTeamMembers(),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/add-team-member`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.addTeamMember`\n     *\n     * **client:**\n     * `authClient.organization.addTeamMember`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-add-team-member)\n     */\n    addTeamMember: addTeamMember(options),\n    /**\n     * ### Endpoint\n     *\n     * POST `/organization/remove-team-member`\n     *\n     * ### API Methods\n     *\n     * **server:**\n     * `auth.api.removeTeamMember`\n     *\n     * **client:**\n     * `authClient.organization.removeTeamMember`\n     *\n     * @see [Read our docs to learn more.](https://better-auth.com/docs/plugins/organization#api-remove-team-member)\n     */\n    removeTeamMember: removeTeamMember(options)\n  };\n  if (teamSupport) {\n    endpoints = {\n      ...endpoints,\n      ...teamEndpoints\n    };\n  }\n  const dynamicAccessControlEndpoints = {\n    createOrgRole: createOrgRole(options),\n    deleteOrgRole: deleteOrgRole(options),\n    listOrgRoles: listOrgRoles(options),\n    getOrgRole: getOrgRole(options),\n    updateOrgRole: updateOrgRole(options)\n  };\n  if (options?.dynamicAccessControl?.enabled) {\n    endpoints = {\n      ...endpoints,\n      ...dynamicAccessControlEndpoints\n    };\n  }\n  const roles = {\n    ...defaultRoles,\n    ...options?.roles\n  };\n  const teamSchema = teamSupport ? {\n    team: {\n      modelName: options?.schema?.team?.modelName,\n      fields: {\n        name: {\n          type: \"string\",\n          required: true,\n          fieldName: options?.schema?.team?.fields?.name\n        },\n        organizationId: {\n          type: \"string\",\n          required: true,\n          references: {\n            model: \"organization\",\n            field: \"id\"\n          },\n          fieldName: options?.schema?.team?.fields?.organizationId\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          fieldName: options?.schema?.team?.fields?.createdAt\n        },\n        updatedAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options?.schema?.team?.fields?.updatedAt,\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ...options?.schema?.team?.additionalFields || {}\n      }\n    },\n    teamMember: {\n      modelName: options?.schema?.teamMember?.modelName,\n      fields: {\n        teamId: {\n          type: \"string\",\n          required: true,\n          references: {\n            model: \"team\",\n            field: \"id\"\n          },\n          fieldName: options?.schema?.teamMember?.fields?.teamId\n        },\n        userId: {\n          type: \"string\",\n          required: true,\n          references: {\n            model: \"user\",\n            field: \"id\"\n          },\n          fieldName: options?.schema?.teamMember?.fields?.userId\n        },\n        createdAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options?.schema?.teamMember?.fields?.createdAt\n        }\n      }\n    }\n  } : {};\n  const organizationRoleSchema = options?.dynamicAccessControl?.enabled ? {\n    organizationRole: {\n      fields: {\n        organizationId: {\n          type: \"string\",\n          required: true,\n          references: {\n            model: \"organization\",\n            field: \"id\"\n          },\n          fieldName: options?.schema?.organizationRole?.fields?.organizationId\n        },\n        role: {\n          type: \"string\",\n          required: true,\n          fieldName: options?.schema?.organizationRole?.fields?.role\n        },\n        permission: {\n          type: \"string\",\n          required: true,\n          fieldName: options?.schema?.organizationRole?.fields?.permission\n        },\n        createdAt: {\n          type: \"date\",\n          required: true,\n          defaultValue: () => /* @__PURE__ */ new Date(),\n          fieldName: options?.schema?.organizationRole?.fields?.createdAt\n        },\n        updatedAt: {\n          type: \"date\",\n          required: false,\n          fieldName: options?.schema?.organizationRole?.fields?.updatedAt,\n          onUpdate: () => /* @__PURE__ */ new Date()\n        },\n        ...options?.schema?.organizationRole?.additionalFields || {}\n      },\n      modelName: options?.schema?.organizationRole?.modelName\n    }\n  } : {};\n  const schema = {\n    ...organizationRoleSchema,\n    ...teamSchema,\n    ...{\n      organization: {\n        modelName: options?.schema?.organization?.modelName,\n        fields: {\n          name: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            fieldName: options?.schema?.organization?.fields?.name\n          },\n          slug: {\n            type: \"string\",\n            required: true,\n            unique: true,\n            sortable: true,\n            fieldName: options?.schema?.organization?.fields?.slug\n          },\n          logo: {\n            type: \"string\",\n            required: false,\n            fieldName: options?.schema?.organization?.fields?.logo\n          },\n          createdAt: {\n            type: \"date\",\n            required: true,\n            fieldName: options?.schema?.organization?.fields?.createdAt\n          },\n          metadata: {\n            type: \"string\",\n            required: false,\n            fieldName: options?.schema?.organization?.fields?.metadata\n          },\n          ...options?.schema?.organization?.additionalFields || {}\n        }\n      },\n      member: {\n        modelName: options?.schema?.member?.modelName,\n        fields: {\n          organizationId: {\n            type: \"string\",\n            required: true,\n            references: {\n              model: \"organization\",\n              field: \"id\"\n            },\n            fieldName: options?.schema?.member?.fields?.organizationId\n          },\n          userId: {\n            type: \"string\",\n            required: true,\n            fieldName: options?.schema?.member?.fields?.userId,\n            references: {\n              model: \"user\",\n              field: \"id\"\n            }\n          },\n          role: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            defaultValue: \"member\",\n            fieldName: options?.schema?.member?.fields?.role\n          },\n          createdAt: {\n            type: \"date\",\n            required: true,\n            fieldName: options?.schema?.member?.fields?.createdAt\n          },\n          ...options?.schema?.member?.additionalFields || {}\n        }\n      },\n      invitation: {\n        modelName: options?.schema?.invitation?.modelName,\n        fields: {\n          organizationId: {\n            type: \"string\",\n            required: true,\n            references: {\n              model: \"organization\",\n              field: \"id\"\n            },\n            fieldName: options?.schema?.invitation?.fields?.organizationId\n          },\n          email: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            fieldName: options?.schema?.invitation?.fields?.email\n          },\n          role: {\n            type: \"string\",\n            required: false,\n            sortable: true,\n            fieldName: options?.schema?.invitation?.fields?.role\n          },\n          ...teamSupport ? {\n            teamId: {\n              type: \"string\",\n              required: false,\n              sortable: true,\n              fieldName: options?.schema?.invitation?.fields?.teamId\n            }\n          } : {},\n          status: {\n            type: \"string\",\n            required: true,\n            sortable: true,\n            defaultValue: \"pending\",\n            fieldName: options?.schema?.invitation?.fields?.status\n          },\n          expiresAt: {\n            type: \"date\",\n            required: true,\n            fieldName: options?.schema?.invitation?.fields?.expiresAt\n          },\n          inviterId: {\n            type: \"string\",\n            references: {\n              model: \"user\",\n              field: \"id\"\n            },\n            fieldName: options?.schema?.invitation?.fields?.inviterId,\n            required: true\n          },\n          ...options?.schema?.invitation?.additionalFields || {}\n        }\n      }\n    }\n  };\n  const api = shimContext(endpoints, {\n    orgOptions: options || {},\n    roles,\n    getSession: async (context) => {\n      return await getSessionFromCtx(context);\n    }\n  });\n  return {\n    id: \"organization\",\n    endpoints: {\n      ...api,\n      hasPermission: createAuthEndpoint(\n        \"/organization/has-permission\",\n        {\n          method: \"POST\",\n          requireHeaders: true,\n          body: z.object({\n            organizationId: z.string().optional()\n          }).and(\n            z.union([\n              z.object({\n                permission: z.record(z.string(), z.array(z.string())),\n                permissions: z.undefined()\n              }),\n              z.object({\n                permission: z.undefined(),\n                permissions: z.record(z.string(), z.array(z.string()))\n              })\n            ])\n          ),\n          use: [orgSessionMiddleware],\n          metadata: {\n            $Infer: {\n              body: {}\n            },\n            openapi: {\n              description: \"Check if the user has permission\",\n              requestBody: {\n                content: {\n                  \"application/json\": {\n                    schema: {\n                      type: \"object\",\n                      properties: {\n                        permission: {\n                          type: \"object\",\n                          description: \"The permission to check\",\n                          deprecated: true\n                        },\n                        permissions: {\n                          type: \"object\",\n                          description: \"The permission to check\"\n                        }\n                      },\n                      required: [\"permissions\"]\n                    }\n                  }\n                }\n              },\n              responses: {\n                \"200\": {\n                  description: \"Success\",\n                  content: {\n                    \"application/json\": {\n                      schema: {\n                        type: \"object\",\n                        properties: {\n                          error: {\n                            type: \"string\"\n                          },\n                          success: {\n                            type: \"boolean\"\n                          }\n                        },\n                        required: [\"success\"]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        async (ctx) => {\n          const activeOrganizationId = ctx.body.organizationId || ctx.context.session.session.activeOrganizationId;\n          if (!activeOrganizationId) {\n            throw new APIError(\"BAD_REQUEST\", {\n              message: ORGANIZATION_ERROR_CODES.NO_ACTIVE_ORGANIZATION\n            });\n          }\n          const adapter = getOrgAdapter(ctx.context, options);\n          const member = await adapter.findMemberByOrgId({\n            userId: ctx.context.session.user.id,\n            organizationId: activeOrganizationId\n          });\n          if (!member) {\n            throw new APIError(\"UNAUTHORIZED\", {\n              message: ORGANIZATION_ERROR_CODES.USER_IS_NOT_A_MEMBER_OF_THE_ORGANIZATION\n            });\n          }\n          const result = await hasPermission(\n            {\n              role: member.role,\n              options: options || {},\n              permissions: ctx.body.permissions ?? ctx.body.permission,\n              organizationId: activeOrganizationId\n            },\n            ctx\n          );\n          return ctx.json({\n            error: null,\n            success: result\n          });\n        }\n      )\n    },\n    schema: {\n      ...schema,\n      session: {\n        fields: {\n          activeOrganizationId: {\n            type: \"string\",\n            required: false,\n            fieldName: options?.schema?.session?.fields?.activeOrganizationId\n          },\n          ...teamSupport ? {\n            activeTeamId: {\n              type: \"string\",\n              required: false,\n              fieldName: options?.schema?.session?.fields?.activeTeamId\n            }\n          } : {}\n        }\n      }\n    },\n    $Infer: {\n      Organization: {},\n      Invitation: {},\n      Member: {},\n      Team: teamSupport ? {} : {},\n      TeamMember: teamSupport ? {} : {},\n      ActiveOrganization: {}\n    },\n    $ERROR_CODES: ORGANIZATION_ERROR_CODES,\n    options\n  };\n};\n\nexport { organization as o, parseRoles as p };\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 15615, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/sebak/OneDrive/Pulpit/saas-starter-main/node_modules/.pnpm/better-auth%401.3.33_next%4015.4.0-canary.47_%40babel%2Bcore%407.28.5_%40playwright%2Btest%401.56.1_react-dom_j7qovgj7z77jiozburz7dnllgu/node_modules/better-auth/dist/plugins/organization/index.mjs"],"sourcesContent":["export { o as organization, p as parseRoles } from '../../shared/better-auth.uWoihDRP.mjs';\nimport 'better-call';\nimport 'zod';\nimport '@better-auth/core/middleware';\nimport '../../shared/better-auth.zbFvKBO6.mjs';\nimport '../../shared/better-auth.D9_vQR83.mjs';\nimport '@better-auth/core/error';\nimport '../../shared/better-auth.CW6D9eSx.mjs';\nimport '@better-auth/core/env';\nimport '@better-auth/utils/base64';\nimport '@better-auth/utils/hmac';\nimport '../../shared/better-auth.BKEtEpt0.mjs';\nimport '../../shared/better-auth.DR3R5wdU.mjs';\nimport '@better-auth/utils/binary';\nimport '../../shared/better-auth.Ih8C76Vo.mjs';\nimport '@better-auth/utils/random';\nimport '@better-auth/core/social-providers';\nimport '../../shared/better-auth.DEBtROF9.mjs';\nimport '../../shared/better-auth.BUPPRXfK.mjs';\nimport '@better-auth/utils/hash';\nimport '@noble/ciphers/chacha.js';\nimport '@noble/ciphers/utils.js';\nimport 'jose';\nimport '@noble/hashes/scrypt.js';\nimport '@better-auth/utils/hex';\nimport '@noble/hashes/utils.js';\nimport '../../shared/better-auth.B4Qoxdgc.mjs';\nimport '../../shared/better-auth.Cwj9dt6i.mjs';\nimport '@better-auth/core/db';\nimport 'kysely';\nimport 'defu';\nimport '../../crypto/index.mjs';\nimport 'jose/errors';\nimport '../../shared/better-auth.msGOU0m9.mjs';\nimport '../../shared/better-auth.ccXb5WNm.mjs';\nimport '@better-auth/core/utils';\nimport '../../shared/better-auth.BxexnJiR.mjs';\nimport '../../shared/better-auth.DevHHPLH.mjs';\nimport '../../shared/better-auth.BLxPPg5G.mjs';\nimport '../../shared/better-auth.DaEBQJp_.mjs';\n"],"names":[],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[0],"debugId":null}}]
}