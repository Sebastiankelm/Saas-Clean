name: Vercel Deployments

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

permissions:
  contents: read
  deployments: write

jobs:
  preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Pull Vercel preview configuration
        working-directory: apps/web
        run: pnpm dlx vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}

      - name: Build web app
        run: pnpm --filter=@saas-clean/web build

      - name: Create preview build
        working-directory: apps/web
        run: pnpm dlx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy preview build
        working-directory: apps/web
        run: pnpm dlx vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }}

  staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.12.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Pull staging configuration
        working-directory: apps/web
        run: pnpm dlx vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}

      - name: Build web app
        run: pnpm --filter=@saas-clean/web build

      - name: Create staging build
        working-directory: apps/web
        run: pnpm dlx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to staging
        working-directory: apps/web
        run: pnpm dlx vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} --target=production --meta stage=staging
